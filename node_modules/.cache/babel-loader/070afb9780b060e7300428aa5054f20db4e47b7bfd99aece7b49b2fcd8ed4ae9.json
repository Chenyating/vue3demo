{"ast":null,"code":"import agEditorMixins from './ag-editor-mixins';\nexport default {\n  name: 'AgSelect',\n  mixins: [agEditorMixins],\n  props: {},\n  data() {\n    return {};\n  },\n  computed: {\n    selectType() {\n      return this.componentProps.selectType;\n    },\n    componentProps() {\n      return Object.assign({}, {\n        selectType: 'horizon-select',\n        autoInit: false,\n        autoFocus: false,\n        option: {}\n      }, this.params?.cellEditorComponentProps || {});\n    }\n  },\n  mounted() {\n    this.agValue = this.params.value;\n    this.$nextTick(() => {\n      const {\n        autoFocus\n      } = this.componentProps;\n      if (autoFocus) {\n        this.focusSelect();\n      }\n    });\n  },\n  methods: {\n    triggerChange(records, type) {\n      const {\n        cellEditorComponentProps,\n        ...restAgParams\n      } = this.params;\n      const {\n        change\n      } = cellEditorComponentProps || {};\n      change?.(this.agValue, records, {\n        agParams: restAgParams\n      }, type);\n    },\n    handleChange(val, type) {\n      const {\n        multiple\n      } = this.componentProps;\n      if (multiple) {\n        const valArr = Array.isArray(val) ? val : [val];\n        this.triggerChange(valArr, type);\n      } else {\n        this.triggerChange(val, type);\n      }\n    },\n    handleBlur(e) {\n      this.triggerBlur(e);\n    },\n    handleFocus(e) {\n      this.triggerFocus(e);\n    },\n    focusSelect() {\n      this.$nextTick(() => {\n        this.$refs.select.focus();\n      });\n    }\n  }\n};","map":{"version":3,"names":["agEditorMixins","name","mixins","props","data","computed","selectType","componentProps","Object","assign","autoInit","autoFocus","option","params","cellEditorComponentProps","mounted","agValue","value","$nextTick","focusSelect","methods","triggerChange","records","type","restAgParams","change","agParams","handleChange","val","multiple","valArr","Array","isArray","handleBlur","e","triggerBlur","handleFocus","triggerFocus","$refs","select","focus"],"sources":["node_modules/@cndinfo/cube-design-web/src/components/ForGridComponents/cell-editor/AgSelect.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"selectType\"\n    ref=\"select\"\n    v-model=\"agValue\"\n    v-bind=\"componentProps\"\n    @blur=\"handleBlur\"\n    @focus=\"handleFocus\"\n    @change=\"handleChange\"\n  />\n</template>\n\n<script>\nimport agEditorMixins from './ag-editor-mixins'\n\nexport default {\n  name: 'AgSelect',\n  mixins: [agEditorMixins],\n  props: {},\n  data() {\n    return {}\n  },\n  computed: {\n    selectType() {\n      return this.componentProps.selectType\n    },\n    componentProps() {\n      return Object.assign(\n        {},\n        {\n          selectType: 'horizon-select',\n          autoInit: false,\n          autoFocus: false,\n          option: {}\n        },\n        this.params?.cellEditorComponentProps || {}\n      )\n    }\n  },\n  mounted() {\n    this.agValue = this.params.value\n    this.$nextTick(() => {\n      const { autoFocus } = this.componentProps\n      if (autoFocus) {\n        this.focusSelect()\n      }\n    })\n  },\n  methods: {\n    triggerChange(records, type) {\n      const { cellEditorComponentProps, ...restAgParams } = this.params\n\n      const { change } = cellEditorComponentProps || {}\n      change?.(this.agValue, records, { agParams: restAgParams }, type)\n    },\n    handleChange(val, type) {\n      const { multiple } = this.componentProps\n      if (multiple) {\n        const valArr = Array.isArray(val) ? val : [val]\n        this.triggerChange(valArr, type)\n      } else {\n        this.triggerChange(val, type)\n      }\n    },\n    handleBlur(e) {\n      this.triggerBlur(e)\n    },\n    handleFocus(e) {\n      this.triggerFocus(e)\n    },\n    focusSelect() {\n      this.$nextTick(() => {\n        this.$refs.select.focus()\n      })\n    }\n  }\n}\n</script>\n"],"mappings":"AAaA,OAAAA,cAAA;AAEA;EACAC,IAAA;EACAC,MAAA,GAAAF,cAAA;EACAG,KAAA;EACAC,KAAA;IACA;EACA;EACAC,QAAA;IACAC,WAAA;MACA,YAAAC,cAAA,CAAAD,UAAA;IACA;IACAC,eAAA;MACA,OAAAC,MAAA,CAAAC,MAAA,CACA,IACA;QACAH,UAAA;QACAI,QAAA;QACAC,SAAA;QACAC,MAAA;MACA,GACA,KAAAC,MAAA,EAAAC,wBAAA,MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,OAAA,QAAAH,MAAA,CAAAI,KAAA;IACA,KAAAC,SAAA;MACA;QAAAP;MAAA,SAAAJ,cAAA;MACA,IAAAI,SAAA;QACA,KAAAQ,WAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,cAAAC,OAAA,EAAAC,IAAA;MACA;QAAAT,wBAAA;QAAA,GAAAU;MAAA,SAAAX,MAAA;MAEA;QAAAY;MAAA,IAAAX,wBAAA;MACAW,MAAA,QAAAT,OAAA,EAAAM,OAAA;QAAAI,QAAA,EAAAF;MAAA,GAAAD,IAAA;IACA;IACAI,aAAAC,GAAA,EAAAL,IAAA;MACA;QAAAM;MAAA,SAAAtB,cAAA;MACA,IAAAsB,QAAA;QACA,MAAAC,MAAA,GAAAC,KAAA,CAAAC,OAAA,CAAAJ,GAAA,IAAAA,GAAA,IAAAA,GAAA;QACA,KAAAP,aAAA,CAAAS,MAAA,EAAAP,IAAA;MACA;QACA,KAAAF,aAAA,CAAAO,GAAA,EAAAL,IAAA;MACA;IACA;IACAU,WAAAC,CAAA;MACA,KAAAC,WAAA,CAAAD,CAAA;IACA;IACAE,YAAAF,CAAA;MACA,KAAAG,YAAA,CAAAH,CAAA;IACA;IACAf,YAAA;MACA,KAAAD,SAAA;QACA,KAAAoB,KAAA,CAAAC,MAAA,CAAAC,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}