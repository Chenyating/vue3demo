{"ast":null,"code":"import '../../../../lib/styles/components/Pagination.scss';\nimport analytics from '../../../utils/analytics';\nimport { Pagination as ElPagination } from 'element-ui';\nexport default {\n  name: 'Pagination',\n  components: {\n    ElPagination\n  },\n  props: {\n    // 是否使用小型分页样式\n    small: {\n      type: Boolean,\n      default: true\n    },\n    // 后端接口页码是否 0 开始\n    hasZeroPagination: {\n      type: Boolean,\n      default: false\n    },\n    // 是否为分页按钮添加背景色\n    background: {\n      type: Boolean,\n      default: false\n    },\n    // 每页显示条目个数，支持 .sync 修饰符\n    // pageSize: {\n    //   type: Number,\n    //   default: 10\n    // },\n    // 总条目数\n    total: {\n      type: Number,\n      default: 0\n    },\n    // 页码按钮的数量，当总页数超过该值时会折叠\n    pagerCount: {\n      type: Number,\n      default: 5\n    },\n    // 当前页数，支持 .sync 修饰符\n    // currentPage: {\n    //   type: Number,\n    //   default: 1\n    // },\n    // 组件布局，子组件名用逗号分隔\n    // sizes, prev, pager, next, jumper, ->, total, slot\n    layout: {\n      type: String,\n      default: 'total, prev, pager, next, sizes, jumper'\n    },\n    // 每页显示条目个数, 支持 .sync 修饰符\n    pageSizes: {\n      type: Array,\n      default: () => [10, 20, 30, 50, 100, 200]\n    },\n    // 每页显示个数选择器的下拉框类名\n    popperClass: {\n      type: String,\n      default: ''\n    },\n    // 替代图标显示的上一页文字\n    prevText: {\n      type: String,\n      default: ''\n    },\n    // 替代图标显示的下一页文字\n    nextText: {\n      type: String,\n      default: ''\n    },\n    // 是否禁用\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    // 一页时是否隐藏\n    hideOnSinglePage: {\n      type: Boolean,\n      default: false\n    },\n    // 非el\n    // 每页条数\n    limit: {\n      type: Number,\n      default: 20\n    },\n    // 当前页\n    page: {\n      type: Number,\n      default: 0\n    },\n    // 页码、页数切换事件\n    event: {\n      type: Function,\n      default: () => {}\n    },\n    // 隐藏分页组件\n    hidden: {\n      type: Boolean,\n      default: false\n    },\n    // 取消布局占位\n    fixed: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      currentPage: this.isZero() ? this.page + 1 : this.page,\n      pageSize: this.limit,\n      defaultPage: JSON.parse(JSON.stringify(this.page))\n    };\n  },\n  watch: {\n    total: {\n      handler(val) {\n        this.totalHeightLight(val);\n      },\n      immediate: true\n    },\n    page() {\n      this.currentPage = this.isZero() ? this.page + 1 : this.page;\n    }\n  },\n  mounted() {\n    this.totalHeightLight(this.total);\n  },\n  methods: {\n    totalHeightLight(num) {\n      this.$nextTick(() => {\n        if (this.$el) {\n          const dom = this.$el.querySelector('.el-pagination__total');\n          if (dom && dom.innerHTML) {\n            const innerHtml = `共 <span class=\"suffix__total__color\">${num}</span> 条`;\n            dom.innerHTML = innerHtml;\n          }\n        }\n      });\n    },\n    isZero() {\n      return this.hasZeroPagination || this.defaultPage === 0;\n    },\n    // 不知道干嘛的\n    resetPage(page = 1) {\n      this.currentPage = page;\n    },\n    sizeChange(val) {\n      this.currentPage = this.isZero() ? this.defaultPage + 1 : this.defaultPage;\n      this.event({\n        limit: val,\n        page: this.defaultPage\n      });\n    },\n    currentChange(val) {\n      this.event({\n        limit: this.limit,\n        page: this.isZero() ? val - 1 : val // 从 0 开始则减一页\n      });\n\n      try {\n        const analyticsInstance = analytics.getAnalyticsInstance(this);\n        analyticsInstance.reportEvent('pagination_click');\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n};","map":{"version":3,"names":["analytics","Pagination","ElPagination","name","components","props","small","type","Boolean","default","hasZeroPagination","background","total","Number","pagerCount","layout","String","pageSizes","Array","popperClass","prevText","nextText","disabled","hideOnSinglePage","limit","page","event","Function","hidden","fixed","data","currentPage","isZero","pageSize","defaultPage","JSON","parse","stringify","watch","handler","val","totalHeightLight","immediate","mounted","methods","num","$nextTick","$el","dom","querySelector","innerHTML","innerHtml","resetPage","sizeChange","currentChange","analyticsInstance","getAnalyticsInstance","reportEvent","e","console","log"],"sources":["node_modules/@cndinfo/cube-design-web/src/components/Pagination/src/index.vue"],"sourcesContent":["<template>\n  <div\n    class=\"cnd-pagination cube-pagination\"\n    :class=\"{ hidden: hidden, 'fix-pagination': fixed }\"\n  >\n    <slot name=\"pagination-left\" />\n    <el-pagination\n      v-bind=\"$attrs\"\n      :small=\"small\"\n      :background=\"background\"\n      :page-size=\"limit\"\n      :total=\"total\"\n      :pager-count=\"pagerCount\"\n      :current-page.sync=\"currentPage\"\n      :layout=\"layout\"\n      :page-sizes=\"pageSizes\"\n      :popper-class=\"popperClass\"\n      :prev-text=\"prevText\"\n      :next-text=\"nextText\"\n      :disabled=\"disabled\"\n      :hide-on-single-page=\"hideOnSinglePage\"\n      v-on=\"$listeners\"\n      @size-change=\"sizeChange\"\n      @current-change=\"currentChange\"\n    >\n      <!-- :page-size=\"limit\"\n      :current-page.sync=\"activePage\" -->\n      <slot />\n    </el-pagination>\n  </div>\n</template>\n\n<script>\nimport '../../../../lib/styles/components/Pagination.scss'\nimport analytics from '../../../utils/analytics'\nimport { Pagination as ElPagination } from 'element-ui'\nexport default {\n  name: 'Pagination',\n  components: {\n    ElPagination\n  },\n  props: {\n    // 是否使用小型分页样式\n    small: {\n      type: Boolean,\n      default: true\n    },\n    // 后端接口页码是否 0 开始\n    hasZeroPagination: {\n      type: Boolean,\n      default: false\n    },\n    // 是否为分页按钮添加背景色\n    background: {\n      type: Boolean,\n      default: false\n    },\n    // 每页显示条目个数，支持 .sync 修饰符\n    // pageSize: {\n    //   type: Number,\n    //   default: 10\n    // },\n    // 总条目数\n    total: {\n      type: Number,\n      default: 0\n    },\n    // 页码按钮的数量，当总页数超过该值时会折叠\n    pagerCount: {\n      type: Number,\n      default: 5\n    },\n    // 当前页数，支持 .sync 修饰符\n    // currentPage: {\n    //   type: Number,\n    //   default: 1\n    // },\n    // 组件布局，子组件名用逗号分隔\n    // sizes, prev, pager, next, jumper, ->, total, slot\n    layout: {\n      type: String,\n      default: 'total, prev, pager, next, sizes, jumper'\n    },\n    // 每页显示条目个数, 支持 .sync 修饰符\n    pageSizes: {\n      type: Array,\n      default: () => [10, 20, 30, 50, 100, 200]\n    },\n    // 每页显示个数选择器的下拉框类名\n    popperClass: {\n      type: String,\n      default: ''\n    },\n    // 替代图标显示的上一页文字\n    prevText: {\n      type: String,\n      default: ''\n    },\n    // 替代图标显示的下一页文字\n    nextText: {\n      type: String,\n      default: ''\n    },\n    // 是否禁用\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    // 一页时是否隐藏\n    hideOnSinglePage: {\n      type: Boolean,\n      default: false\n    },\n    // 非el\n    // 每页条数\n    limit: {\n      type: Number,\n      default: 20\n    },\n    // 当前页\n    page: {\n      type: Number,\n      default: 0\n    },\n    // 页码、页数切换事件\n    event: {\n      type: Function,\n      default: () => {}\n    },\n    // 隐藏分页组件\n    hidden: {\n      type: Boolean,\n      default: false\n    },\n    // 取消布局占位\n    fixed: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      currentPage: this.isZero() ? this.page + 1 : this.page,\n      pageSize: this.limit,\n      defaultPage: JSON.parse(JSON.stringify(this.page))\n    }\n  },\n  watch: {\n    total: {\n      handler(val) {\n        this.totalHeightLight(val)\n      },\n      immediate: true\n    },\n    page() {\n      this.currentPage = this.isZero() ? this.page + 1 : this.page\n    }\n  },\n  mounted() {\n    this.totalHeightLight(this.total)\n  },\n  methods: {\n    totalHeightLight(num) {\n      this.$nextTick(() => {\n        if (this.$el) {\n          const dom = this.$el.querySelector('.el-pagination__total')\n          if (dom && dom.innerHTML) {\n            const innerHtml = `共 <span class=\"suffix__total__color\">${num}</span> 条`\n            dom.innerHTML = innerHtml\n          }\n        }\n      })\n    },\n    isZero() {\n      return this.hasZeroPagination || this.defaultPage === 0\n    },\n    // 不知道干嘛的\n    resetPage(page = 1) {\n      this.currentPage = page\n    },\n    sizeChange(val) {\n      this.currentPage = this.isZero() ? this.defaultPage + 1 : this.defaultPage\n      this.event({\n        limit: val,\n        page: this.defaultPage\n      })\n    },\n    currentChange(val) {\n      this.event({\n        limit: this.limit,\n        page: this.isZero() ? val - 1 : val // 从 0 开始则减一页\n      })\n      try {\n        const analyticsInstance = analytics.getAnalyticsInstance(this)\n        analyticsInstance.reportEvent('pagination_click')\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  }\n}\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}