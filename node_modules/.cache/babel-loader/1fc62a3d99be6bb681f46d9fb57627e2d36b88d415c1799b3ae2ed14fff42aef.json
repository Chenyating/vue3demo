{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport aggridCount from '../CommonAgGrid/src/gridTotal';\nexport default {\n  components: {\n    aggridCount\n  },\n  computed: {\n    selectedDisabled() {\n      return this.params.data._selectedDisabled;\n    },\n    countList() {\n      return this.params.data._childCount;\n    },\n    isChecked() {\n      const {\n        apiKey = 'gridApi'\n      } = this.params.context;\n      const fatherapi = this.params.context.componentParent[apiKey];\n      if (!fatherapi) {\n        throw new Error('请确认父组件的componentParent指向的gridApi是否存在');\n      }\n      const selected = fatherapi.getRowNode(this.params.data.parentId).data._selectedKeys;\n      // !!selected.length &&\n      return selected.includes(this.params.data[this.params.context.childRowKey]);\n    }\n  },\n  methods: {\n    handleCheckAllChange(e) {\n      const {\n        childrenListKey = '_details',\n        apiKey = 'gridApi',\n        childRowKey,\n        componentParent\n      } = this.params.context;\n      const fatherapi = componentParent[apiKey];\n      const rowClassName = '.ag-pinned-left-cols-container .ag-details-row';\n      // 本身\n      this.params.node.selected = e;\n      const isFullRow = componentParent.gridOptions.embedFullWidthRows;\n      const detail_row = isFullRow ? document.querySelectorAll(rowClassName) : null;\n      // 循环主表\n      fatherapi.forEachNode(node => {\n        if (this.params.data.parentId === node.id) {\n          if (e) {\n            node.data._selectedKeys.push(this.params.data[childRowKey]);\n          } else {\n            node.data._selectedKeys = node.data._selectedKeys.filter(item => item !== this.params.data[childRowKey]);\n          }\n          if (detail_row) {\n            this.findEl(detail_row, node.detailNode.id, this.params.node.rowIndex, e ? 'add' : 'remove');\n          }\n          node.data._selected = node.data._selectedKeys.length === node.data[childrenListKey].length;\n        }\n      });\n      const rowsToUpdate = fatherapi.getRenderedNodes().filter(node => node.data.parentId === this.params.data.parentId);\n      this.params.api.refreshCells({\n        rows: rowsToUpdate,\n        force: true\n      });\n      fatherapi.refreshCells({\n        force: true\n      });\n    },\n    findEl(domList, customer_id, subIndex, type) {\n      const parentSelector = `[row-id=\"${customer_id}\"]`;\n      const parentEl = Array.from(domList).find(el => el.parentElement?.matches(parentSelector));\n      if (!parentEl) return;\n      const el = parentEl.children[subIndex];\n      el?.classList[type]?.('ag-row-focus', 'ag-row-selected');\n    }\n  }\n};","map":{"version":3,"names":["aggridCount","components","computed","selectedDisabled","params","data","_selectedDisabled","countList","_childCount","isChecked","apiKey","context","fatherapi","componentParent","Error","selected","getRowNode","parentId","_selectedKeys","includes","childRowKey","methods","handleCheckAllChange","e","childrenListKey","rowClassName","node","isFullRow","gridOptions","embedFullWidthRows","detail_row","document","querySelectorAll","forEachNode","id","push","filter","item","findEl","detailNode","rowIndex","_selected","length","rowsToUpdate","getRenderedNodes","api","refreshCells","rows","force","domList","customer_id","subIndex","type","parentSelector","parentEl","Array","from","find","el","parentElement","matches","children","classList"],"sources":["node_modules/@cndinfo/cube-design-web/src/components/AgGridExtend/childSelect.vue"],"sourcesContent":["<template>\n  <span>\n    <div v-if=\"countList && countList.length > 0\">\n      <aggridCount flag=\"footer\" :count-list=\"countList\" />\n    </div>\n    <el-checkbox\n      v-else\n      :checked=\"isChecked\"\n      :disabled=\"selectedDisabled\"\n      @change=\"handleCheckAllChange\"\n    />\n  </span>\n</template>\n\n<script>\nimport aggridCount from '../CommonAgGrid/src/gridTotal'\nexport default {\n  components: { aggridCount },\n  computed: {\n    selectedDisabled() {\n      return this.params.data._selectedDisabled\n    },\n    countList() {\n      return this.params.data._childCount\n    },\n    isChecked() {\n      const { apiKey = 'gridApi' } = this.params.context\n      const fatherapi = this.params.context.componentParent[apiKey]\n\n      if (!fatherapi) {\n        throw new Error('请确认父组件的componentParent指向的gridApi是否存在')\n      }\n      const selected = fatherapi.getRowNode(this.params.data.parentId).data\n        ._selectedKeys\n      // !!selected.length &&\n      return selected.includes(\n        this.params.data[this.params.context.childRowKey]\n      )\n    }\n  },\n  methods: {\n    handleCheckAllChange(e) {\n      const {\n        childrenListKey = '_details',\n        apiKey = 'gridApi',\n        childRowKey,\n        componentParent\n      } = this.params.context\n      const fatherapi = componentParent[apiKey]\n      const rowClassName = '.ag-pinned-left-cols-container .ag-details-row'\n      // 本身\n      this.params.node.selected = e\n      const isFullRow = componentParent.gridOptions.embedFullWidthRows\n      const detail_row = isFullRow\n        ? document.querySelectorAll(\n          rowClassName\n        )\n        : null\n      // 循环主表\n      fatherapi.forEachNode((node) => {\n        if (this.params.data.parentId === node.id) {\n          if (e) {\n            node.data._selectedKeys.push(this.params.data[childRowKey])\n          } else {\n            node.data._selectedKeys = node.data._selectedKeys.filter(\n              (item) => item !== this.params.data[childRowKey]\n            )\n          }\n          if (detail_row) {\n            this.findEl(\n              detail_row,\n              node.detailNode.id,\n              this.params.node.rowIndex,\n              e ? 'add' : 'remove'\n            )\n          }\n          node.data._selected =\n            node.data._selectedKeys.length === node.data[childrenListKey].length\n        }\n      })\n      const rowsToUpdate = fatherapi\n        .getRenderedNodes()\n        .filter((node) => node.data.parentId === this.params.data.parentId)\n      this.params.api.refreshCells({ rows: rowsToUpdate, force: true })\n      fatherapi.refreshCells({ force: true })\n    },\n    findEl(domList, customer_id, subIndex, type) {\n      const parentSelector = `[row-id=\"${customer_id}\"]`\n      const parentEl = Array.from(domList).find(el => el.parentElement?.matches(parentSelector))\n      if (!parentEl) return\n\n      const el = parentEl.children[subIndex]\n      el?.classList[type]?.('ag-row-focus', 'ag-row-selected')\n    }\n  }\n}\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}