{"ast":null,"code":"import { Format, MessageUtil, request } from '@cndinfo/cube-web-utils';\nimport '../../../../lib/styles/components/Filter.scss';\nimport analytics from '../../../utils/analytics';\nimport localFilterBtn from '../../FilterBtn/index.js';\nexport default {\n  name: 'Filter',\n  components: {\n    localFilterBtn\n  },\n  props: {\n    type: {\n      type: String,\n      default: 'top'\n    },\n    // 组件内边距\n    padding: {\n      type: Number,\n      default: 10\n    },\n    // 参数控制按钮 false  为展示, true 为隐藏\n    paramsButton: {\n      type: Boolean,\n      default: false\n    },\n    // 按钮保留\n    showButton: {\n      type: Boolean,\n      default: false\n    },\n    // form的ref名称\n    refForm: {\n      type: String,\n      default: 'filterForm'\n    },\n    // form的rules\n    rules: {\n      type: Object,\n      default: () => {}\n    },\n    // form的标题宽度\n    labelWidth: {\n      type: String,\n      default: '85px'\n    },\n    // form的model\n    model: {\n      type: Object,\n      default: () => {}\n    },\n    // form的size\n    size: {\n      type: String,\n      default: 'small'\n    },\n    posiRight: {\n      type: Boolean,\n      default: false\n    },\n    posiBtn: {\n      type: Boolean,\n      default: false\n    },\n    isCollapse: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      posi_left: 0,\n      // isCollapse: false, // 是否展开更多查询条件\n      // filterControlText: this.$t(\"components.viewMore\"),\n      // rotate: 'rotate(0deg)',\n      markId: '',\n      // 表单树及定位\n      formNum: 0\n      // 参数\n      // paramForm: { name: \"\" },\n      // formRules: {\n      //   name: [\n      //     {\n      //       required: true,\n      //       message: this.$t(\"grid.others.theParameterNameCannotBeEmpty\"),\n      //       trigger: \"blur\"\n      //     }\n      //   ]\n      // },\n      // dialogVisible: {\n      //   save: false,\n      //   sel: false\n      // },\n      // columnDefs: [\n      //   {\n      //     field: \"sParamType\",\n      //     headerName: this.$t(\"grid.others.parameterNameKey\")\n      //   },\n      //   {\n      //     headerName: this.$t(\"grid.others.operation\"),\n      //     width: 40,\n      //     cellRendererFramework: TableBtn,\n      //     cellRendererParams: {\n      //       update: () => {\n      //         this.$refs.diaTable.queryTableList()\n      //       }\n      //     }\n      //   }\n      // ],\n      // reqConfig: {\n      //   url: \"/paraminfo/page/{pageNo}/{pageSize}\",\n      //   method: \"post\",\n      //   params: {\n      //     pageNo: 0,\n      //     pageSize: 10,\n      //     sPageCode: localStorage.getItem(\"menuId\")\n      //   },\n      //   keyword: \"sParamType\",\n      //   dataFormat: {\n      //     key: \"content\",\n      //     total: \"totalElements\"\n      //   }\n      // },\n      // saveParamRequest: {\n      //   startTime: 0,\n      //   endTime: 0\n      // },\n      // selectParamRequest: {\n      //   startTime: 0,\n      //   endTime: 0\n      // }\n    };\n  },\n\n  // watch: {\n  //   \"dialogVisible.save\": function (value) {\n  //     this.initSaveParamRequest(value)\n  //   },\n  //   \"dialogVisible.sel\": function (value) {\n  //     this.initSelectParamRequest(value)\n  //   }\n  // },\n  computed: {\n    // 表单类名\n    formClass() {\n      return `el-form-w${this.labelWidth.substr(0, this.labelWidth.length - 2)}`;\n    },\n    filterControlText() {\n      return this.isCollapse ? this.$t('components.collapse') : this.$t('components.viewMore');\n    },\n    rotate() {\n      return this.isCollapse ? 'rotate(180deg)' : 'rotate(0deg)';\n    }\n  },\n  created() {\n    // 设置独有id\n    this.markId = 'filter' + new Date().getTime() + Math.ceil(Math.random() * 10000);\n  },\n  methods: {\n    filterAction(value, type) {\n      this.$nextTick(() => {\n        this.$emit('action', value);\n      });\n      if (type === 'confirm') {\n        try {\n          this.selectParamRequest.endTime = new Date().getTime();\n          const operateTimeCost = this.selectParamRequest.endTime - this.selectParamRequest.startTime;\n          const analyticsInstance = analytics.getAnalyticsInstance(this);\n          analyticsInstance.reportEvent('advanced_search_select_params_click', {\n            operate_time_cost: operateTimeCost\n          });\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    },\n    // 保存参数键盘事件\n    // tabCell (e) {\n    //   e.keyCode === 13 && this.handleConfirm()\n    // },\n    // 确认选择参数\n    // onSelect (option, type) {\n    //   this.dialogVisible.sel = false\n    //   console.log(\"option--\", option, this.model)\n    //   type === \"confirm\" &&\n    //     Object.assign(this.model, JSON.parse(option[0].sParamValue))\n    //   this.$nextTick(() => {\n    //     this.$emit(\"action\", JSON.parse(option[0].sParamValue))\n    //   })\n    //   try {\n    //     this.selectParamRequest.endTime = new Date().getTime()\n    //     const operateTimeCost =\n    //       this.selectParamRequest.endTime - this.selectParamRequest.startTime\n    //     window.collectEvent(\"advanced_search_select_params_click\", {\n    //       operate_time_cost: operateTimeCost\n    //     })\n    //   } catch (error) {\n    //     console.log(error)\n    //   }\n    // },\n    // 确认保存\n    handleConfirm() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          const params = {\n            sPageCode: localStorage.getItem('menuId'),\n            sParamType: this.paramForm.name,\n            sParamValue: JSON.stringify(Format.filterObj(this.model))\n          };\n          request({\n            url: '/paraminfo/add',\n            method: 'POST',\n            data: params,\n            noLoading: true\n          }).then(res => {\n            this.$refs.form.resetFields();\n            this.handleClose('save');\n            MessageUtil.success(this.$t('tips.saveSuccess'));\n            this.saveParamRequest.endTime = new Date().getTime();\n            try {\n              const analyticsInstance = analytics.getAnalyticsInstance(this);\n              analyticsInstance.reportEvent('advanced_search_save_params_click', {\n                is_success: 'true',\n                operate_time_cost: this.saveParamRequest.endTime - this.saveParamRequest.startTime\n              });\n            } catch (error) {\n              console.log(error);\n            }\n          }).catch(err => {\n            console.log(err);\n            this.saveParamRequest.endTime = new Date().getTime();\n            try {\n              const analyticsInstance = analytics.getAnalyticsInstance(this);\n              analyticsInstance.reportEvent('advanced_search_save_params_click', {\n                is_success: 'false',\n                operate_time_cost: this.saveParamRequest.endTime - this.saveParamRequest.startTime\n              });\n            } catch (e) {\n              console.log(e);\n            }\n          });\n          // apiList\n          //   .postList(params, \"/paraminfo/add\")\n          //   .then((res) => {\n          //     this.$refs.form.resetFields()\n          //     this.handleClose(\"save\")\n          //     MessageUtil.success(this.$t(\"tips.saveSuccess\"))\n          //     this.saveParamRequest.endTime = new Date().getTime()\n          //     try {\n          //       const analyticsInstance = analytics.getAnalyticsInstance(this)\n          //       analyticsInstance.reportEvent(\n          //         \"advanced_search_save_params_click\",\n          //         {\n          //           is_success: \"true\",\n          //           operate_time_cost:\n          //             this.saveParamRequest.endTime -\n          //             this.saveParamRequest.startTime\n          //         }\n          //       )\n          //     } catch (error) {\n          //       console.log(error)\n          //     }\n          //   })\n          //   .catch((err) => {\n          //     console.log(err)\n          //     this.saveParamRequest.endTime = new Date().getTime()\n          //     try {\n          //       const analyticsInstance = analytics.getAnalyticsInstance(this)\n          //       analyticsInstance.reportEvent(\n          //         \"advanced_search_save_params_click\",\n          //         {\n          //           is_success: \"false\",\n          //           operate_time_cost:\n          //             this.saveParamRequest.endTime -\n          //             this.saveParamRequest.startTime\n          //         }\n          //       )\n          //     } catch (e) {\n          //       console.log(e)\n          //     }\n          //   })\n        }\n      });\n    },\n\n    // 保存参数\n    // saveParam () {\n    //   this.dialogVisible.save = true\n    // },\n    // // 选择参数\n    // selParam () {\n    //   this.dialogVisible.sel = true\n    // },\n    // handleClose (type) {\n    //   this.dialogVisible[type] = false\n    // },\n    // 初始化按钮位置\n    initBtnPosi() {\n      // 当前filter对象\n      const curFilter = document.getElementById(this.markId);\n      // console.log('curFilter--', curFilter)\n      if (curFilter) {\n        const row_width = curFilter.getElementsByClassName('el-row')[0].offsetWidth;\n        const col_list = curFilter.getElementsByClassName('el-col');\n        const col_list_legth = col_list.length;\n        const col_total_width = col_list[0].offsetWidth * col_list_legth;\n        if (row_width - col_total_width > 172) {\n          this.formNum = col_list_legth;\n          if (this.formNum < 4) {\n            this.posi_left = col_list[0].offsetWidth * this.formNum + 20 + 'px';\n          }\n        } else {\n          this.formNum = 4;\n        }\n      }\n    },\n    // 展开关闭更多查询条件\n    collapseFilter() {\n      // 关闭之前查询一下\n      let searchParamsMin = 0;\n      let searchParamsMax = 0;\n      const filterBanner = document.getElementsByClassName('filter-banner');\n      if (!this.isCollapse) {\n        if (filterBanner[0]) {\n          searchParamsMax = filterBanner[0].getElementsByClassName('form-item-container').length;\n          const filterMore = filterBanner[0].getElementsByClassName('filter-occultationForm ');\n          if (filterMore[0]) {\n            searchParamsMin = searchParamsMax - filterMore[0].getElementsByClassName('form-item-container').length;\n          }\n        }\n      }\n      // eslint-disable-next-line vue/no-mutating-props\n      this.isCollapse = !this.isCollapse;\n      if (this.isCollapse) {\n        try {\n          const analyticsInstance = analytics.getAnalyticsInstance(this);\n          analyticsInstance.reportEvent('advanced_search_show_more_click', {\n            search_params_min: searchParamsMin,\n            search_params_max: searchParamsMax\n          });\n        } catch (e) {\n          console.log(e);\n        }\n        // this.$refs.filterBtn.filterControlText = this.$t(\"components.collapse\")\n        // this.$refs.filterBtn.rotate = \"rotate(180deg)\"\n        // this.filterControlText = this.$t(\"components.collapse\")\n        // this.rotate = \"rotate(180deg)\"\n      } else {\n        try {\n          const analyticsInstance = analytics.getAnalyticsInstance(this);\n          analyticsInstance.reportEvent('advanced_search_show_less_click');\n        } catch (e) {\n          console.log(e);\n        }\n        // this.$refs.filterBtn.filterControlText = this.$t(\"components.viewMore\")\n        // this.$refs.filterBtn.rotate = \"rotate(0deg)\"\n        // this.filterControlText = this.$t(\"components.viewMore\")\n        // this.rotate = \"rotate(0deg)\"\n      }\n\n      this.$emit('callBack', this.isCollapse);\n    },\n    //\n    submit() {\n      this.$emit('submit');\n    },\n    // 重置查询表单\n    reset() {\n      this.$refs[this.refForm].resetFields();\n      this.$emit('reset');\n    },\n    validate() {\n      let flag = false;\n      this.$refs[this.refForm].validate(valid => {\n        flag = valid;\n        return valid;\n      });\n      return flag;\n    }\n    // // 初始化统计保存按钮的时间\n    // initSaveParamRequest (value) {\n    //   if (value) {\n    //     this.saveParamRequest.startTime = new Date().getTime()\n    //     this.saveParamRequest.endTime = 0\n    //   }\n    // },\n    // initSelectParamRequest (value) {\n    //   if (value) {\n    //     this.selectParamRequest.startTime = new Date().getTime()\n    //     this.selectParamRequest.endTime = 0\n    //   }\n    // }\n  }\n};","map":{"version":3,"names":["Format","MessageUtil","request","analytics","localFilterBtn","name","components","props","type","String","default","padding","Number","paramsButton","Boolean","showButton","refForm","rules","Object","labelWidth","model","size","posiRight","posiBtn","isCollapse","data","posi_left","markId","formNum","computed","formClass","substr","length","filterControlText","$t","rotate","created","Date","getTime","Math","ceil","random","methods","filterAction","value","$nextTick","$emit","selectParamRequest","endTime","operateTimeCost","startTime","analyticsInstance","getAnalyticsInstance","reportEvent","operate_time_cost","error","console","log","handleConfirm","$refs","form","validate","valid","params","sPageCode","localStorage","getItem","sParamType","paramForm","sParamValue","JSON","stringify","filterObj","url","method","noLoading","then","res","resetFields","handleClose","success","saveParamRequest","is_success","catch","err","e","initBtnPosi","curFilter","document","getElementById","row_width","getElementsByClassName","offsetWidth","col_list","col_list_legth","col_total_width","collapseFilter","searchParamsMin","searchParamsMax","filterBanner","filterMore","search_params_min","search_params_max","submit","reset","flag"],"sources":["node_modules/@cndinfo/cube-design-web/src/components/Filter/src/index.vue"],"sourcesContent":["<template>\n  <div\n    :id=\"markId\"\n    :class=\"[\n      'filter-container',\n      {\n        'more-one-line': formNum > 3\n      }\n    ]\"\n  >\n    <!-- 'p-' + padding, -->\n    <el-form\n      :ref=\"refForm\"\n      :label-width=\"labelWidth\"\n      :inline=\"true\"\n      :model=\"model\"\n      :rules=\"rules\"\n      :size=\"size\"\n      @submit.native.prevent\n    >\n      <div :class=\"posiBtn ? '' : 'filter-banner'\">\n        <slot name=\"displayForm\" />\n        <div\n          v-if=\"$slots.occultationForm\"\n          :class=\"[\n            'filter-occultationForm',\n            { 'filter-occultationForm-hide': !isCollapse }\n          ]\"\n        >\n          <slot name=\"occultationForm\" />\n        </div>\n      </div>\n      <!-- <div\n        ref=\"filterBtn\"\n        :class=\"posiBtn ? 'position-btns' : 'filter-btns'\"\n        v-if=\"showButton\"\n        :style=\"{ left: !posiRight ? posi_left : '', right: posiRight ? 0 : '' }\"\n      >\n        <span\n          v-if=\"$slots.occultationForm\"\n          class=\"btns-more\"\n          @click=\"collapseFilter\"\n        >\n          <i class=\"el-icon-caret-bottom\" :style=\"{ transform: rotate }\"></i>\n          {{ filterControlText }}\n        </span>\n        <div>\n          <slot name=\"controlBtnGroup\"></slot>\n          <template v-if=\"paramsButton && !posiBtn\">\n            <el-button size=\"mini\" @click=\"saveParam\">{{\n              $t('components.saveParameters')\n            }}</el-button>\n            <el-button size=\"mini\" @click=\"selParam\">{{\n              $t('components.selectParameters')\n            }}</el-button>\n          </template>\n        </div>\n      </div> -->\n    </el-form>\n    <local-filter-btn\n      v-if=\"type === 'bottom'\"\n      ref=\"filterBtn\"\n      :class=\"`mt-${padding} pt-${padding}`\"\n      :occultation-form=\"!!$slots.occultationForm\"\n      :show-button=\"showButton\"\n      :params-button=\"paramsButton\"\n      :model=\"model\"\n      @filterAction=\"filterAction\"\n      @reset=\"reset\"\n      @submit=\"submit\"\n      @collapseFilter=\"collapseFilter\"\n    />\n  </div>\n</template>\n\n<script>\nimport { Format, MessageUtil, request } from '@cndinfo/cube-web-utils'\nimport '../../../../lib/styles/components/Filter.scss'\nimport analytics from '../../../utils/analytics'\nimport localFilterBtn from '../../FilterBtn/index.js'\nexport default {\n  name: 'Filter',\n  components: { localFilterBtn },\n  props: {\n    type: {\n      type: String,\n      default: 'top'\n    },\n    // 组件内边距\n    padding: {\n      type: Number,\n      default: 10\n    },\n    // 参数控制按钮 false  为展示, true 为隐藏\n    paramsButton: {\n      type: Boolean,\n      default: false\n    },\n    // 按钮保留\n    showButton: {\n      type: Boolean,\n      default: false\n    },\n    // form的ref名称\n    refForm: {\n      type: String,\n      default: 'filterForm'\n    },\n    // form的rules\n    rules: {\n      type: Object,\n      default: () => {}\n    },\n    // form的标题宽度\n    labelWidth: {\n      type: String,\n      default: '85px'\n    },\n    // form的model\n    model: {\n      type: Object,\n      default: () => {}\n    },\n    // form的size\n    size: {\n      type: String,\n      default: 'small'\n    },\n    posiRight: {\n      type: Boolean,\n      default: false\n    },\n    posiBtn: {\n      type: Boolean,\n      default: false\n    },\n    isCollapse: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      posi_left: 0,\n      // isCollapse: false, // 是否展开更多查询条件\n      // filterControlText: this.$t(\"components.viewMore\"),\n      // rotate: 'rotate(0deg)',\n      markId: '',\n      // 表单树及定位\n      formNum: 0\n      // 参数\n      // paramForm: { name: \"\" },\n      // formRules: {\n      //   name: [\n      //     {\n      //       required: true,\n      //       message: this.$t(\"grid.others.theParameterNameCannotBeEmpty\"),\n      //       trigger: \"blur\"\n      //     }\n      //   ]\n      // },\n      // dialogVisible: {\n      //   save: false,\n      //   sel: false\n      // },\n      // columnDefs: [\n      //   {\n      //     field: \"sParamType\",\n      //     headerName: this.$t(\"grid.others.parameterNameKey\")\n      //   },\n      //   {\n      //     headerName: this.$t(\"grid.others.operation\"),\n      //     width: 40,\n      //     cellRendererFramework: TableBtn,\n      //     cellRendererParams: {\n      //       update: () => {\n      //         this.$refs.diaTable.queryTableList()\n      //       }\n      //     }\n      //   }\n      // ],\n      // reqConfig: {\n      //   url: \"/paraminfo/page/{pageNo}/{pageSize}\",\n      //   method: \"post\",\n      //   params: {\n      //     pageNo: 0,\n      //     pageSize: 10,\n      //     sPageCode: localStorage.getItem(\"menuId\")\n      //   },\n      //   keyword: \"sParamType\",\n      //   dataFormat: {\n      //     key: \"content\",\n      //     total: \"totalElements\"\n      //   }\n      // },\n      // saveParamRequest: {\n      //   startTime: 0,\n      //   endTime: 0\n      // },\n      // selectParamRequest: {\n      //   startTime: 0,\n      //   endTime: 0\n      // }\n    }\n  },\n  // watch: {\n  //   \"dialogVisible.save\": function (value) {\n  //     this.initSaveParamRequest(value)\n  //   },\n  //   \"dialogVisible.sel\": function (value) {\n  //     this.initSelectParamRequest(value)\n  //   }\n  // },\n  computed: {\n    // 表单类名\n    formClass() {\n      return `el-form-w${this.labelWidth.substr(0, this.labelWidth.length - 2)}`\n    },\n    filterControlText() {\n      return this.isCollapse\n        ? this.$t('components.collapse')\n        : this.$t('components.viewMore')\n    },\n    rotate() {\n      return this.isCollapse ? 'rotate(180deg)' : 'rotate(0deg)'\n    }\n  },\n  created() {\n    // 设置独有id\n    this.markId =\n      'filter' + new Date().getTime() + Math.ceil(Math.random() * 10000)\n  },\n  methods: {\n    filterAction(value, type) {\n      this.$nextTick(() => {\n        this.$emit('action', value)\n      })\n      if (type === 'confirm') {\n        try {\n          this.selectParamRequest.endTime = new Date().getTime()\n          const operateTimeCost =\n            this.selectParamRequest.endTime - this.selectParamRequest.startTime\n          const analyticsInstance = analytics.getAnalyticsInstance(this)\n          analyticsInstance.reportEvent('advanced_search_select_params_click', {\n            operate_time_cost: operateTimeCost\n          })\n        } catch (error) {\n          console.log(error)\n        }\n      }\n    },\n    // 保存参数键盘事件\n    // tabCell (e) {\n    //   e.keyCode === 13 && this.handleConfirm()\n    // },\n    // 确认选择参数\n    // onSelect (option, type) {\n    //   this.dialogVisible.sel = false\n    //   console.log(\"option--\", option, this.model)\n    //   type === \"confirm\" &&\n    //     Object.assign(this.model, JSON.parse(option[0].sParamValue))\n    //   this.$nextTick(() => {\n    //     this.$emit(\"action\", JSON.parse(option[0].sParamValue))\n    //   })\n    //   try {\n    //     this.selectParamRequest.endTime = new Date().getTime()\n    //     const operateTimeCost =\n    //       this.selectParamRequest.endTime - this.selectParamRequest.startTime\n    //     window.collectEvent(\"advanced_search_select_params_click\", {\n    //       operate_time_cost: operateTimeCost\n    //     })\n    //   } catch (error) {\n    //     console.log(error)\n    //   }\n    // },\n    // 确认保存\n    handleConfirm() {\n      this.$refs.form.validate((valid) => {\n        if (valid) {\n          const params = {\n            sPageCode: localStorage.getItem('menuId'),\n            sParamType: this.paramForm.name,\n            sParamValue: JSON.stringify(Format.filterObj(this.model))\n          }\n\n          request({\n            url: '/paraminfo/add',\n            method: 'POST',\n            data: params,\n            noLoading: true\n          })\n            .then((res) => {\n              this.$refs.form.resetFields()\n              this.handleClose('save')\n              MessageUtil.success(this.$t('tips.saveSuccess'))\n              this.saveParamRequest.endTime = new Date().getTime()\n              try {\n                const analyticsInstance = analytics.getAnalyticsInstance(this)\n                analyticsInstance.reportEvent(\n                  'advanced_search_save_params_click',\n                  {\n                    is_success: 'true',\n                    operate_time_cost:\n                      this.saveParamRequest.endTime -\n                      this.saveParamRequest.startTime\n                  }\n                )\n              } catch (error) {\n                console.log(error)\n              }\n            })\n            .catch((err) => {\n              console.log(err)\n              this.saveParamRequest.endTime = new Date().getTime()\n              try {\n                const analyticsInstance = analytics.getAnalyticsInstance(this)\n                analyticsInstance.reportEvent(\n                  'advanced_search_save_params_click',\n                  {\n                    is_success: 'false',\n                    operate_time_cost:\n                      this.saveParamRequest.endTime -\n                      this.saveParamRequest.startTime\n                  }\n                )\n              } catch (e) {\n                console.log(e)\n              }\n            })\n          // apiList\n          //   .postList(params, \"/paraminfo/add\")\n          //   .then((res) => {\n          //     this.$refs.form.resetFields()\n          //     this.handleClose(\"save\")\n          //     MessageUtil.success(this.$t(\"tips.saveSuccess\"))\n          //     this.saveParamRequest.endTime = new Date().getTime()\n          //     try {\n          //       const analyticsInstance = analytics.getAnalyticsInstance(this)\n          //       analyticsInstance.reportEvent(\n          //         \"advanced_search_save_params_click\",\n          //         {\n          //           is_success: \"true\",\n          //           operate_time_cost:\n          //             this.saveParamRequest.endTime -\n          //             this.saveParamRequest.startTime\n          //         }\n          //       )\n          //     } catch (error) {\n          //       console.log(error)\n          //     }\n          //   })\n          //   .catch((err) => {\n          //     console.log(err)\n          //     this.saveParamRequest.endTime = new Date().getTime()\n          //     try {\n          //       const analyticsInstance = analytics.getAnalyticsInstance(this)\n          //       analyticsInstance.reportEvent(\n          //         \"advanced_search_save_params_click\",\n          //         {\n          //           is_success: \"false\",\n          //           operate_time_cost:\n          //             this.saveParamRequest.endTime -\n          //             this.saveParamRequest.startTime\n          //         }\n          //       )\n          //     } catch (e) {\n          //       console.log(e)\n          //     }\n          //   })\n        }\n      })\n    },\n    // 保存参数\n    // saveParam () {\n    //   this.dialogVisible.save = true\n    // },\n    // // 选择参数\n    // selParam () {\n    //   this.dialogVisible.sel = true\n    // },\n    // handleClose (type) {\n    //   this.dialogVisible[type] = false\n    // },\n    // 初始化按钮位置\n    initBtnPosi() {\n      // 当前filter对象\n      const curFilter = document.getElementById(this.markId)\n      // console.log('curFilter--', curFilter)\n      if (curFilter) {\n        const row_width =\n          curFilter.getElementsByClassName('el-row')[0].offsetWidth\n        const col_list = curFilter.getElementsByClassName('el-col')\n        const col_list_legth = col_list.length\n        const col_total_width = col_list[0].offsetWidth * col_list_legth\n        if (row_width - col_total_width > 172) {\n          this.formNum = col_list_legth\n          if (this.formNum < 4) {\n            this.posi_left = col_list[0].offsetWidth * this.formNum + 20 + 'px'\n          }\n        } else {\n          this.formNum = 4\n        }\n      }\n    },\n    // 展开关闭更多查询条件\n    collapseFilter() {\n      // 关闭之前查询一下\n      let searchParamsMin = 0\n      let searchParamsMax = 0\n      const filterBanner = document.getElementsByClassName('filter-banner')\n      if (!this.isCollapse) {\n        if (filterBanner[0]) {\n          searchParamsMax = filterBanner[0].getElementsByClassName(\n            'form-item-container'\n          ).length\n          const filterMore = filterBanner[0].getElementsByClassName(\n            'filter-occultationForm '\n          )\n          if (filterMore[0]) {\n            searchParamsMin =\n              searchParamsMax -\n              filterMore[0].getElementsByClassName('form-item-container').length\n          }\n        }\n      }\n      // eslint-disable-next-line vue/no-mutating-props\n      this.isCollapse = !this.isCollapse\n      if (this.isCollapse) {\n        try {\n          const analyticsInstance = analytics.getAnalyticsInstance(this)\n          analyticsInstance.reportEvent('advanced_search_show_more_click', {\n            search_params_min: searchParamsMin,\n            search_params_max: searchParamsMax\n          })\n        } catch (e) {\n          console.log(e)\n        }\n        // this.$refs.filterBtn.filterControlText = this.$t(\"components.collapse\")\n        // this.$refs.filterBtn.rotate = \"rotate(180deg)\"\n        // this.filterControlText = this.$t(\"components.collapse\")\n        // this.rotate = \"rotate(180deg)\"\n      } else {\n        try {\n          const analyticsInstance = analytics.getAnalyticsInstance(this)\n          analyticsInstance.reportEvent('advanced_search_show_less_click')\n        } catch (e) {\n          console.log(e)\n        }\n        // this.$refs.filterBtn.filterControlText = this.$t(\"components.viewMore\")\n        // this.$refs.filterBtn.rotate = \"rotate(0deg)\"\n        // this.filterControlText = this.$t(\"components.viewMore\")\n        // this.rotate = \"rotate(0deg)\"\n      }\n      this.$emit('callBack', this.isCollapse)\n    },\n    //\n    submit() {\n      this.$emit('submit')\n    },\n    // 重置查询表单\n    reset() {\n      this.$refs[this.refForm].resetFields()\n      this.$emit('reset')\n    },\n    validate() {\n      let flag = false\n      this.$refs[this.refForm].validate((valid) => {\n        flag = valid\n        return valid\n      })\n      return flag\n    }\n    // // 初始化统计保存按钮的时间\n    // initSaveParamRequest (value) {\n    //   if (value) {\n    //     this.saveParamRequest.startTime = new Date().getTime()\n    //     this.saveParamRequest.endTime = 0\n    //   }\n    // },\n    // initSelectParamRequest (value) {\n    //   if (value) {\n    //     this.selectParamRequest.startTime = new Date().getTime()\n    //     this.selectParamRequest.endTime = 0\n    //   }\n    // }\n  }\n}\n</script>\n"],"mappings":"AA4EA,SAAAA,MAAA,EAAAC,WAAA,EAAAC,OAAA;AACA;AACA,OAAAC,SAAA;AACA,OAAAC,cAAA;AACA;EACAC,IAAA;EACAC,UAAA;IAAAF;EAAA;EACAG,KAAA;IACAC,IAAA;MACAA,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACA;IACAC,OAAA;MACAH,IAAA,EAAAI,MAAA;MACAF,OAAA;IACA;IACA;IACAG,YAAA;MACAL,IAAA,EAAAM,OAAA;MACAJ,OAAA;IACA;IACA;IACAK,UAAA;MACAP,IAAA,EAAAM,OAAA;MACAJ,OAAA;IACA;IACA;IACAM,OAAA;MACAR,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACA;IACAO,KAAA;MACAT,IAAA,EAAAU,MAAA;MACAR,OAAA,EAAAA,CAAA;IACA;IACA;IACAS,UAAA;MACAX,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACA;IACAU,KAAA;MACAZ,IAAA,EAAAU,MAAA;MACAR,OAAA,EAAAA,CAAA;IACA;IACA;IACAW,IAAA;MACAb,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAY,SAAA;MACAd,IAAA,EAAAM,OAAA;MACAJ,OAAA;IACA;IACAa,OAAA;MACAf,IAAA,EAAAM,OAAA;MACAJ,OAAA;IACA;IACAc,UAAA;MACAhB,IAAA,EAAAM,OAAA;MACAJ,OAAA;IACA;EACA;EACAe,KAAA;IACA;MACAC,SAAA;MACA;MACA;MACA;MACAC,MAAA;MACA;MACAC,OAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;EACA;;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAA;IACA;IACAC,UAAA;MACA,wB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"},"metadata":{},"sourceType":"module","externalDependencies":[]}