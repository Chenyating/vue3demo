{"ast":null,"code":"import '../../../../lib/styles/components/BottomNav.scss';\nexport default {\n  name: 'BottomNavItem',\n  props: {\n    config: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    target: {\n      type: String,\n      default: '_blank'\n    }\n  },\n  computed: {\n    point_() {\n      return this.disabled ? '' : 'cursor';\n    },\n    handleTitleClass_() {\n      const c = this.config.children;\n      const mg = c && c.length ? 'mb-32' : 'mb-20';\n      return [mg, this.point_, 'cube-bottom-nav-item-title'];\n    },\n    handleItemClass_() {\n      return [this.point_, 'cube-bottom-nav-item-item'];\n    },\n    isObjOrStr_() {\n      return item => {\n        return Object.prototype.toString.call(item) === '[object Object]' || typeof item === 'string';\n      };\n    },\n    isStr_() {\n      return item => {\n        return typeof item === 'string';\n      };\n    },\n    isArray_() {\n      return item => {\n        return Array.isArray(item);\n      };\n    },\n    handleLabel_() {\n      return i => {\n        return i && i.text ? 'has-text pr-8' : 'pr-8';\n      };\n    }\n  },\n  watch: {\n    config: {\n      handler(nv) {\n        if (nv.children && nv.children.length) {\n          const list = nv.children;\n          const labels = list.map(item => {\n            return item.label;\n          });\n          let i = 0;\n          labels.map(item => {\n            const len = item.length;\n            if (len > i) {\n              i = len;\n            }\n          });\n        }\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  methods: {\n    clickTitle(i) {\n      this.handleCilck('click-title', i);\n    },\n    clickLabel(i) {\n      this.handleCilck('click-label', i);\n    },\n    clickText(i) {\n      this.handleCilck('click-text', i);\n    },\n    handleCilck(eventName, i) {\n      if (!this.disabled) {\n        if (i?.stop) {\n          console.log(eventName);\n          this.$emit(eventName, i);\n        } else {\n          console.log(eventName);\n          if (i.url) {\n            window.open(i.url, this.target);\n          }\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","props","config","type","Object","default","disabled","Boolean","target","String","computed","point_","handleTitleClass_","c","children","mg","length","handleItemClass_","isObjOrStr_","item","prototype","toString","call","isStr_","isArray_","Array","isArray","handleLabel_","i","text","watch","handler","nv","list","labels","map","label","len","deep","immediate","methods","clickTitle","handleCilck","clickLabel","clickText","eventName","stop","console","log","$emit","url","window","open"],"sources":["node_modules/@cndinfo/cube-design-web/src/components/BottomNav/src/item.vue"],"sourcesContent":["<template>\n  <div class=\"cube-bottom-nav-item\">\n    <div :class=\"handleTitleClass_\" @click=\"clickTitle(config)\">\n      {{ config.label }}\n    </div>\n    <div v-for=\"(item, index) in config.children\" :key=\"index\" class=\"flex\">\n      <template v-if=\"isObjOrStr_(item)\">\n        <div :class=\"handleItemClass_\">\n          <template v-if=\"isStr_(item)\">\n            <span @click=\"clickLabel(item)\">\n              {{ item }}\n            </span>\n          </template>\n          <template v-else>\n            <span :class=\"handleLabel_(item)\" @click=\"clickLabel(item)\">\n              {{ item.label }}\n            </span>\n            <span @click=\"clickText(item)\">{{ item.text }} </span>\n          </template>\n        </div>\n      </template>\n      <template v-if=\"isArray_(item)\">\n        <div\n          v-for=\"(i, j) in item\"\n          :key=\"j\"\n          :class=\"handleItemClass_\"\n        >\n          <span :class=\"handleLabel_(i)\" @click=\"clickLabel(i)\">\n            {{ i.label }}\n          </span>\n          <span @click=\"clickText(i)\">{{ i.text }} </span>\n        </div>\n      </template>\n    </div>\n  </div>\n</template>\n<script>\nimport '../../../../lib/styles/components/BottomNav.scss'\nexport default {\n  name: 'BottomNavItem',\n  props: {\n    config: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    target: {\n      type: String,\n      default: '_blank'\n    }\n  },\n  computed: {\n    point_() {\n      return this.disabled ? '' : 'cursor'\n    },\n    handleTitleClass_() {\n      const c = this.config.children\n      const mg = c && c.length ? 'mb-32' : 'mb-20'\n      return [mg, this.point_, 'cube-bottom-nav-item-title']\n    },\n    handleItemClass_() {\n      return [this.point_, 'cube-bottom-nav-item-item']\n    },\n    isObjOrStr_() {\n      return (item) => {\n        return (\n          Object.prototype.toString.call(item) === '[object Object]' ||\n          typeof item === 'string'\n        )\n      }\n    },\n    isStr_() {\n      return (item) => {\n        return typeof item === 'string'\n      }\n    },\n    isArray_() {\n      return (item) => {\n        return Array.isArray(item)\n      }\n    },\n    handleLabel_() {\n      return (i) => {\n        return i && i.text ? 'has-text pr-8' : 'pr-8'\n      }\n    }\n  },\n  watch: {\n    config: {\n      handler(nv) {\n        if (nv.children && nv.children.length) {\n          const list = nv.children\n          const labels = list.map((item) => {\n            return item.label\n          })\n          let i = 0\n          labels.map((item) => {\n            const len = item.length\n            if (len > i) {\n              i = len\n            }\n          })\n        }\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  methods: {\n    clickTitle(i) {\n      this.handleCilck('click-title', i)\n    },\n    clickLabel(i) {\n      this.handleCilck('click-label', i)\n    },\n    clickText(i) {\n      this.handleCilck('click-text', i)\n    },\n    handleCilck(eventName, i) {\n      if (!this.disabled) {\n        if (i?.stop) {\n          console.log(eventName)\n          this.$emit(eventName, i)\n        } else {\n          console.log(eventName)\n          if (i.url) {\n            window.open(i.url, this.target)\n          }\n        }\n      }\n    }\n  }\n}\n</script>\n"],"mappings":"AAqCA;AACA;EACAA,IAAA;EACAC,KAAA;IACAC,MAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA,EAAAA,CAAA;QACA;MACA;IACA;IACAC,QAAA;MACAH,IAAA,EAAAI,OAAA;MACAF,OAAA;IACA;IACAG,MAAA;MACAL,IAAA,EAAAM,MAAA;MACAJ,OAAA;IACA;EACA;EACAK,QAAA;IACAC,OAAA;MACA,YAAAL,QAAA;IACA;IACAM,kBAAA;MACA,MAAAC,CAAA,QAAAX,MAAA,CAAAY,QAAA;MACA,MAAAC,EAAA,GAAAF,CAAA,IAAAA,CAAA,CAAAG,MAAA;MACA,QAAAD,EAAA,OAAAJ,MAAA;IACA;IACAM,iBAAA;MACA,aAAAN,MAAA;IACA;IACAO,YAAA;MACA,OAAAC,IAAA;QACA,OACAf,MAAA,CAAAgB,SAAA,CAAAC,QAAA,CAAAC,IAAA,CAAAH,IAAA,2BACA,OAAAA,IAAA;MAEA;IACA;IACAI,OAAA;MACA,OAAAJ,IAAA;QACA,cAAAA,IAAA;MACA;IACA;IACAK,SAAA;MACA,OAAAL,IAAA;QACA,OAAAM,KAAA,CAAAC,OAAA,CAAAP,IAAA;MACA;IACA;IACAQ,aAAA;MACA,OAAAC,CAAA;QACA,OAAAA,CAAA,IAAAA,CAAA,CAAAC,IAAA;MACA;IACA;EACA;EACAC,KAAA;IACA5B,MAAA;MACA6B,QAAAC,EAAA;QACA,IAAAA,EAAA,CAAAlB,QAAA,IAAAkB,EAAA,CAAAlB,QAAA,CAAAE,MAAA;UACA,MAAAiB,IAAA,GAAAD,EAAA,CAAAlB,QAAA;UACA,MAAAoB,MAAA,GAAAD,IAAA,CAAAE,GAAA,CAAAhB,IAAA;YACA,OAAAA,IAAA,CAAAiB,KAAA;UACA;UACA,IAAAR,CAAA;UACAM,MAAA,CAAAC,GAAA,CAAAhB,IAAA;YACA,MAAAkB,GAAA,GAAAlB,IAAA,CAAAH,MAAA;YACA,IAAAqB,GAAA,GAAAT,CAAA;cACAA,CAAA,GAAAS,GAAA;YACA;UACA;QACA;MACA;MACAC,IAAA;MACAC,SAAA;IACA;EACA;EACAC,OAAA;IACAC,WAAAb,CAAA;MACA,KAAAc,WAAA,gBAAAd,CAAA;IACA;IACAe,WAAAf,CAAA;MACA,KAAAc,WAAA,gBAAAd,CAAA;IACA;IACAgB,UAAAhB,CAAA;MACA,KAAAc,WAAA,eAAAd,CAAA;IACA;IACAc,YAAAG,SAAA,EAAAjB,CAAA;MACA,UAAAtB,QAAA;QACA,IAAAsB,CAAA,EAAAkB,IAAA;UACAC,OAAA,CAAAC,GAAA,CAAAH,SAAA;UACA,KAAAI,KAAA,CAAAJ,SAAA,EAAAjB,CAAA;QACA;UACAmB,OAAA,CAAAC,GAAA,CAAAH,SAAA;UACA,IAAAjB,CAAA,CAAAsB,GAAA;YACAC,MAAA,CAAAC,IAAA,CAAAxB,CAAA,CAAAsB,GAAA,OAAA1C,MAAA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}