{"ast":null,"code":"import moment from 'moment';\nimport { formatDate } from 'element-ui/src/utils/date-util';\nimport agEditorMixins from './ag-editor-mixins';\nexport default {\n  name: 'AgGridDate',\n  mixins: [agEditorMixins],\n  props: {},\n  data() {\n    return {\n      agValue: ''\n    };\n  },\n  computed: {\n    componentProps() {\n      return Object.assign({}, {\n        placeholder: this.$t('components.pleaseSelect'),\n        valueFormat: 'yyyy-MM-dd',\n        format: 'yyyy-MM-dd',\n        clearIcon: 'el-icon-circle-close',\n        prefixIcon: 'el-icon-date',\n        size: 'mini',\n        unlinkPanels: false,\n        validateEvent: true,\n        clearable: true,\n        editable: true,\n        type: 'date'\n      }, this.params?.cellEditorComponentProps || {});\n    }\n  },\n  mounted() {\n    this.$nextTick(() => {\n      const {\n        autoFocus,\n        defaultCurrentDate,\n        valueFormat,\n        defaultValue\n      } = this.componentProps;\n      if (this.params.value) {\n        this.agValue = this.params.value;\n      } else if (defaultCurrentDate) {\n        this.agValue = formatDate(new Date(), valueFormat);\n      } else if (defaultValue) {\n        this.agValue = defaultValue;\n      }\n      if (autoFocus) {\n        this.focus();\n      }\n    });\n  },\n  methods: {\n    triggerChange() {\n      const {\n        cellEditorComponentProps,\n        ...restAgParams\n      } = this.params || {};\n      const {\n        change\n      } = cellEditorComponentProps || {};\n      change?.(this.agValue, {\n        agParams: restAgParams\n      });\n    },\n    // 监听键盘事件\n    handleKeyup(e) {\n      this.triggerKeyup(e);\n    },\n    // 监听键盘事件\n    handleKeydown(e) {\n      this.triggerKeydown(e);\n    },\n    handleChange(val) {\n      const {\n        datetime\n      } = this.componentProps;\n      this.agValue = datetime === 'end' ? moment(val).endOf('day')._d : val;\n      this.triggerChange();\n    },\n    focus() {\n      this.$refs.elInput.focus();\n    },\n    // 失焦事件\n    handleBlur(e) {\n      this.triggerBlur(e);\n    },\n    // 聚焦事件\n    handleFocus(e) {\n      this.triggerFocus(e);\n    }\n  }\n};","map":{"version":3,"names":["moment","formatDate","agEditorMixins","name","mixins","props","data","agValue","computed","componentProps","Object","assign","placeholder","$t","valueFormat","format","clearIcon","prefixIcon","size","unlinkPanels","validateEvent","clearable","editable","type","params","cellEditorComponentProps","mounted","$nextTick","autoFocus","defaultCurrentDate","defaultValue","value","Date","focus","methods","triggerChange","restAgParams","change","agParams","handleKeyup","e","triggerKeyup","handleKeydown","triggerKeydown","handleChange","val","datetime","endOf","_d","$refs","elInput","handleBlur","triggerBlur","handleFocus","triggerFocus"],"sources":["node_modules/@cndinfo/cube-design-web/src/components/ForGridComponents/cell-editor/AgGridDate.vue"],"sourcesContent":["<template>\n  <div class=\"ag-grid-date\">\n    <el-date-picker\n      ref=\"agDate\"\n      v-model=\"agValue\"\n      v-bind=\"componentProps\"\n      @change=\"handleChange\"\n      @focus=\"handleFocus\"\n      @blur=\"handleBlur\"\n      @keyup.native=\"handleKeyup\"\n      @keydown.native=\"handleKeydown\"\n    />\n  </div>\n</template>\n\n<script>\nimport moment from 'moment'\nimport { formatDate } from 'element-ui/src/utils/date-util'\n\nimport agEditorMixins from './ag-editor-mixins'\n\nexport default {\n  name: 'AgGridDate',\n  mixins: [agEditorMixins],\n  props: {\n  },\n  data() {\n    return {\n      agValue: ''\n    }\n  },\n  computed: {\n    componentProps() {\n      return Object.assign(\n        {},\n        {\n          placeholder: this.$t('components.pleaseSelect'),\n          valueFormat: 'yyyy-MM-dd',\n          format: 'yyyy-MM-dd',\n          clearIcon: 'el-icon-circle-close',\n          prefixIcon: 'el-icon-date',\n          size: 'mini',\n          unlinkPanels: false,\n          validateEvent: true,\n          clearable: true,\n          editable: true,\n          type: 'date'\n        },\n        this.params?.cellEditorComponentProps || {}\n      )\n    }\n  },\n  mounted() {\n    this.$nextTick(() => {\n      const { autoFocus, defaultCurrentDate, valueFormat, defaultValue } = this.componentProps\n\n      if (this.params.value) {\n        this.agValue = this.params.value\n      } else if (defaultCurrentDate) {\n        this.agValue = formatDate(new Date(), valueFormat)\n      } else if (defaultValue) {\n        this.agValue = defaultValue\n      }\n\n      if (autoFocus) {\n        this.focus()\n      }\n    })\n  },\n  methods: {\n    triggerChange() {\n      const { cellEditorComponentProps, ...restAgParams } = this.params || {}\n\n      const { change } = cellEditorComponentProps || {}\n\n      change?.(this.agValue, { agParams: restAgParams })\n    },\n    // 监听键盘事件\n    handleKeyup(e) {\n      this.triggerKeyup(e)\n    },\n    // 监听键盘事件\n    handleKeydown(e) {\n      this.triggerKeydown(e)\n    },\n    handleChange(val) {\n      const { datetime } = this.componentProps\n      this.agValue = datetime === 'end' ? moment(val).endOf('day')._d : val\n      this.triggerChange()\n    },\n    focus() {\n      this.$refs.elInput.focus()\n    },\n    // 失焦事件\n    handleBlur(e) {\n      this.triggerBlur(e)\n    },\n    // 聚焦事件\n    handleFocus(e) {\n      this.triggerFocus(e)\n    }\n  }\n}\n</script>\n"],"mappings":"AAgBA,OAAAA,MAAA;AACA,SAAAC,UAAA;AAEA,OAAAC,cAAA;AAEA;EACAC,IAAA;EACAC,MAAA,GAAAF,cAAA;EACAG,KAAA,GACA;EACAC,KAAA;IACA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACAC,eAAA;MACA,OAAAC,MAAA,CAAAC,MAAA,CACA,IACA;QACAC,WAAA,OAAAC,EAAA;QACAC,WAAA;QACAC,MAAA;QACAC,SAAA;QACAC,UAAA;QACAC,IAAA;QACAC,YAAA;QACAC,aAAA;QACAC,SAAA;QACAC,QAAA;QACAC,IAAA;MACA,GACA,KAAAC,MAAA,EAAAC,wBAAA,MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,SAAA;MACA;QAAAC,SAAA;QAAAC,kBAAA;QAAAf,WAAA;QAAAgB;MAAA,SAAArB,cAAA;MAEA,SAAAe,MAAA,CAAAO,KAAA;QACA,KAAAxB,OAAA,QAAAiB,MAAA,CAAAO,KAAA;MACA,WAAAF,kBAAA;QACA,KAAAtB,OAAA,GAAAN,UAAA,KAAA+B,IAAA,IAAAlB,WAAA;MACA,WAAAgB,YAAA;QACA,KAAAvB,OAAA,GAAAuB,YAAA;MACA;MAEA,IAAAF,SAAA;QACA,KAAAK,KAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,cAAA;MACA;QAAAV,wBAAA;QAAA,GAAAW;MAAA,SAAAZ,MAAA;MAEA;QAAAa;MAAA,IAAAZ,wBAAA;MAEAY,MAAA,QAAA9B,OAAA;QAAA+B,QAAA,EAAAF;MAAA;IACA;IACA;IACAG,YAAAC,CAAA;MACA,KAAAC,YAAA,CAAAD,CAAA;IACA;IACA;IACAE,cAAAF,CAAA;MACA,KAAAG,cAAA,CAAAH,CAAA;IACA;IACAI,aAAAC,GAAA;MACA;QAAAC;MAAA,SAAArC,cAAA;MACA,KAAAF,OAAA,GAAAuC,QAAA,aAAA9C,MAAA,CAAA6C,GAAA,EAAAE,KAAA,QAAAC,EAAA,GAAAH,GAAA;MACA,KAAAV,aAAA;IACA;IACAF,MAAA;MACA,KAAAgB,KAAA,CAAAC,OAAA,CAAAjB,KAAA;IACA;IACA;IACAkB,WAAAX,CAAA;MACA,KAAAY,WAAA,CAAAZ,CAAA;IACA;IACA;IACAa,YAAAb,CAAA;MACA,KAAAc,YAAA,CAAAd,CAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}