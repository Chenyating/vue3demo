{"ast":null,"code":"import Vue from \"vue\";\nimport axios from \"axios\";\nimport { MessageUtil } from \"@cndinfo/cube-web-utils\";\nimport moment from \"moment\";\nimport { getToken } from \"./auth\";\nimport analyticsInstance from \"./analytics\";\nlet loading;\nfunction startLoading() {\n  const styleNode = document.createElement('style');\n  styleNode.setAttribute('type', 'text/css');\n  styleNode.innerHTML = `\n    .el-loading-fullscreen-request{\n        z-index:2147483584 !important;\n    }\n`;\n  // document.querySelector('head')?.appendChild(styleNode)\n  loading = Vue.prototype.$loading({\n    fullscreen: true,\n    text: '',\n    spinner: 'el-icon-loading',\n    background: 'rgba(255, 255, 255, .5)',\n    customClass: 'el-loading-fullscreen-request'\n  });\n}\nfunction endLoading() {\n  loading.close();\n}\n\n//声明一个对象用于存储请求个数\nlet needLoadingRequestCount = 0;\nfunction showFullScreenLoading() {\n  if (needLoadingRequestCount === 0) {\n    startLoading();\n  }\n  needLoadingRequestCount++;\n}\nfunction tryHideFullScreenLoading() {\n  if (needLoadingRequestCount <= 0) return;\n  needLoadingRequestCount--;\n  if (needLoadingRequestCount === 0) {\n    endLoading();\n  }\n}\nconst service = axios.create({\n  baseURL: process.env.VUE_APP_BASE_API,\n  withCredentials: true,\n  timeout: 100000,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  },\n  transformRequest: [function (data) {\n    // eslint-disable-next-line\n    Date.prototype.toJSON = function () {\n      const formatDate = moment(this).format(\"YYYY-MM-DD HH:mm:ss\");\n      return formatDate.replace(\" \", \"T\");\n    };\n    if (data instanceof FormData) return data;\n    data = JSON.stringify(data);\n    return data;\n  }]\n});\n\n// request interceptor\nservice.interceptors.request.use(config => {\n  if (config && !config.noLoading) {\n    showFullScreenLoading();\n  }\n  if (config.noRequestHeaders !== false && localStorage.getItem(\"requestHeaders\")) {\n    const requestHeaders = JSON.parse(localStorage.getItem(\"requestHeaders\"));\n    Object.keys(requestHeaders).forEach(key => {\n      config.headers[key] = requestHeaders[key];\n    });\n  }\n  if (getToken()) {\n    config.headers[\"Authorization\"] = getToken();\n  }\n  if (config.type) {\n    config.headers[\"Content-Type\"] = config.type;\n  }\n  return config;\n}, error => {\n  console.log(error);\n  Promise.reject(error);\n});\nservice.interceptors.response.use(response => {\n  tryHideFullScreenLoading();\n  const res = response.data;\n  let isRequestSuccess = true;\n  console.warn(\"response---1\", res);\n  if (res && res.code) {\n    switch (res.code) {\n      case \"0000\":\n        break;\n      case \"200\":\n        break;\n      default:\n        isRequestSuccess = false;\n        MessageUtil.error(res.message);\n    }\n  } else {\n    isRequestSuccess = true;\n  }\n  const requestTime = moment(response.headers.date);\n  const nowTime = moment(new Date());\n  const differ = nowTime.diff(requestTime);\n  try {\n    analyticsInstance.collectApi({\n      apiName: response.config.url,\n      apiTimeCost: differ,\n      isSuccess: isRequestSuccess ? \"true\" : \"false\"\n    });\n  } catch (e) {}\n  return isRequestSuccess ? res : Promise.reject(res);\n}, error => {\n  tryHideFullScreenLoading();\n  let isTimeOut = false;\n  if (error.toString().indexOf(\"timeout\") > -1) {\n    MessageUtil.warning(\"请求超时，请重试！\");\n    isTimeOut = true;\n  }\n  if (isTimeOut && error.config) {\n    // 因为超时不会有error.response 且 获取不到date 所以分别写\n    try {\n      const url = error.config.url;\n      analyticsInstance.collectApi({\n        apiName: url,\n        apiTimeCost: -1,\n        isSuccess: \"timeout\"\n      });\n    } catch (e) {}\n  }\n  if (error.response) {\n    try {\n      const requestTime = moment(error.response.headers.date);\n      const nowTime = moment(new Date());\n      const differ = nowTime.diff(requestTime);\n      analyticsInstance.collectApi({\n        apiName: error.response ? error.response.config.url : \"\",\n        apiTimeCost: differ,\n        isSuccess: \"false\"\n      });\n    } catch (e) {\n      console.log(e);\n    }\n    const statusRes = error.response.status;\n    const errRes = error.response.data;\n    if (errRes.message) {\n      MessageUtil.warning(errRes.message);\n      return;\n    }\n    switch (statusRes) {\n      case 400:\n        MessageUtil.warning(\"客户端请求的语法错误，服务器无法理解\");\n        break;\n      case 401:\n        MessageUtil.warning(\"Token已过期失效，请重新登录\");\n        break;\n      case 404:\n        MessageUtil.warning(\"可能正在重启服务，请稍等！\");\n        break;\n      case 405:\n        MessageUtil.warning(\"客户端请求中的方法被禁止\");\n        break;\n      case 500:\n        MessageUtil.warning(\"服务器内部错误，无法完成请求\");\n        break;\n      case 502:\n        MessageUtil.warning(\"从远程服务器接收到了一个无效的响应\");\n        break;\n      default:\n        MessageUtil.warning(errRes.message);\n        break;\n    }\n  }\n  return error;\n});\nexport default service;","map":{"version":3,"names":["Vue","axios","MessageUtil","moment","getToken","analyticsInstance","loading","startLoading","styleNode","document","createElement","setAttribute","innerHTML","prototype","$loading","fullscreen","text","spinner","background","customClass","endLoading","close","needLoadingRequestCount","showFullScreenLoading","tryHideFullScreenLoading","service","create","baseURL","process","env","VUE_APP_BASE_API","withCredentials","timeout","headers","transformRequest","data","Date","toJSON","formatDate","format","replace","FormData","JSON","stringify","interceptors","request","use","config","noLoading","noRequestHeaders","localStorage","getItem","requestHeaders","parse","Object","keys","forEach","key","type","error","console","log","Promise","reject","response","res","isRequestSuccess","warn","code","message","requestTime","date","nowTime","differ","diff","collectApi","apiName","url","apiTimeCost","isSuccess","e","isTimeOut","toString","indexOf","warning","statusRes","status","errRes"],"sources":["/Users/myproject/vuedemo/node_modules/@cndinfo/cube-design-web/node_modules/@cndinfo/cube-web-utils/src/utils/request.js"],"sourcesContent":["import Vue from \"vue\"\nimport axios from \"axios\"\nimport { MessageUtil } from \"@cndinfo/cube-web-utils\"\nimport moment from \"moment\"\nimport {\n  getToken,\n} from \"./auth\"\nimport analyticsInstance from \"./analytics\"\nlet loading\nfunction startLoading() {\n  const styleNode = document.createElement('style')\n  styleNode.setAttribute('type', 'text/css')\n  styleNode.innerHTML = `\n    .el-loading-fullscreen-request{\n        z-index:2147483584 !important;\n    }\n`\n  // document.querySelector('head')?.appendChild(styleNode)\n  loading = Vue.prototype.$loading({\n    fullscreen: true,\n    text: '',\n    spinner: 'el-icon-loading',\n    background: 'rgba(255, 255, 255, .5)',\n    customClass: 'el-loading-fullscreen-request',\n  })\n}\nfunction endLoading() {\n  loading.close()\n}\n\n//声明一个对象用于存储请求个数\nlet needLoadingRequestCount = 0\nfunction showFullScreenLoading() {\n  if (needLoadingRequestCount === 0) {\n    startLoading()\n  }\n  needLoadingRequestCount++\n}\nfunction tryHideFullScreenLoading() {\n  if (needLoadingRequestCount <= 0) return\n  needLoadingRequestCount--\n  if (needLoadingRequestCount === 0) {\n    endLoading()\n  }\n}\n\nconst service = axios.create({\n  baseURL: process.env.VUE_APP_BASE_API,\n  withCredentials: true,\n  timeout: 100000,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  },\n  transformRequest: [\n    function (data) {\n      // eslint-disable-next-line\n      Date.prototype.toJSON = function () {\n        const formatDate = moment(this).format(\"YYYY-MM-DD HH:mm:ss\")\n        return formatDate.replace(\" \", \"T\")\n      }\n      if (data instanceof FormData) return data\n      data = JSON.stringify(data)\n      return data\n    }\n  ]\n})\n\n// request interceptor\nservice.interceptors.request.use(\n  (config) => {\n    if (config && !config.noLoading) {\n      showFullScreenLoading()\n    }\n\n    if (\n      config.noRequestHeaders !== false &&\n      localStorage.getItem(\"requestHeaders\")\n    ) {\n      const requestHeaders = JSON.parse(localStorage.getItem(\"requestHeaders\"))\n      Object.keys(requestHeaders).forEach((key) => {\n        config.headers[key] = requestHeaders[key]\n      })\n    }\n\n    if (getToken()) {\n      config.headers[\"Authorization\"] = getToken()\n    }\n    if (config.type) {\n      config.headers[\"Content-Type\"] = config.type\n    }\n    return config\n  },\n  (error) => {\n    console.log(error)\n    Promise.reject(error)\n  }\n)\n\nservice.interceptors.response.use(\n  (response) => {\n    tryHideFullScreenLoading()\n    const res = response.data\n    let isRequestSuccess = true\n    console.warn(\"response---1\", res)\n    if (res && res.code) {\n      switch (res.code) {\n        case \"0000\":\n          break\n        case \"200\":\n          break\n        default:\n          isRequestSuccess = false\n          MessageUtil.error(res.message)\n      }\n    } else {\n      isRequestSuccess = true\n    }\n    const requestTime = moment(response.headers.date)\n    const nowTime = moment(new Date())\n    const differ = nowTime.diff(requestTime)\n    try {\n      analyticsInstance.collectApi({\n        apiName: response.config.url,\n        apiTimeCost: differ,\n        isSuccess: isRequestSuccess ? \"true\" : \"false\"\n      })\n    } catch (e) {}\n    return isRequestSuccess ? res : Promise.reject(res)\n  },\n  (error) => {\n    tryHideFullScreenLoading()\n    let isTimeOut = false\n    if (error.toString().indexOf(\"timeout\") > -1) {\n      MessageUtil.warning(\"请求超时，请重试！\")\n      isTimeOut = true\n    }\n    if (isTimeOut && error.config) {\n      // 因为超时不会有error.response 且 获取不到date 所以分别写\n      try {\n        const url = error.config.url\n        analyticsInstance.collectApi({\n          apiName: url,\n          apiTimeCost: -1,\n          isSuccess: \"timeout\"\n        })\n      } catch (e) {}\n    }\n    if (error.response) {\n      try {\n        const requestTime = moment(error.response.headers.date)\n        const nowTime = moment(new Date())\n        const differ = nowTime.diff(requestTime)\n        analyticsInstance.collectApi({\n          apiName: error.response ? error.response.config.url : \"\",\n          apiTimeCost: differ,\n          isSuccess: \"false\"\n        })\n      } catch (e) {\n        console.log(e)\n      }\n      const statusRes = error.response.status\n      const errRes = error.response.data\n      if (errRes.message) {\n        MessageUtil.warning(errRes.message)\n        return\n      }\n      switch (statusRes) {\n        case 400:\n          MessageUtil.warning(\"客户端请求的语法错误，服务器无法理解\")\n          break\n        case 401:\n          MessageUtil.warning(\"Token已过期失效，请重新登录\")\n          break\n        case 404:\n          MessageUtil.warning(\"可能正在重启服务，请稍等！\")\n          break\n        case 405:\n          MessageUtil.warning(\"客户端请求中的方法被禁止\")\n          break\n        case 500:\n          MessageUtil.warning(\"服务器内部错误，无法完成请求\")\n          break\n        case 502:\n          MessageUtil.warning(\"从远程服务器接收到了一个无效的响应\")\n          break\n        default:\n          MessageUtil.warning(errRes.message)\n          break\n      }\n    }\n    return error\n  }\n)\n\nexport default service\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}