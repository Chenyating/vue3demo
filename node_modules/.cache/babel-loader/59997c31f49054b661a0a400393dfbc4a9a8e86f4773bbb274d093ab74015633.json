{"ast":null,"code":"import { getFineUser } from './security.js';\nlet hasLoadedReport = false;\nexport const createIframe = ({\n  origin,\n  loginPath,\n  iframeId\n}, callback, user) => {\n  return new Promise((resolve, reject) => {\n    const {\n      username,\n      password\n    } = getFineUser();\n    const scr = document.createElement('iframe'); // 创建iframe\n    scr.id = iframeId;\n    const queryUser = username || user.username;\n    const queryPassword = password || user.password;\n    const enCodeUsername = encodeURIComponent(queryUser);\n    const enCodePassword = encodeURIComponent(queryPassword);\n    const validity = `validity=-1`;\n    scr.src = `${origin}${loginPath}?fine_username=${enCodeUsername}&fine_password=${enCodePassword}&${validity}`; // 省略callback参数 &callback=callback\n    scr.onload = function (event) {\n      const iframeLoad = localStorage.getItem(iframeId + '-hasload');\n      if (!iframeLoad) {\n        // 如果报表尚未加载\n        scr.src = `${origin}/webroot/decision/view/report?op=write&viewlet=iframe.cpt`;\n        hasLoadedReport = true; // 将标志变量设为true，表示报表已加载\n        localStorage.setItem(iframeId + '-hasload', true);\n        setTimeout(() => {\n          callback();\n          resolve();\n        }, 3000);\n      }\n    };\n    // document.querySelector('.theme-container').appendChild(scr);\n    document.getElementsByTagName(\"head\")[0].appendChild(scr);\n  });\n};\nexport const removeIframe = (iframeId = 'fineReportIframe') => {\n  // 获取 iframe 的引用\n  var iframe = document.getElementById(iframeId);\n  // 检查 iframe 是否存在\n  if (iframe) {\n    // 从父元素中移除 iframe\n    iframe.parentNode.removeChild(iframe);\n  }\n};\nexport const findIframe = (iframeId = 'fineReportIframe') => {\n  // 获取 iframe 的引用\n  var iframe = document.getElementById(iframeId);\n  // 检查 iframe 是否存在\n  if (iframe) {\n    // 从父元素中移除 iframe\n    console.log('已有的iframe');\n    return true;\n  } else {\n    console.log('未找到指定的 iframe 元素');\n    return false;\n  }\n};\nexport const sendMessageToIframe = (msg, iframeId = 'fineReportIframe', origin) => {\n  const iframe = document.getElementById(iframeId).contentWindow;\n  const sendOrigin = window.location.origin; // 获取当前页面的域名\n  console.log(msg, origin);\n  iframe.postMessage(msg, origin);\n};","map":{"version":3,"names":["getFineUser","hasLoadedReport","createIframe","origin","loginPath","iframeId","callback","user","Promise","resolve","reject","username","password","scr","document","createElement","id","queryUser","queryPassword","enCodeUsername","encodeURIComponent","enCodePassword","validity","src","onload","event","iframeLoad","localStorage","getItem","setItem","setTimeout","getElementsByTagName","appendChild","removeIframe","iframe","getElementById","parentNode","removeChild","findIframe","console","log","sendMessageToIframe","msg","contentWindow","sendOrigin","window","location","postMessage"],"sources":["/Users/myproject/vuedemo/node_modules/@cndinfo/cube-design-web/src/components/FineReport/common/iframe.js"],"sourcesContent":["import { getFineUser } from './security.js'\nlet hasLoadedReport = false\nexport const createIframe = ({\n  origin,\n  loginPath,\n  iframeId\n},callback,user) => {\n  return new Promise((resolve, reject) => {\n    const { username, password } = getFineUser()\n    const scr = document.createElement('iframe') // 创建iframe\n    scr.id = iframeId\n    const  queryUser = username  || user.username\n    const queryPassword = password || user.password\n    const enCodeUsername =  encodeURIComponent(queryUser)\n    const enCodePassword = encodeURIComponent(queryPassword)\n    const validity = `validity=-1`\n    scr.src = `${origin}${loginPath}?fine_username=${enCodeUsername}&fine_password=${enCodePassword}&${validity}` // 省略callback参数 &callback=callback\n    scr.onload = function (event) {\n      const iframeLoad = localStorage.getItem(iframeId + '-hasload')\n      if (!iframeLoad) { // 如果报表尚未加载\n        scr.src = `${origin}/webroot/decision/view/report?op=write&viewlet=iframe.cpt`\n        hasLoadedReport = true // 将标志变量设为true，表示报表已加载\n        localStorage.setItem(iframeId + '-hasload',true)\n        setTimeout(()=>{\n          callback()\n          resolve()\n        },3000)\n      }\n    }\n    // document.querySelector('.theme-container').appendChild(scr);\n    document.getElementsByTagName(\"head\")[0].appendChild(scr); \n  })\n}\n\n\nexport const removeIframe = (iframeId = 'fineReportIframe') => {\n  // 获取 iframe 的引用\n  var iframe = document.getElementById(iframeId);\n  // 检查 iframe 是否存在\n  if (iframe) {\n    // 从父元素中移除 iframe\n    iframe.parentNode.removeChild(iframe);\n  } \n}\n\nexport const findIframe = (iframeId = 'fineReportIframe') => {\n  // 获取 iframe 的引用\n  var iframe = document.getElementById(iframeId);\n  // 检查 iframe 是否存在\n  if (iframe) {\n    // 从父元素中移除 iframe\n    console.log('已有的iframe')\n    return true\n  } else {\n    console.log('未找到指定的 iframe 元素');\n    return false\n  }\n}\nexport const sendMessageToIframe = (msg, iframeId = 'fineReportIframe', origin,) => {\n  const iframe = document.getElementById(iframeId).contentWindow\n  const sendOrigin = window.location.origin; // 获取当前页面的域名\n  console.log(msg,origin)\n  iframe.postMessage(msg, origin)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}