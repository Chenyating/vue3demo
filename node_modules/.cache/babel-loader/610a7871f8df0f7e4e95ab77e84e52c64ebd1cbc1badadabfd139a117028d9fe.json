{"ast":null,"code":"// reference https://github.com/noeldelgado/gemini-scrollbar/blob/master/index.js\n\nimport { addResizeListener, removeResizeListener } from 'element-ui/src/utils/resize-event';\nimport scrollbarWidth from 'element-ui/src/utils/scrollbar-width';\nimport { toObject } from 'element-ui/src/utils/util';\nimport Bar from './bar';\n\n/* istanbul ignore next */\nexport default {\n  name: 'ElScrollbar',\n  components: {\n    Bar\n  },\n  props: {\n    native: Boolean,\n    wrapStyle: {},\n    wrapClass: {},\n    viewClass: {},\n    viewStyle: {},\n    noresize: Boolean,\n    // 如果 container 尺寸不会发生变化，最好设置它可以优化性能\n    tag: {\n      type: String,\n      default: 'div'\n    }\n  },\n  data() {\n    return {\n      sizeWidth: '0',\n      sizeHeight: '0',\n      moveX: 0,\n      moveY: 0\n    };\n  },\n  computed: {\n    wrap() {\n      return this.$refs.wrap;\n    }\n  },\n  render(h) {\n    let gutter = scrollbarWidth();\n    let style = this.wrapStyle;\n    if (gutter) {\n      const gutterWith = `-${gutter}px`;\n      const gutterStyle = `margin-bottom: ${gutterWith}; margin-right: ${gutterWith};`;\n      if (Array.isArray(this.wrapStyle)) {\n        style = toObject(this.wrapStyle);\n        style.marginRight = style.marginBottom = gutterWith;\n      } else if (typeof this.wrapStyle === 'string') {\n        style += gutterStyle;\n      } else {\n        style = gutterStyle;\n      }\n    }\n    const view = h(this.tag, {\n      class: ['el-scrollbar__view', this.viewClass],\n      style: this.viewStyle,\n      ref: 'resize'\n    }, this.$slots.default);\n    const wrap = h(\"div\", {\n      \"ref\": \"wrap\",\n      \"style\": style,\n      \"on\": {\n        \"scroll\": this.handleScroll\n      },\n      \"class\": [this.wrapClass, 'el-scrollbar__wrap', gutter ? '' : 'el-scrollbar__wrap--hidden-default']\n    }, [[view]]);\n    let nodes;\n    if (!this.native) {\n      nodes = [wrap, h(Bar, {\n        \"attrs\": {\n          \"move\": this.moveX,\n          \"size\": this.sizeWidth\n        }\n      }), h(Bar, {\n        \"attrs\": {\n          \"vertical\": true,\n          \"move\": this.moveY,\n          \"size\": this.sizeHeight\n        }\n      })];\n    } else {\n      nodes = [h(\"div\", {\n        \"ref\": \"wrap\",\n        \"class\": [this.wrapClass, 'el-scrollbar__wrap'],\n        \"style\": style\n      }, [[view]])];\n    }\n    return h('div', {\n      class: 'el-scrollbar'\n    }, nodes);\n  },\n  methods: {\n    handleScroll() {\n      const wrap = this.wrap;\n      this.moveY = wrap.scrollTop * 100 / wrap.clientHeight;\n      this.moveX = wrap.scrollLeft * 100 / wrap.clientWidth;\n    },\n    update() {\n      let heightPercentage, widthPercentage;\n      const wrap = this.wrap;\n      if (!wrap) return;\n      heightPercentage = wrap.clientHeight * 100 / wrap.scrollHeight;\n      widthPercentage = wrap.clientWidth * 100 / wrap.scrollWidth;\n      this.sizeHeight = heightPercentage < 100 ? heightPercentage + '%' : '';\n      this.sizeWidth = widthPercentage < 100 ? widthPercentage + '%' : '';\n    }\n  },\n  mounted() {\n    if (this.native) return;\n    this.$nextTick(this.update);\n    !this.noresize && addResizeListener(this.$refs.resize, this.update);\n  },\n  beforeDestroy() {\n    if (this.native) return;\n    !this.noresize && removeResizeListener(this.$refs.resize, this.update);\n  }\n};","map":{"version":3,"names":["addResizeListener","removeResizeListener","scrollbarWidth","toObject","Bar","name","components","props","native","Boolean","wrapStyle","wrapClass","viewClass","viewStyle","noresize","tag","type","String","default","data","sizeWidth","sizeHeight","moveX","moveY","computed","wrap","$refs","render","h","gutter","style","gutterWith","gutterStyle","Array","isArray","marginRight","marginBottom","view","class","ref","$slots","handleScroll","nodes","methods","scrollTop","clientHeight","scrollLeft","clientWidth","update","heightPercentage","widthPercentage","scrollHeight","scrollWidth","mounted","$nextTick","resize","beforeDestroy"],"sources":["/Users/myproject/vuedemo/node_modules/element-ui/packages/scrollbar/src/main.js"],"sourcesContent":["// reference https://github.com/noeldelgado/gemini-scrollbar/blob/master/index.js\n\nimport { addResizeListener, removeResizeListener } from 'element-ui/src/utils/resize-event';\nimport scrollbarWidth from 'element-ui/src/utils/scrollbar-width';\nimport { toObject } from 'element-ui/src/utils/util';\nimport Bar from './bar';\n\n/* istanbul ignore next */\nexport default {\n  name: 'ElScrollbar',\n\n  components: { Bar },\n\n  props: {\n    native: Boolean,\n    wrapStyle: {},\n    wrapClass: {},\n    viewClass: {},\n    viewStyle: {},\n    noresize: Boolean, // 如果 container 尺寸不会发生变化，最好设置它可以优化性能\n    tag: {\n      type: String,\n      default: 'div'\n    }\n  },\n\n  data() {\n    return {\n      sizeWidth: '0',\n      sizeHeight: '0',\n      moveX: 0,\n      moveY: 0\n    };\n  },\n\n  computed: {\n    wrap() {\n      return this.$refs.wrap;\n    }\n  },\n\n  render(h) {\n    let gutter = scrollbarWidth();\n    let style = this.wrapStyle;\n\n    if (gutter) {\n      const gutterWith = `-${gutter}px`;\n      const gutterStyle = `margin-bottom: ${gutterWith}; margin-right: ${gutterWith};`;\n\n      if (Array.isArray(this.wrapStyle)) {\n        style = toObject(this.wrapStyle);\n        style.marginRight = style.marginBottom = gutterWith;\n      } else if (typeof this.wrapStyle === 'string') {\n        style += gutterStyle;\n      } else {\n        style = gutterStyle;\n      }\n    }\n    const view = h(this.tag, {\n      class: ['el-scrollbar__view', this.viewClass],\n      style: this.viewStyle,\n      ref: 'resize'\n    }, this.$slots.default);\n    const wrap = (\n      <div\n        ref=\"wrap\"\n        style={ style }\n        onScroll={ this.handleScroll }\n        class={ [this.wrapClass, 'el-scrollbar__wrap', gutter ? '' : 'el-scrollbar__wrap--hidden-default'] }>\n        { [view] }\n      </div>\n    );\n    let nodes;\n\n    if (!this.native) {\n      nodes = ([\n        wrap,\n        <Bar\n          move={ this.moveX }\n          size={ this.sizeWidth }></Bar>,\n        <Bar\n          vertical\n          move={ this.moveY }\n          size={ this.sizeHeight }></Bar>\n      ]);\n    } else {\n      nodes = ([\n        <div\n          ref=\"wrap\"\n          class={ [this.wrapClass, 'el-scrollbar__wrap'] }\n          style={ style }>\n          { [view] }\n        </div>\n      ]);\n    }\n    return h('div', { class: 'el-scrollbar' }, nodes);\n  },\n\n  methods: {\n    handleScroll() {\n      const wrap = this.wrap;\n\n      this.moveY = ((wrap.scrollTop * 100) / wrap.clientHeight);\n      this.moveX = ((wrap.scrollLeft * 100) / wrap.clientWidth);\n    },\n\n    update() {\n      let heightPercentage, widthPercentage;\n      const wrap = this.wrap;\n      if (!wrap) return;\n\n      heightPercentage = (wrap.clientHeight * 100 / wrap.scrollHeight);\n      widthPercentage = (wrap.clientWidth * 100 / wrap.scrollWidth);\n\n      this.sizeHeight = (heightPercentage < 100) ? (heightPercentage + '%') : '';\n      this.sizeWidth = (widthPercentage < 100) ? (widthPercentage + '%') : '';\n    }\n  },\n\n  mounted() {\n    if (this.native) return;\n    this.$nextTick(this.update);\n    !this.noresize && addResizeListener(this.$refs.resize, this.update);\n  },\n\n  beforeDestroy() {\n    if (this.native) return;\n    !this.noresize && removeResizeListener(this.$refs.resize, this.update);\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}