{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport '../../../../lib/styles/components/FormCardList.scss';\nexport default {\n  name: 'FormCardList',\n  provide() {\n    return {\n      formCardList: this\n    };\n  },\n  props: {\n    // 是否为手风琴模式（true同时只存在一个打开）\n    accordion: {\n      type: Boolean,\n      default: false\n    },\n    // 当前激活的面板\n    activePanel: {\n      type: [String, Array],\n      default: () => []\n    },\n    change: {\n      type: Function,\n      default: () => {}\n    },\n    errorPosition: {\n      type: Boolean,\n      default: false\n    },\n    className: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      formCardContainerList: [],\n      cardNameList: [],\n      markId: '',\n      openCardList: [] // 默认开启子项配置了shrink: false\n    };\n  },\n\n  computed: {\n    curCollapse() {\n      return [...this.activePanel, ...this.openCardList];\n    }\n  },\n  created() {\n    // 设置独有id\n    this.markId = 'formCard' + new Date().getTime() + Math.ceil(Math.random() * 10000);\n  },\n  mounted() {\n    if (this.errorPosition) {\n      // 当前formCardList对象\n      const curCard = document.getElementById(this.markId);\n      this.formCardContainerList = curCard.getElementsByClassName('form-card-container');\n      for (const item of this.formCardContainerList) {\n        this.cardNameList.push(item.getAttribute('data-mark'));\n      }\n    }\n  },\n  methods: {\n    // 聚焦第一个错误表单\n    focusFirstFormItem() {\n      if (this.errorPosition) {\n        const errorList = document.getElementsByClassName('is-error');\n        if (errorList && errorList.length > 0) {\n          let curInput;\n          errorList.forEach((item, index) => {\n            if (index === 0) {\n              curInput = item;\n            }\n          });\n          curInput = curInput.getElementsByClassName('el-input__inner');\n          // console.log('curInput--', curInput)\n          // 打开有错误表单的面板\n          this.toggleCard();\n          this.$nextTick(() => {\n            // console.log('聚焦')\n            curInput[0].focus();\n          });\n        }\n      }\n    },\n    // 判断当前form-card是否有校验未过表单\n    toggleCard() {\n      this.formCardContainerList.forEach((item, index) => {\n        const errorList = item.getElementsByClassName('is-error');\n        // console.log(`${this.cardNameList[index]}--`, errorList)\n        if (errorList && errorList.length > 0) {\n          this.curCollapse.push(this.cardNameList[index]);\n        } else {\n          const curIndex = this.curCollapse.indexOf(this.cardNameList[index]);\n          if (curIndex > -1) {\n            this.curCollapse.splice(curIndex, 1);\n          }\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","provide","formCardList","props","accordion","type","Boolean","default","activePanel","String","Array","change","Function","errorPosition","className","data","formCardContainerList","cardNameList","markId","openCardList","computed","curCollapse","created","Date","getTime","Math","ceil","random","mounted","curCard","document","getElementById","getElementsByClassName","item","push","getAttribute","methods","focusFirstFormItem","errorList","length","curInput","forEach","index","toggleCard","$nextTick","focus","curIndex","indexOf","splice"],"sources":["node_modules/@cndinfo/cube-design-web/src/components/FormCardList/src/index.vue"],"sourcesContent":["<template>\n  <div :id=\"markId\" class=\"form-card-list-container\">\n    <el-collapse v-model=\"curCollapse\" :accordion=\"accordion\" :class=\"className\" @change=\"change\">\n      <slot />\n    </el-collapse>\n  </div>\n</template>\n\n<script>\nimport '../../../../lib/styles/components/FormCardList.scss'\nexport default {\n  name: 'FormCardList',\n  provide() {\n    return {\n      formCardList: this\n    }\n  },\n  props: {\n    // 是否为手风琴模式（true同时只存在一个打开）\n    accordion: {\n      type: Boolean,\n      default: false\n    },\n    // 当前激活的面板\n    activePanel: {\n      type: [String, Array],\n      default: () => []\n    },\n    change: {\n      type: Function,\n      default: () => {}\n    },\n    errorPosition: {\n      type: Boolean,\n      default: false\n    },\n    className: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      formCardContainerList: [],\n      cardNameList: [],\n      markId: '',\n      openCardList: [] // 默认开启子项配置了shrink: false\n    }\n  },\n  computed: {\n    curCollapse() {\n      return [...this.activePanel, ...this.openCardList]\n    }\n  },\n  created() {\n    // 设置独有id\n    this.markId = 'formCard' + (new Date().getTime()) + Math.ceil(Math.random() * 10000)\n  },\n  mounted() {\n    if (this.errorPosition) {\n      // 当前formCardList对象\n      const curCard = document.getElementById(this.markId)\n      this.formCardContainerList = curCard.getElementsByClassName('form-card-container')\n      for (const item of this.formCardContainerList) {\n        this.cardNameList.push(item.getAttribute('data-mark'))\n      }\n    }\n  },\n  methods: {\n    // 聚焦第一个错误表单\n    focusFirstFormItem() {\n      if (this.errorPosition) {\n        const errorList = document.getElementsByClassName('is-error')\n        if (errorList && errorList.length > 0) {\n          let curInput\n          errorList.forEach((item, index) => {\n            if (index === 0) {\n              curInput = item\n            }\n          })\n          curInput = curInput.getElementsByClassName('el-input__inner')\n          // console.log('curInput--', curInput)\n          // 打开有错误表单的面板\n          this.toggleCard()\n          this.$nextTick(() => {\n            // console.log('聚焦')\n            curInput[0].focus()\n          })\n        }\n      }\n    },\n    // 判断当前form-card是否有校验未过表单\n    toggleCard() {\n      this.formCardContainerList.forEach((item, index) => {\n        const errorList = item.getElementsByClassName('is-error')\n        // console.log(`${this.cardNameList[index]}--`, errorList)\n        if (errorList && errorList.length > 0) {\n          this.curCollapse.push(this.cardNameList[index])\n        } else {\n          const curIndex = this.curCollapse.indexOf(this.cardNameList[index])\n          if (curIndex > -1) {\n            this.curCollapse.splice(curIndex, 1)\n          }\n        }\n      })\n    }\n  }\n}\n</script>\n"],"mappings":";AASA;AACA;EACAA,IAAA;EACAC,QAAA;IACA;MACAC,YAAA;IACA;EACA;EACAC,KAAA;IACA;IACAC,SAAA;MACAC,IAAA,EAAAC,OAAA;MACAC,OAAA;IACA;IACA;IACAC,WAAA;MACAH,IAAA,GAAAI,MAAA,EAAAC,KAAA;MACAH,OAAA,EAAAA,CAAA;IACA;IACAI,MAAA;MACAN,IAAA,EAAAO,QAAA;MACAL,OAAA,EAAAA,CAAA;IACA;IACAM,aAAA;MACAR,IAAA,EAAAC,OAAA;MACAC,OAAA;IACA;IACAO,SAAA;MACAT,IAAA,EAAAI,MAAA;MACAF,OAAA;IACA;EACA;EACAQ,KAAA;IACA;MACAC,qBAAA;MACAC,YAAA;MACAC,MAAA;MACAC,YAAA;IACA;EACA;;EACAC,QAAA;IACAC,YAAA;MACA,gBAAAb,WAAA,UAAAW,YAAA;IACA;EACA;EACAG,QAAA;IACA;IACA,KAAAJ,MAAA,oBAAAK,IAAA,GAAAC,OAAA,KAAAC,IAAA,CAAAC,IAAA,CAAAD,IAAA,CAAAE,MAAA;EACA;EACAC,QAAA;IACA,SAAAf,aAAA;MACA;MACA,MAAAgB,OAAA,GAAAC,QAAA,CAAAC,cAAA,MAAAb,MAAA;MACA,KAAAF,qBAAA,GAAAa,OAAA,CAAAG,sBAAA;MACA,WAAAC,IAAA,SAAAjB,qBAAA;QACA,KAAAC,YAAA,CAAAiB,IAAA,CAAAD,IAAA,CAAAE,YAAA;MACA;IACA;EACA;EACAC,OAAA;IACA;IACAC,mBAAA;MACA,SAAAxB,aAAA;QACA,MAAAyB,SAAA,GAAAR,QAAA,CAAAE,sBAAA;QACA,IAAAM,SAAA,IAAAA,SAAA,CAAAC,MAAA;UACA,IAAAC,QAAA;UACAF,SAAA,CAAAG,OAAA,EAAAR,IAAA,EAAAS,KAAA;YACA,IAAAA,KAAA;cACAF,QAAA,GAAAP,IAAA;YACA;UACA;UACAO,QAAA,GAAAA,QAAA,CAAAR,sBAAA;UACA;UACA;UACA,KAAAW,UAAA;UACA,KAAAC,SAAA;YACA;YACAJ,QAAA,IAAAK,KAAA;UACA;QACA;MACA;IACA;IACA;IACAF,WAAA;MACA,KAAA3B,qBAAA,CAAAyB,OAAA,EAAAR,IAAA,EAAAS,KAAA;QACA,MAAAJ,SAAA,GAAAL,IAAA,CAAAD,sBAAA;QACA;QACA,IAAAM,SAAA,IAAAA,SAAA,CAAAC,MAAA;UACA,KAAAlB,WAAA,CAAAa,IAAA,MAAAjB,YAAA,CAAAyB,KAAA;QACA;UACA,MAAAI,QAAA,QAAAzB,WAAA,CAAA0B,OAAA,MAAA9B,YAAA,CAAAyB,KAAA;UACA,IAAAI,QAAA;YACA,KAAAzB,WAAA,CAAA2B,MAAA,CAAAF,QAAA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}