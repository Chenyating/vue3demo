{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport path from 'path';\nimport Item from './Item';\nimport AppLink from './Link';\nimport FixIOSBug from './FixiOSBug';\nexport default {\n  name: 'TopNavItem',\n  components: {\n    AppLink,\n    Item\n  },\n  // Item\n  mixins: [FixIOSBug],\n  props: {\n    item: {\n      type: Object,\n      required: true\n    },\n    isNest: {\n      type: Boolean,\n      default: false\n    },\n    basePath: {\n      type: String,\n      default: ''\n    },\n    linkProps: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    }\n  },\n  data() {\n    return {};\n  },\n  computed: {\n    // 是否存在显示的子级\n    hasChild_() {\n      if (this.item.children && this.item.children.length > 0) {\n        const child = this.item.children.filter(v => {\n          return v.hidden !== true;\n        });\n        return child.length > 0;\n      }\n      return false;\n    }\n  },\n  methods: {\n    isExternal(path) {\n      return /^(https?:|mailto:|tel:)/.test(path);\n    },\n    resolvePath(routePath) {\n      if (this.isExternal(routePath)) {\n        const urlParams = new URL(routePath);\n        Object.entries(this.linkProps).forEach(([k, v]) => {\n          if (urlParams.searchParams.has(k)) {\n            urlParams.searchParams.set(k, v);\n          } else {\n            urlParams.searchParams.append(k, v);\n          }\n        });\n        const url = urlParams.toString();\n        return url;\n      }\n      return path.resolve(this.basePath, routePath);\n    }\n  }\n};","map":{"version":3,"names":["path","Item","AppLink","FixIOSBug","name","components","mixins","props","item","type","Object","required","isNest","Boolean","default","basePath","String","linkProps","data","computed","hasChild_","children","length","child","filter","v","hidden","methods","isExternal","test","resolvePath","routePath","urlParams","URL","entries","forEach","k","searchParams","has","set","append","url","toString","resolve"],"sources":["node_modules/@cndinfo/cube-design-web/src/components/TopNav/src/TopNavItem.vue"],"sourcesContent":["<template>\n  <div v-if=\"!item.hidden\" class=\"menu-wrapper\">\n    <template v-if=\"!hasChild_\">\n      <app-link v-if=\"item.meta\" :to=\"resolvePath(item.path)\">\n        <el-menu-item\n          :index=\"item.meta.id\"\n          :disabled=\"item.disabled\"\n          :class=\"{ 'submenu-title-noDropdown': !isNest }\"\n        >\n          <item :icon=\"item.meta.icon\" :title=\"item.meta.title\" />\n        </el-menu-item>\n      </app-link>\n    </template>\n    <el-submenu\n      v-else\n      ref=\"subMenu\"\n      :index=\"item.meta && item.meta.id\"\n      :disabled=\"item.disabled\"\n      popper-class=\"top-nav-popup\"\n      :popper-append-to-body=\"!isNest\"\n    >\n      <template slot=\"title\">\n        <item\n          v-if=\"item.meta\"\n          :icon=\"item.meta.icon\"\n          :title=\"item.meta.title\"\n        />\n      </template>\n      <top-nav-item\n        v-for=\"child in item.children\"\n        :key=\"child.id\"\n        is-nest\n        :item=\"child\"\n        :base-path=\"resolvePath(child.path)\"\n        :link-props=\"linkProps\"\n        class=\"nest-menu\"\n      />\n    </el-submenu>\n  </div>\n</template>\n\n<script>\nimport path from 'path'\nimport Item from './Item'\nimport AppLink from './Link'\nimport FixIOSBug from './FixiOSBug'\n\nexport default {\n  name: 'TopNavItem',\n  components: { AppLink, Item }, // Item\n  mixins: [FixIOSBug],\n  props: {\n    item: {\n      type: Object,\n      required: true\n    },\n    isNest: {\n      type: Boolean,\n      default: false\n    },\n    basePath: {\n      type: String,\n      default: ''\n    },\n    linkProps: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    }\n  },\n  data() {\n    return {}\n  },\n  computed: {\n    // 是否存在显示的子级\n    hasChild_() {\n      if (this.item.children && this.item.children.length > 0) {\n        const child = this.item.children.filter((v) => {\n          return v.hidden !== true\n        })\n        return child.length > 0\n      }\n      return false\n    }\n  },\n  methods: {\n    isExternal(path) {\n      return /^(https?:|mailto:|tel:)/.test(path)\n    },\n    resolvePath(routePath) {\n      if (this.isExternal(routePath)) {\n        const urlParams = new URL(routePath)\n        Object.entries(this.linkProps).forEach(([k, v]) => {\n          if (urlParams.searchParams.has(k)) {\n            urlParams.searchParams.set(k, v)\n          } else {\n            urlParams.searchParams.append(k, v)\n          }\n        })\n        const url = urlParams.toString()\n        return url\n      }\n      return path.resolve(this.basePath, routePath)\n    }\n  }\n}\n</script>\n"],"mappings":";;;AA0CA,OAAAA,IAAA;AACA,OAAAC,IAAA;AACA,OAAAC,OAAA;AACA,OAAAC,SAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IAAAH,OAAA;IAAAD;EAAA;EAAA;EACAK,MAAA,GAAAH,SAAA;EACAI,KAAA;IACAC,IAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;IACAC,MAAA;MACAH,IAAA,EAAAI,OAAA;MACAC,OAAA;IACA;IACAC,QAAA;MACAN,IAAA,EAAAO,MAAA;MACAF,OAAA;IACA;IACAG,SAAA;MACAR,IAAA,EAAAC,MAAA;MACAI,OAAA,EAAAA,CAAA;QACA;MACA;IACA;EACA;EACAI,KAAA;IACA;EACA;EACAC,QAAA;IACA;IACAC,UAAA;MACA,SAAAZ,IAAA,CAAAa,QAAA,SAAAb,IAAA,CAAAa,QAAA,CAAAC,MAAA;QACA,MAAAC,KAAA,QAAAf,IAAA,CAAAa,QAAA,CAAAG,MAAA,CAAAC,CAAA;UACA,OAAAA,CAAA,CAAAC,MAAA;QACA;QACA,OAAAH,KAAA,CAAAD,MAAA;MACA;MACA;IACA;EACA;EACAK,OAAA;IACAC,WAAA5B,IAAA;MACA,iCAAA6B,IAAA,CAAA7B,IAAA;IACA;IACA8B,YAAAC,SAAA;MACA,SAAAH,UAAA,CAAAG,SAAA;QACA,MAAAC,SAAA,OAAAC,GAAA,CAAAF,SAAA;QACArB,MAAA,CAAAwB,OAAA,MAAAjB,SAAA,EAAAkB,OAAA,GAAAC,CAAA,EAAAX,CAAA;UACA,IAAAO,SAAA,CAAAK,YAAA,CAAAC,GAAA,CAAAF,CAAA;YACAJ,SAAA,CAAAK,YAAA,CAAAE,GAAA,CAAAH,CAAA,EAAAX,CAAA;UACA;YACAO,SAAA,CAAAK,YAAA,CAAAG,MAAA,CAAAJ,CAAA,EAAAX,CAAA;UACA;QACA;QACA,MAAAgB,GAAA,GAAAT,SAAA,CAAAU,QAAA;QACA,OAAAD,GAAA;MACA;MACA,OAAAzC,IAAA,CAAA2C,OAAA,MAAA5B,QAAA,EAAAgB,SAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}