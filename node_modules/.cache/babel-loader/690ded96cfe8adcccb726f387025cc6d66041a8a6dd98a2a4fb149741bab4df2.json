{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { cubeCacheStore } from './store/index.js';\nexport default {\n  data() {\n    return {\n      editableTabsValue: '2',\n      cacheKeyArray: [],\n      tabIndex: 2\n    };\n  },\n  methods: {\n    goEdit(key) {\n      this.$router.push({\n        path: '/edit',\n        query: {\n          cacheKey: key\n        }\n      });\n    },\n    handleTabsEdit(targetName, action) {\n      if (action === 'add') {\n        let newTabName = ++this.tabIndex + '';\n        this.editableTabs.push({\n          title: 'New Tab',\n          name: newTabName,\n          content: 'New Tab content'\n        });\n        this.editableTabsValue = newTabName;\n      }\n      if (action === 'remove') {\n        let tabs = this.editableTabs;\n        let activeName = this.editableTabsValue;\n        if (activeName === targetName) {\n          tabs.forEach((tab, index) => {\n            if (tab.name === targetName) {\n              let nextTab = tabs[index + 1] || tabs[index - 1];\n              if (nextTab) {\n                activeName = nextTab.name;\n              }\n            }\n          });\n        }\n        this.editableTabsValue = activeName;\n        this.editableTabs = tabs.filter(tab => tab.name !== targetName);\n      }\n    }\n  }\n};","map":{"version":3,"names":["cubeCacheStore","data","editableTabsValue","cacheKeyArray","tabIndex","methods","goEdit","key","$router","push","path","query","cacheKey","handleTabsEdit","targetName","action","newTabName","editableTabs","title","name","content","tabs","activeName","forEach","tab","index","nextTab","filter"],"sources":["src/App.vue"],"sourcesContent":["<!-- <template>\n  <div id=\"app\">\n    <el-tabs editable >\n      <el-tab-pane\n        v-for=\"cacheKey in cacheKeyArray\"\n        :key=\"cacheKey\"\n        :to=\"`/edit?cacheKey=${cacheKey}`\"\n        :label=\"cacheKey\"\n        name=\"edit\"\n      >\n        <router-view />\n      </el-tab-pane>\n    </el-tabs>\n  </div>\n</template>\n\n<script>\nimport { cubeCacheStore } from './store/index.js'\nexport default {\n  data() {\n    return {\n      cubeCache: cubeCacheStore(),\n      cacheKeyArray: [],\n    }\n  },\n  methods: {\n    goEdit() {\n      var cacheKey = this.cubeCache.getCacheKey()\n      this.$router.push({ path: '/edit', query: { cacheKey: cacheKey } })\n      this.cacheKeyArray.push(cacheKey)\n    },\n  },\n}\n</script> -->\n<template>\n  <div id=\"app\">\n    <el-tabs\n      v-model=\"editableTabsValue\"\n      type=\"card\"\n      editable\n      @edit=\"handleTabsEdit\"\n    >\n      <el-tab-pane\n        v-for=\"cacheKey in cacheKeyArray\"\n        :key=\"cacheKey\"\n        :label=\"cacheKey\"\n        name=\"edit\"\n        :tab-click=\"goEdit(cacheKey)\"\n      >\n        <router-view />\n      </el-tab-pane>\n    </el-tabs>\n  </div>\n</template>\n<script>\nimport { cubeCacheStore } from './store/index.js'\n\nexport default {\n  data() {\n    return {\n      editableTabsValue: '2',\n      cacheKeyArray: [],\n      tabIndex: 2,\n    }\n  },\n  methods: {\n    goEdit(key){\n      this.$router.push({ path: '/edit', query: { cacheKey: key } })\n    },\n    handleTabsEdit(targetName, action) {\n      if (action === 'add') {\n        let newTabName = ++this.tabIndex + ''\n        this.editableTabs.push({\n          title: 'New Tab',\n          name: newTabName,\n          content: 'New Tab content',\n        })\n        this.editableTabsValue = newTabName\n      }\n      if (action === 'remove') {\n        let tabs = this.editableTabs\n        let activeName = this.editableTabsValue\n        if (activeName === targetName) {\n          tabs.forEach((tab, index) => {\n            if (tab.name === targetName) {\n              let nextTab = tabs[index + 1] || tabs[index - 1]\n              if (nextTab) {\n                activeName = nextTab.name\n              }\n            }\n          })\n        }\n\n        this.editableTabsValue = activeName\n        this.editableTabs = tabs.filter((tab) => tab.name !== targetName)\n      }\n    },\n  },\n}\n</script>\n"],"mappings":";AAuDA,SAAAA,cAAA;AAEA;EACAC,KAAA;IACA;MACAC,iBAAA;MACAC,aAAA;MACAC,QAAA;IACA;EACA;EACAC,OAAA;IACAC,OAAAC,GAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;QAAAC,IAAA;QAAAC,KAAA;UAAAC,QAAA,EAAAL;QAAA;MAAA;IACA;IACAM,eAAAC,UAAA,EAAAC,MAAA;MACA,IAAAA,MAAA;QACA,IAAAC,UAAA,UAAAZ,QAAA;QACA,KAAAa,YAAA,CAAAR,IAAA;UACAS,KAAA;UACAC,IAAA,EAAAH,UAAA;UACAI,OAAA;QACA;QACA,KAAAlB,iBAAA,GAAAc,UAAA;MACA;MACA,IAAAD,MAAA;QACA,IAAAM,IAAA,QAAAJ,YAAA;QACA,IAAAK,UAAA,QAAApB,iBAAA;QACA,IAAAoB,UAAA,KAAAR,UAAA;UACAO,IAAA,CAAAE,OAAA,EAAAC,GAAA,EAAAC,KAAA;YACA,IAAAD,GAAA,CAAAL,IAAA,KAAAL,UAAA;cACA,IAAAY,OAAA,GAAAL,IAAA,CAAAI,KAAA,SAAAJ,IAAA,CAAAI,KAAA;cACA,IAAAC,OAAA;gBACAJ,UAAA,GAAAI,OAAA,CAAAP,IAAA;cACA;YACA;UACA;QACA;QAEA,KAAAjB,iBAAA,GAAAoB,UAAA;QACA,KAAAL,YAAA,GAAAI,IAAA,CAAAM,MAAA,CAAAH,GAAA,IAAAA,GAAA,CAAAL,IAAA,KAAAL,UAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}