{"ast":null,"code":"import agEditorMixins from './ag-editor-mixins';\nimport { Popover as ElPopover, Input as ElInput } from 'element-ui';\nexport default {\n  name: 'AgGridInput',\n  components: {\n    ElPopover,\n    ElInput\n  },\n  mixins: [agEditorMixins],\n  props: {},\n  data() {\n    return {\n      popoverVisible: false,\n      hasError: false,\n      agValue: undefined,\n      content: undefined\n    };\n  },\n  computed: {\n    componentProps() {\n      return Object.assign({}, {\n        placeholder: this.$t?.('components.pleaseEnter'),\n        size: 'mini'\n      }, this.params?.cellEditorComponentProps || {});\n    }\n  },\n  mounted() {\n    this.agValue = this.params.value;\n    this.$nextTick(() => {\n      const {\n        autoFocus\n      } = this.componentProps;\n      if (autoFocus) {\n        this.focus();\n      }\n    });\n  },\n  methods: {\n    isCancelAfterEnd() {\n      return this.hasError;\n    },\n    triggerChange() {\n      const {\n        cellEditorComponentProps,\n        ...restAgParams\n      } = this.params || {};\n      const {\n        change\n      } = cellEditorComponentProps || {};\n      change?.(this.agValue, {\n        agParams: restAgParams\n      });\n    },\n    // 监听键盘事件\n    handleKeyup(e) {\n      this.triggerKeyup(e);\n    },\n    // 监听键盘事件\n    handleKeydown(e) {\n      this.triggerKeydown(e);\n    },\n    focus() {\n      this.$refs.elInput.focus();\n    },\n    blur() {\n      this.$refs.elInput.blur();\n    },\n    // 清空事件\n    clear() {\n      this.focus();\n      this.triggerChange();\n    },\n    // 失焦事件\n    handleBlur(e) {\n      this.triggerBlur(e);\n    },\n    // 聚焦事件\n    handleFocus(e) {\n      this.validate();\n      if (this.hasError) {\n        this.popoverVisible = true;\n      }\n      const {\n        focusSelect\n      } = this.componentProps;\n      if (focusSelect) {\n        this.$nextTick(() => {\n          e.target.select();\n        });\n      }\n      this.triggerFocus(e);\n    },\n    validate() {\n      const {\n        rule,\n        msg\n      } = this.componentProps;\n      if (rule && this.agValue) {\n        rule(this.params, this.agValue).then(res => {\n          this.content = msg;\n          if (res.data) {\n            this.hasError = true;\n            this.popoverVisible = this.hasError;\n          } else {\n            this.hasError = false;\n            this.popoverVisible = this.hasError;\n          }\n        }).catch(err => {\n          this.hasError = true;\n          this.popoverVisible = this.hasError;\n          this.content = err || msg;\n        });\n      }\n    },\n    // 输入事件\n    handleInput() {\n      this.validate();\n      this.triggerChange();\n    }\n  }\n};","map":{"version":3,"names":["agEditorMixins","Popover","ElPopover","Input","ElInput","name","components","mixins","props","data","popoverVisible","hasError","agValue","undefined","content","computed","componentProps","Object","assign","placeholder","$t","size","params","cellEditorComponentProps","mounted","value","$nextTick","autoFocus","focus","methods","isCancelAfterEnd","triggerChange","restAgParams","change","agParams","handleKeyup","e","triggerKeyup","handleKeydown","triggerKeydown","$refs","elInput","blur","clear","handleBlur","triggerBlur","handleFocus","validate","focusSelect","target","select","triggerFocus","rule","msg","then","res","catch","err","handleInput"],"sources":["node_modules/@cndinfo/cube-design-web/src/components/ForGridComponents/cell-editor/AgGridInput.vue"],"sourcesContent":["<template>\n  <el-popover\n    v-model=\"popoverVisible\"\n    popper-class=\"input-number-pop\"\n    placement=\"top-start\"\n    :content=\"content\"\n    trigger=\"manual\"\n  >\n    <template #reference>\n      <el-input\n        ref=\"elInput\"\n        v-model=\"agValue\"\n        :class=\"['input-number', hasError ? 'error-input' : '']\"\n        v-bind=\"componentProps\"\n        clearable\n        @input=\"handleInput\"\n        @focus=\"handleFocus\"\n        @blur=\"handleBlur\"\n        @keyup.native=\"handleKeyup\"\n        @keydown.native=\"handleKeydown\"\n        @clear=\"clear\"\n      />\n    </template>\n  </el-popover>\n</template>\n\n<script>\n\nimport agEditorMixins from './ag-editor-mixins'\nimport { Popover as ElPopover, Input as ElInput } from 'element-ui'\nexport default {\n  name: 'AgGridInput',\n  components: {\n    ElPopover,\n    ElInput\n  },\n  mixins: [agEditorMixins],\n  props: {},\n  data() {\n    return {\n      popoverVisible: false,\n      hasError: false,\n      agValue: undefined,\n      content: undefined\n    }\n  },\n  computed: {\n    componentProps() {\n      return Object.assign(\n        {},\n        {\n          placeholder: this.$t?.('components.pleaseEnter'),\n          size: 'mini'\n        },\n        this.params?.cellEditorComponentProps || {}\n      )\n    }\n  },\n  mounted() {\n    this.agValue = this.params.value\n    this.$nextTick(() => {\n      const { autoFocus } = this.componentProps\n      if (autoFocus) {\n        this.focus()\n      }\n    })\n  },\n  methods: {\n    isCancelAfterEnd() {\n      return this.hasError\n    },\n    triggerChange() {\n      const { cellEditorComponentProps, ...restAgParams } = this.params || {}\n\n      const { change } = cellEditorComponentProps || {}\n\n      change?.(this.agValue, { agParams: restAgParams })\n    },\n\n    // 监听键盘事件\n    handleKeyup(e) {\n      this.triggerKeyup(e)\n    },\n    // 监听键盘事件\n    handleKeydown(e) {\n      this.triggerKeydown(e)\n    },\n    focus() {\n      this.$refs.elInput.focus()\n    },\n    blur() {\n      this.$refs.elInput.blur()\n    },\n    // 清空事件\n    clear() {\n      this.focus()\n      this.triggerChange()\n    },\n    // 失焦事件\n    handleBlur(e) {\n      this.triggerBlur(e)\n    },\n    // 聚焦事件\n    handleFocus(e) {\n      this.validate()\n      if (this.hasError) {\n        this.popoverVisible = true\n      }\n\n      const { focusSelect } = this.componentProps\n\n      if (focusSelect) {\n        this.$nextTick(() => {\n          e.target.select()\n        })\n      }\n\n      this.triggerFocus(e)\n    },\n    validate() {\n      const { rule, msg } = this.componentProps\n\n      if (rule && this.agValue) {\n        rule(this.params, this.agValue)\n          .then((res) => {\n            this.content = msg\n            if (res.data) {\n              this.hasError = true\n              this.popoverVisible = this.hasError\n            } else {\n              this.hasError = false\n              this.popoverVisible = this.hasError\n            }\n          })\n          .catch((err) => {\n            this.hasError = true\n            this.popoverVisible = this.hasError\n            this.content = err || msg\n          })\n      }\n    },\n    // 输入事件\n    handleInput() {\n      this.validate()\n\n      this.triggerChange()\n    }\n  }\n}\n</script>\n"],"mappings":"AA4BA,OAAAA,cAAA;AACA,SAAAC,OAAA,IAAAC,SAAA,EAAAC,KAAA,IAAAC,OAAA;AACA;EACAC,IAAA;EACAC,UAAA;IACAJ,SAAA;IACAE;EACA;EACAG,MAAA,GAAAP,cAAA;EACAQ,KAAA;EACAC,KAAA;IACA;MACAC,cAAA;MACAC,QAAA;MACAC,OAAA,EAAAC,SAAA;MACAC,OAAA,EAAAD;IACA;EACA;EACAE,QAAA;IACAC,eAAA;MACA,OAAAC,MAAA,CAAAC,MAAA,CACA,IACA;QACAC,WAAA,OAAAC,EAAA;QACAC,IAAA;MACA,GACA,KAAAC,MAAA,EAAAC,wBAAA,MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAZ,OAAA,QAAAU,MAAA,CAAAG,KAAA;IACA,KAAAC,SAAA;MACA;QAAAC;MAAA,SAAAX,cAAA;MACA,IAAAW,SAAA;QACA,KAAAC,KAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,iBAAA;MACA,YAAAnB,QAAA;IACA;IACAoB,cAAA;MACA;QAAAR,wBAAA;QAAA,GAAAS;MAAA,SAAAV,MAAA;MAEA;QAAAW;MAAA,IAAAV,wBAAA;MAEAU,MAAA,QAAArB,OAAA;QAAAsB,QAAA,EAAAF;MAAA;IACA;IAEA;IACAG,YAAAC,CAAA;MACA,KAAAC,YAAA,CAAAD,CAAA;IACA;IACA;IACAE,cAAAF,CAAA;MACA,KAAAG,cAAA,CAAAH,CAAA;IACA;IACAR,MAAA;MACA,KAAAY,KAAA,CAAAC,OAAA,CAAAb,KAAA;IACA;IACAc,KAAA;MACA,KAAAF,KAAA,CAAAC,OAAA,CAAAC,IAAA;IACA;IACA;IACAC,MAAA;MACA,KAAAf,KAAA;MACA,KAAAG,aAAA;IACA;IACA;IACAa,WAAAR,CAAA;MACA,KAAAS,WAAA,CAAAT,CAAA;IACA;IACA;IACAU,YAAAV,CAAA;MACA,KAAAW,QAAA;MACA,SAAApC,QAAA;QACA,KAAAD,cAAA;MACA;MAEA;QAAAsC;MAAA,SAAAhC,cAAA;MAEA,IAAAgC,WAAA;QACA,KAAAtB,SAAA;UACAU,CAAA,CAAAa,MAAA,CAAAC,MAAA;QACA;MACA;MAEA,KAAAC,YAAA,CAAAf,CAAA;IACA;IACAW,SAAA;MACA;QAAAK,IAAA;QAAAC;MAAA,SAAArC,cAAA;MAEA,IAAAoC,IAAA,SAAAxC,OAAA;QACAwC,IAAA,MAAA9B,MAAA,OAAAV,OAAA,EACA0C,IAAA,CAAAC,GAAA;UACA,KAAAzC,OAAA,GAAAuC,GAAA;UACA,IAAAE,GAAA,CAAA9C,IAAA;YACA,KAAAE,QAAA;YACA,KAAAD,cAAA,QAAAC,QAAA;UACA;YACA,KAAAA,QAAA;YACA,KAAAD,cAAA,QAAAC,QAAA;UACA;QACA,GACA6C,KAAA,CAAAC,GAAA;UACA,KAAA9C,QAAA;UACA,KAAAD,cAAA,QAAAC,QAAA;UACA,KAAAG,OAAA,GAAA2C,GAAA,IAAAJ,GAAA;QACA;MACA;IACA;IACA;IACAK,YAAA;MACA,KAAAX,QAAA;MAEA,KAAAhB,aAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}