{"ast":null,"code":"import moment from 'moment';\nimport { formatDate } from 'element-ui/src/utils/date-util';\nexport default {\n  name: 'AgGridDate',\n  props: {\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    editable: {\n      type: Boolean,\n      default: true\n    },\n    clearable: {\n      type: Boolean,\n      default: true\n    },\n    validateEvent: {\n      type: Boolean,\n      default: true\n    },\n    unlinkPanels: {\n      type: Boolean,\n      default: false\n    },\n    size: {\n      type: String,\n      default: 'mini'\n    },\n    prefixIcon: {\n      type: String,\n      default: 'el-icon-date'\n    },\n    clearIcon: {\n      type: String,\n      default: 'el-icon-circle-close'\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    },\n    popperClass: {\n      type: String,\n      default: ''\n    },\n    defaultValue: {\n      type: Date,\n      default: ''\n    },\n    format: {\n      type: String,\n      default: 'yyyy-MM-dd'\n    },\n    valueFormat: {\n      type: String,\n      default: 'yyyy-MM-dd'\n    },\n    name: {\n      type: String,\n      default: ''\n    },\n    align: {\n      type: String,\n      default: 'left'\n    },\n    type: {\n      type: String,\n      default: 'date'\n    },\n    // 当前时间日期选择器特有的选项参考下表\n    pickerOptions: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    },\n    // 组件唯一标识\n    mark: {\n      type: String,\n      default: ''\n    },\n    // 当前行数据（ag-grid中使用必须有）\n    params: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    },\n    autoFocus: {\n      type: Boolean,\n      default: false\n    },\n    defaultCurrentDate: {\n      type: Boolean,\n      default: true\n    },\n    datetime: {\n      type: String,\n      default: 'start'\n    },\n    defaultTime: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      value: ''\n    };\n  },\n  computed: {\n    isPlaceholder() {\n      return this.placeholder || this.$t('components.pleaseSelect');\n    }\n  },\n  mounted() {\n    // 返回当前组件指向\n    this.mark && this.$emit('getComponent', this);\n    this.$nextTick(() => {\n      this.autoFocus && this.focus();\n      // console.log('表格行数据--', this.params)\n      if (this.params.value) {\n        this.value = this.params.value; // （ag-grid中使用必须有）\n      } else if (this.defaultCurrentDate) {\n        this.value = formatDate(new Date(), this.valueFormat);\n        this.$emit('getVal', this.value);\n      }\n    });\n  },\n  // 销毁前触发失焦事件--解决ag-grid编辑状态回车计算问题\n  beforeDestroy() {\n    let tempValue = this.value;\n    if (typeof tempValue === 'string') {\n      tempValue = new Date(tempValue);\n    }\n    const pseudoEvent = {\n      mark: 'pseudoEvent',\n      value: tempValue,\n      target: {\n        value: tempValue\n      }\n    };\n    this.blurAction(pseudoEvent);\n  },\n  methods: {\n    // 键盘事件\n    keydownAction(e) {\n      console.log('keydownAction', e);\n      this.$emit('keydown', e);\n    },\n    // 选择器聚焦方法\n    focus() {\n      // console.log('this.$refs.agDate--', this.$refs.agDate)\n      // this.$refs.agDate.$el.children[0].focus()\n      const ref = this.$refs.agDate;\n      ref.focus();\n      ref.handleFocus();\n    },\n    setValue(value) {\n      this.value = value;\n      this.$emit('change', value);\n      this.$emit('getVal', value); // （ag-grid中使用必须有）\n    },\n\n    // change事件\n    changeEve(v) {\n      v = this.datetime === 'end' ? moment(v).endOf('day')._d : v;\n      console.log('changeEve', v);\n      this.$emit('getVal', v);\n      this.$emit('change', v);\n    },\n    // 聚焦事件\n    focusAction(e) {\n      // console.log('所选日期--', e.value)\n      this.$emit('focus', e); // （ag-grid中使用必须有）\n    },\n\n    // 失焦事件\n    blurAction(e) {\n      // console.log('所选日期--', e.value)\n      this.$emit('blur', e); // （ag-grid中使用必须有）\n    }\n  }\n};","map":{"version":3,"names":["moment","formatDate","name","props","readonly","type","Boolean","default","disabled","editable","clearable","validateEvent","unlinkPanels","size","String","prefixIcon","clearIcon","placeholder","popperClass","defaultValue","Date","format","valueFormat","align","pickerOptions","Object","mark","params","autoFocus","defaultCurrentDate","datetime","defaultTime","data","value","computed","isPlaceholder","$t","mounted","$emit","$nextTick","focus","beforeDestroy","tempValue","pseudoEvent","target","blurAction","methods","keydownAction","e","console","log","ref","$refs","agDate","handleFocus","setValue","changeEve","v","endOf","_d","focusAction"],"sources":["node_modules/@cndinfo/cube-design-web/src/components/ForGridComponents/AgGridDate.vue"],"sourcesContent":["<template>\n  <div class=\"ag-grid-date\">\n    <el-date-picker\n      ref=\"agDate\"\n      v-model=\"value\"\n      :size=\"size\"\n      :format=\"format\"\n      :default-time=\"defaultTime\"\n      :value-format=\"valueFormat\"\n      :name=\"name\"\n      :type=\"type\"\n      :unlink-panels=\"unlinkPanels\"\n      :placeholder=\"isPlaceholder\"\n      :readonly=\"readonly\"\n      :disabled=\"disabled\"\n      :editable=\"editable\"\n      :clearable=\"clearable\"\n      :align=\"align\"\n      :default-value=\"defaultValue\"\n      :popper-class=\"popperClass\"\n      :prefix-icon=\"prefixIcon\"\n      :clear-icon=\"clearIcon\"\n      :validate-event=\"validateEvent\"\n      :picker-options=\"pickerOptions\"\n      @keydown.native=\"keydownAction\"\n      @change=\"changeEve\"\n      @focus=\"focusAction\"\n      @blur=\"blurAction\"\n    />\n  </div>\n</template>\n\n<script>\nimport moment from 'moment'\nimport { formatDate } from 'element-ui/src/utils/date-util'\n\nexport default {\n  name: 'AgGridDate',\n  props: {\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    editable: {\n      type: Boolean,\n      default: true\n    },\n    clearable: {\n      type: Boolean,\n      default: true\n    },\n    validateEvent: {\n      type: Boolean,\n      default: true\n    },\n    unlinkPanels: {\n      type: Boolean,\n      default: false\n    },\n    size: {\n      type: String,\n      default: 'mini'\n    },\n    prefixIcon: {\n      type: String,\n      default: 'el-icon-date'\n    },\n    clearIcon: {\n      type: String,\n      default: 'el-icon-circle-close'\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    },\n    popperClass: {\n      type: String,\n      default: ''\n    },\n    defaultValue: {\n      type: Date,\n      default: ''\n    },\n    format: {\n      type: String,\n      default: 'yyyy-MM-dd'\n    },\n    valueFormat: {\n      type: String,\n      default: 'yyyy-MM-dd'\n    },\n    name: {\n      type: String,\n      default: ''\n    },\n    align: {\n      type: String,\n      default: 'left'\n    },\n    type: {\n      type: String,\n      default: 'date'\n    },\n    // 当前时间日期选择器特有的选项参考下表\n    pickerOptions: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    // 组件唯一标识\n    mark: {\n      type: String,\n      default: ''\n    },\n    // 当前行数据（ag-grid中使用必须有）\n    params: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    autoFocus: {\n      type: Boolean,\n      default: false\n    },\n    defaultCurrentDate: {\n      type: Boolean,\n      default: true\n    },\n    datetime: {\n      type: String,\n      default: 'start'\n    },\n    defaultTime: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      value: ''\n    }\n  },\n  computed: {\n    isPlaceholder() {\n      return this.placeholder || this.$t('components.pleaseSelect')\n    }\n  },\n  mounted() {\n    // 返回当前组件指向\n    this.mark && this.$emit('getComponent', this)\n    this.$nextTick(() => {\n      this.autoFocus && this.focus()\n      // console.log('表格行数据--', this.params)\n      if (this.params.value) {\n        this.value = this.params.value // （ag-grid中使用必须有）\n      } else if (this.defaultCurrentDate) {\n        this.value = formatDate(new Date(), this.valueFormat)\n        this.$emit('getVal', this.value)\n      }\n    })\n  },\n  // 销毁前触发失焦事件--解决ag-grid编辑状态回车计算问题\n  beforeDestroy() {\n    let tempValue = this.value\n    if (typeof (tempValue) === 'string') {\n      tempValue = new Date(tempValue)\n    }\n    const pseudoEvent = {\n      mark: 'pseudoEvent',\n      value: tempValue,\n      target: {\n        value: tempValue\n      }\n    }\n    this.blurAction(pseudoEvent)\n  },\n  methods: {\n    // 键盘事件\n    keydownAction(e) {\n      console.log('keydownAction', e)\n      this.$emit('keydown', e)\n    },\n    // 选择器聚焦方法\n    focus() {\n      // console.log('this.$refs.agDate--', this.$refs.agDate)\n      // this.$refs.agDate.$el.children[0].focus()\n      const ref = this.$refs.agDate\n      ref.focus()\n      ref.handleFocus()\n    },\n    setValue(value) {\n      this.value = value\n      this.$emit('change', value)\n      this.$emit('getVal', value) // （ag-grid中使用必须有）\n    },\n    // change事件\n    changeEve(v) {\n      v = this.datetime === 'end' ? moment(v).endOf('day')._d : v\n      console.log('changeEve', v)\n      this.$emit('getVal', v)\n      this.$emit('change', v)\n    },\n    // 聚焦事件\n    focusAction(e) {\n      // console.log('所选日期--', e.value)\n      this.$emit('focus', e) // （ag-grid中使用必须有）\n    },\n    // 失焦事件\n    blurAction(e) {\n      // console.log('所选日期--', e.value)\n      this.$emit('blur', e) // （ag-grid中使用必须有）\n    }\n  }\n}\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}