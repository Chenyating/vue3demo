{"ast":null,"code":"import moment from 'moment';\nimport Validate from './validate';\n\n/**\n * 获取星期数\n * @param {*} date 【选填】日期，默认为当前时间。可为日期和时间戳\n * @return 返回传入日期的星期数\n */\nfunction week(date = {}) {\n  if (Validate.isUndeFinedOrNullOrBlank(date)) return date;\n  const weekEn = moment(date).format('dddd');\n  // const weekObj = {\n  //   Sunday: '星期天',\n  //   Monday: '星期一',\n  //   Tuesday: '星期二',\n  //   Wednesday: '星期三',\n  //   Thursday: '星期四',\n  //   Friday: '星期五',\n  //   Saturday: '星期六'\n  // }\n  // return weekObj[weekEn]\n  return weekEn;\n}\n\n/**\n * 获取周数\n * @param {*} date 【选填】日期，默认为当前时间。可为日期和时间戳\n */\nfunction weekCount(date = {}) {\n  if (Validate.isUndeFinedOrNullOrBlank(date)) return date;\n  return moment(date).isoWeek();\n}\n\n/**\n * 获取格式化时间等\n * @param {*} regexpStr 【选填】获取的时间格式，默认'YYYY-MM-DD HH:mm:ss'\n * @param {*} date 【选填】日期，默认为当前时间。可为日期和时间戳\n * @return 返回所要获取的时间格式/参数\n */\nfunction time(regexpStr = 'YYYY-MM-DD HH:mm:ss', date = {}) {\n  if (Validate.isUndeFinedOrNullOrBlank(date)) return date;\n  return moment(date).format(regexpStr);\n}\n\n/**\n * 获取时间间隔\n * @param {*} date1 【选填】默认当前时间\n * @param {*} date2 【选填】默认当前时间\n * @param {*} intervalFormat 【选填】间隔参数，默认返回间隔毫秒数\n *  example: days：间隔天数；hours：间隔小时数；minutes：间隔分钟数；seconds：间隔秒数；\n */\nfunction timeInterval(date1 = {}, date2 = {}, intervalFormat = 'milliseconds') {\n  return Math.abs(moment(date1).diff(moment(date2), intervalFormat));\n}\nexport default {\n  week,\n  time,\n  weekCount,\n  timeInterval\n};","map":{"version":3,"names":["moment","Validate","week","date","isUndeFinedOrNullOrBlank","weekEn","format","weekCount","isoWeek","time","regexpStr","timeInterval","date1","date2","intervalFormat","Math","abs","diff"],"sources":["/Users/myproject/vuedemo/node_modules/@cndinfo/cube-web-utils/src/utils/moment.js"],"sourcesContent":["import moment from 'moment'\nimport Validate from './validate'\n\n/**\n * 获取星期数\n * @param {*} date 【选填】日期，默认为当前时间。可为日期和时间戳\n * @return 返回传入日期的星期数\n */\nfunction week (date = {}) {\n  if (Validate.isUndeFinedOrNullOrBlank(date)) return date\n  const weekEn = moment(date).format('dddd');\n  // const weekObj = {\n  //   Sunday: '星期天',\n  //   Monday: '星期一',\n  //   Tuesday: '星期二',\n  //   Wednesday: '星期三',\n  //   Thursday: '星期四',\n  //   Friday: '星期五',\n  //   Saturday: '星期六'\n  // }\n  // return weekObj[weekEn]\n  return weekEn\n}\n\n/**\n * 获取周数\n * @param {*} date 【选填】日期，默认为当前时间。可为日期和时间戳\n */\nfunction weekCount (date = {}) {\n  if (Validate.isUndeFinedOrNullOrBlank(date)) return date\n  return moment(date).isoWeek()\n}\n\n/**\n * 获取格式化时间等\n * @param {*} regexpStr 【选填】获取的时间格式，默认'YYYY-MM-DD HH:mm:ss'\n * @param {*} date 【选填】日期，默认为当前时间。可为日期和时间戳\n * @return 返回所要获取的时间格式/参数\n */\nfunction time (regexpStr = 'YYYY-MM-DD HH:mm:ss', date = {}) {\n  if (Validate.isUndeFinedOrNullOrBlank(date)) return date\n  return moment(date).format(regexpStr);\n}\n\n/**\n * 获取时间间隔\n * @param {*} date1 【选填】默认当前时间\n * @param {*} date2 【选填】默认当前时间\n * @param {*} intervalFormat 【选填】间隔参数，默认返回间隔毫秒数\n *  example: days：间隔天数；hours：间隔小时数；minutes：间隔分钟数；seconds：间隔秒数；\n */\nfunction timeInterval (date1 = {}, date2 = {}, intervalFormat = 'milliseconds') {\n  return Math.abs(moment(date1).diff(moment(date2), intervalFormat)) \n}\n\nexport default {\n  week,\n  time,\n  weekCount,\n  timeInterval\n}"],"mappings":"AAAA,OAAOA,MAAM,MAAM,QAAQ;AAC3B,OAAOC,QAAQ,MAAM,YAAY;;AAEjC;AACA;AACA;AACA;AACA;AACA,SAASC,IAAIA,CAAEC,IAAI,GAAG,CAAC,CAAC,EAAE;EACxB,IAAIF,QAAQ,CAACG,wBAAwB,CAACD,IAAI,CAAC,EAAE,OAAOA,IAAI;EACxD,MAAME,MAAM,GAAGL,MAAM,CAACG,IAAI,CAAC,CAACG,MAAM,CAAC,MAAM,CAAC;EAC1C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,OAAOD,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA,SAASE,SAASA,CAAEJ,IAAI,GAAG,CAAC,CAAC,EAAE;EAC7B,IAAIF,QAAQ,CAACG,wBAAwB,CAACD,IAAI,CAAC,EAAE,OAAOA,IAAI;EACxD,OAAOH,MAAM,CAACG,IAAI,CAAC,CAACK,OAAO,CAAC,CAAC;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,IAAIA,CAAEC,SAAS,GAAG,qBAAqB,EAAEP,IAAI,GAAG,CAAC,CAAC,EAAE;EAC3D,IAAIF,QAAQ,CAACG,wBAAwB,CAACD,IAAI,CAAC,EAAE,OAAOA,IAAI;EACxD,OAAOH,MAAM,CAACG,IAAI,CAAC,CAACG,MAAM,CAACI,SAAS,CAAC;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,YAAYA,CAAEC,KAAK,GAAG,CAAC,CAAC,EAAEC,KAAK,GAAG,CAAC,CAAC,EAAEC,cAAc,GAAG,cAAc,EAAE;EAC9E,OAAOC,IAAI,CAACC,GAAG,CAAChB,MAAM,CAACY,KAAK,CAAC,CAACK,IAAI,CAACjB,MAAM,CAACa,KAAK,CAAC,EAAEC,cAAc,CAAC,CAAC;AACpE;AAEA,eAAe;EACbZ,IAAI;EACJO,IAAI;EACJF,SAAS;EACTI;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}