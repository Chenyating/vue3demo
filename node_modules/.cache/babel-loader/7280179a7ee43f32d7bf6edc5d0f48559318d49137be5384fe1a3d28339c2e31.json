{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport utils from '../../common/utils.js';\nimport loginDialog from '../../common/login.vue';\nimport localDialog from '../../../Dialog/index.js';\nexport default {\n  components: {\n    loginDialog,\n    localDialog\n  },\n  name: 'FrPrint',\n  props: {\n    //打印列表内容\n    reportList: {\n      type: String,\n      default: ''\n    },\n    //实际打印的报表模版内容，空则禁止打印\n    reportlets: {\n      type: String,\n      default: ''\n    },\n    //是否支持预览\n    isPreview: {\n      type: Boolean,\n      default: false\n    },\n    //是否静默打印\n    isQuitePrint: {\n      type: Boolean,\n      default: false\n    },\n    //用户对静默打印是否可选，若设置isQuitePrint为true时，默认勾选\n    showQuiteConfig: {\n      type: Boolean,\n      default: false\n    },\n    loginPath: {\n      type: String,\n      default: '/webroot/decision/login/cross/domain'\n    },\n    printUrl: {\n      type: String,\n      default: 'http://localhost:8080/webroot/decision/view/report/'\n    },\n    origin: {\n      type: String,\n      default: 'http://localhost:8080'\n    },\n    iframeId: {\n      type: String,\n      default: 'fineReportIframe'\n    },\n    isPopUp: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      previewLoading: false,\n      loginVisible: false,\n      userQuiteConfig: false,\n      visible: false,\n      printVisible: false,\n      useReportListResult: [],\n      useReportList: [],\n      useReportlets: [],\n      currentClick: 'print',\n      username: '',\n      password: '',\n      msg: null,\n      taskList: [],\n      printLoading: false\n    };\n  },\n  watch: {\n    showQuiteConfig: {\n      handler(val) {\n        if (val && this.isQuitePrint) {\n          this.userQuiteConfig = true;\n        }\n      },\n      immediate: true\n    },\n    isQuitePrint(val) {\n      if (!val && this.showQuiteConfig) {\n        this.userQuiteConfig = false;\n      }\n    },\n    reportList: {\n      handler(val) {\n        if (val) {\n          try {\n            this.useReportList = JSON.parse(val);\n          } catch (e) {\n            console.log(e);\n          }\n        }\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    disabledPrint_() {\n      if (this.reportlets) {\n        return false;\n      }\n      if (!this.reportlets && !this.useReportListResult.length) {\n        return true;\n      }\n      if (this.useReportListResult.length) {\n        return false;\n      }\n      return true;\n    },\n    isPreviewNoData_() {\n      return this.isPreview && this.reportlets.length;\n    },\n    isPreview_() {\n      return this.isPreview && this.useReportList.length;\n    },\n    isQuitePrint_() {\n      return this.isQuitePrint;\n    },\n    computedLabel_() {\n      return item => {\n        const split = item && item.reportlet.split('.');\n        return split[0];\n      };\n    }\n  },\n  mounted() {\n    const messageEvent = event => {\n      const {\n        code,\n        id\n      } = event.data;\n      if (id === this.iframeId) {\n        if (code && code === 200) {\n          this.loginVisible && (this.loginVisible = false);\n          this.printVisible && (this.printVisible = false);\n          this.$refs.login.hideLoading();\n          if (this.username && this.password) {\n            utils.saveFineUser(this.username, this.password);\n          }\n          if (this.taskList.length) {\n            this.taskList.forEach(item => {\n              const task = item;\n              const p = task.params;\n              task.fn(p[0], p[1], p[2]);\n              this.taskList.shift();\n            });\n          }\n        } else if (code && code === 500) {\n          if (this.msg) {\n            this.$message.error('操作失败，请检查账户名及密码是否正确。');\n            this.msg.close();\n            this.msg = null;\n          } else {\n            this.msg = this.$message({\n              type: 'error',\n              message: '操作失败，请检查账户名及密码是否正确。'\n            });\n          }\n          utils.removeIframe(this.iframeId);\n          utils.removeFineUser();\n          this.loginVisible = true;\n          this.$refs.login.hideLoading();\n          this.hasLoadedReport = false;\n          this.taskList = [];\n          localStorage.removeItem(this.iframeId + '-hasload');\n        }\n      }\n    };\n    window.addEventListener('message', messageEvent, false);\n    this.$once('hook:beforeDestroy', () => {\n      utils.removeIframe(this.iframeId);\n      localStorage.removeItem(this.iframeId + '-hasload');\n      window.removeEventListener('message', messageEvent, false);\n    });\n    utils.removeIframe(this.iframeId);\n    const load = localStorage.getItem(this.iframeId + '-hasload');\n    if (load !== null && load !== undefined) {\n      localStorage.removeItem(this.iframeId + '-hasload');\n    }\n  },\n  methods: {\n    send(sendCb) {\n      const cb = () => {\n        const config = {\n          data: {\n            reportlets: []\n          }\n        };\n        const methods = 'console.log()';\n        utils.sendMessageToIframe(JSON.stringify(config) + '---' + methods + '---' + this.iframeId, this.iframeId, this.origin);\n      };\n      const info = {\n        origin: this.origin,\n        loginPath: this.loginPath,\n        iframeId: this.iframeId\n      };\n      const user = {\n        username: this.username,\n        password: this.password\n      };\n      utils.doSubmit(cb, info, user);\n      sendCb();\n    },\n    login(res) {\n      utils.removeIframe(this.iframeId);\n      const load = localStorage.getItem(this.iframeId + '-hasload');\n      if (load !== null && load !== undefined) {\n        localStorage.removeItem(this.iframeId + '-hasload');\n      }\n      this.username = res.username;\n      this.password = res.password;\n      if (this.currentClick === 'print') {\n        const cb = () => {\n          this.taskList.push({\n            params: false,\n            fn: this.commonPrint\n          });\n        };\n        this.send(cb);\n      } else if (this.currentClick === 'preview') {\n        const cb = () => {\n          this.taskList.push({\n            params: false,\n            fn: this.preview\n          });\n        };\n        this.send(cb);\n      }\n    },\n    // 弹窗后选择内容点击确认的打印\n    confirmPrint() {\n      this.printLoading = true;\n      if (this.useReportListResult.length) {\n        this.sendSubmit(this.useReportListResult, this.handleCallBack);\n      } else if (this.reportlets) {\n        // 直接打印\n        this.sendSubmit(this.reportlets, this.handleCallBack);\n      }\n    },\n    // 预览\n    preview() {\n      this.previewLoading = true;\n      if (!utils.checkFineUser()) {\n        // 没有用户名和密码，应该提示登录\n        this.currentClick = 'preview';\n        this.loginVisible = true;\n        this.previewLoading = false;\n        return;\n      }\n      if (this.useReportListResult.length) {\n        // 选择内容之后的预览\n        this.throttled(this.sendSubmit(this.useReportListResult, this.handlePreviewCallBack), 500);\n      } else if (this.reportlets) {\n        // 默认的预览\n        this.throttled(this.sendSubmit(this.reportlets, this.handlePreviewCallBack), 500);\n      }\n    },\n    print() {\n      this.printLoading = true;\n      if (!utils.checkFineUser()) {\n        // 没有用户名和密码，应该提示登录\n        this.currentClick = 'print';\n        this.loginVisible = true;\n      } else {\n        this.commonPrint();\n      }\n    },\n    commonPrint() {\n      if (this.useReportList.length) {\n        // 选择内容\n        this.useReportListResult = [];\n        this.printVisible = true;\n        this.printLoading = false;\n      } else if (this.reportlets) {\n        // 直接打印\n        this.sendSubmit(this.reportlets, this.handleCallBack);\n      }\n    },\n    sendSubmit(params, fn) {\n      const info = {\n        origin: this.origin,\n        loginPath: this.loginPath,\n        iframeId: this.iframeId\n      };\n      const user = {\n        username: this.username,\n        password: this.password\n      };\n      this.send(() => {\n        this.taskList.push({\n          params: [fn(params), info, user],\n          fn: utils.doSubmit\n        });\n      });\n    },\n    handleCallBack(reportlets) {\n      const cb = res => {\n        const report = typeof reportlets === 'string' ? JSON.parse(reportlets) : reportlets;\n        this.createParams(report);\n        this.printLoading = false;\n        this.$refs.login.hideLoading();\n      };\n      return cb;\n    },\n    handlePreviewCallBack(reportlets) {\n      const cb = res => {\n        const report = typeof reportlets === 'string' ? JSON.parse(reportlets) : reportlets;\n        this.createParams(report, false, 'doURLPDFPrint');\n        this.previewLoading = false;\n        this.$refs.login.hideLoading();\n      };\n      return cb;\n    },\n    createParams(reportlets, isPopUp, method = 'doURLPrint') {\n      const config = {\n        isPopUp: isPopUp !== undefined ? isPopUp : this.isPopUp,\n        data: {\n          reportlets: reportlets,\n          // 需要打印的模板列表\n          __cumulatepagenumber__: false //每个模板的页码独立 \n        }\n      };\n\n      if (method === 'doURLPDFPrint') {\n        config.url = this.printUrl;\n      } else if (method === 'doURLPrint') {\n        config.printUrl = this.printUrl;\n        config.type = 'print';\n        config.printType = this.showQuiteConfig === false && this.isQuitePrint ? 1 : this.userQuiteConfig ? 1 : 0;\n        config.ieQuietPrint = true;\n        config.pageType = 0;\n        config.pageIndex = '';\n        config.copy = 0;\n      }\n      const methods = `FR.${method}(config)`;\n      const iframeId = this.iframeId;\n      const origin = this.origin;\n      utils.sendMessageToIframe(JSON.stringify(config) + '---' + methods + '---' + iframeId, iframeId, origin);\n    },\n    clickGuide() {\n      window.open('https://help.fanruan.com/finereport/doc-view-2489.html');\n    },\n    throttled(fn, delay = 500) {\n      let timer = null;\n      return function (...args) {\n        if (!timer) {\n          timer = setTimeout(() => {\n            fn.apply(this, args);\n            timer = null;\n          }, delay);\n        }\n      };\n    },\n    checkUser() {\n      return !!this.username && !!this.password;\n    },\n    clickDownload() {\n      //点击静默打印下载软件，打开新的页面\n      //判断当前的操作系统\n      const userAgent = navigator.userAgent;\n      const isMac = /macintosh|mac os x/i.test(userAgent);\n      const isWin = /windows|win32/i.test(userAgent);\n      if (isWin) {\n        window.open('https://fine-build.oss-cn-shanghai.aliyuncs.com/finereport/10.0/stable/exe/FinePrint_Windows_5_0.exe');\n      } else if (isMac) {\n        window.open('https://fine-build.oss-cn-shanghai.aliyuncs.com/finereport/10.0/stable/exe/FinePrint_macos_5_0.dmg');\n      }\n    }\n  }\n};","map":{"version":3,"names":["utils","loginDialog","localDialog","components","name","props","reportList","type","String","default","reportlets","isPreview","Boolean","isQuitePrint","showQuiteConfig","loginPath","printUrl","origin","iframeId","isPopUp","data","previewLoading","loginVisible","userQuiteConfig","visible","printVisible","useReportListResult","useReportList","useReportlets","currentClick","username","password","msg","taskList","printLoading","watch","handler","val","immediate","JSON","parse","e","console","log","computed","disabledPrint_","length","isPreviewNoData_","isPreview_","isQuitePrint_","computedLabel_","item","split","reportlet","mounted","messageEvent","event","code","id","$refs","login","hideLoading","saveFineUser","forEach","task","p","params","fn","shift","$message","error","close","message","removeIframe","removeFineUser","hasLoadedReport","localStorage","removeItem","window","addEventListener","$once","removeEventListener","load","getItem","undefined","methods","send","sendCb","cb","config","sendMessageToIframe","stringify","info","user","doSubmit","res","push","commonPrint","preview","confirmPrint","sendSubmit","handleCallBack","checkFineUser","throttled","handlePreviewCallBack","print","report","createParams","method","__cumulatepagenumber__","url","printType","ieQuietPrint","pageType","pageIndex","copy","clickGuide","open","delay","timer","args","setTimeout","apply","checkUser","clickDownload","userAgent","navigator","isMac","test","isWin"],"sources":["node_modules/@cndinfo/cube-design-web/src/components/FineReport/Print/src/index.vue"],"sourcesContent":["<template>\n  <div>\n    <cube-button :loading=previewLoading style=\"margin-right: 6px;\" v-if=\"isPreviewNoData_\" icon=\"cnd-eyes\"\n      @click=\"preview\" type=\"secondary\">\n      <cnd-icon name=\"cnd-eyes\" />\n      <span class=\"pl-4\">预览</span>\n    </cube-button>\n    <el-popover :disabled=\"!showQuiteConfig\" trigger=\"hover\" v-model=\"visible\">\n      <div>\n        <cube-checkbox v-model=\"userQuiteConfig\">静默打印</cube-checkbox>\n        <el-popover trigger=\"hover\">\n          <span>\n            请先<span @click=\"clickDownload\" class=\"quiteTip\">下载</span>静默打印软件。\n            <span @click=\"clickGuide\" class=\"quiteTip\">“静默配置指南”</span>\n          </span>\n          <i slot=\"reference\" style=\"color:#3d77cd\" class=\"el-icon-warning\"></i>\n        </el-popover>\n      </div>\n      <cube-button :loading=\"printLoading\" :disabled=\"!reportlets && !reportList\" slot=\"reference\" icon=\"el-icon-printer\" @click=\"print\" type=\"primary\">打印</cube-button>\n    </el-popover>\n    <!-- <cube-button @click=\"remove\" type=\"secondary\">移除缓存还有cookie</cube-button> -->\n    <login-dialog ref=\"login\" @login=\"login\" :visible.sync=\"loginVisible\" />\n    <local-dialog title=\"打印列表\" :visible.sync=\"printVisible\" :show-close=\"true\" :fullscreen=\"false\" :append-to-body=\"true\"\n      width=\"300px\" :destroy-on-close=\"destroyOnClose\" @close=\"handleCancel\">\n      <template slot=\"content\">\n        <el-checkbox-group v-model=\"useReportListResult\">\n          <div v-for=\"(item, index) in useReportList\" :key=\"index\">\n            <el-checkbox :label=\"item\">{{ computedLabel_(item) }}</el-checkbox>\n          </div>\n        </el-checkbox-group>\n      </template>\n      <template slot=\"footer\">\n        <div style=\"display: flex;justify-content: space-between;\">\n          <div>\n            <div v-if=\"showQuiteConfig\">\n              <cube-checkbox v-model=\"userQuiteConfig\">静默打印</cube-checkbox>\n              <el-popover trigger=\"hover\">\n                <span>\n                  请先<span @click=\"clickDownload\" class=\"quiteTip\">下载</span>静默打印软件。\n                  <span @click=\"clickGuide\" class=\"quiteTip\">“静默配置指南”</span>\n                </span>\n                <i slot=\"reference\" style=\"color:#3d77cd\" class=\"el-icon-warning\"></i>\n              </el-popover>\n            </div>\n          </div>\n          <div>\n            <cube-button :disabled=\"disabledPrint_\" v-if=\"isPreview_\" icon=\"cnd-eyes\" @click=\"preview\" type=\"secondary\">\n              <cnd-icon name=\"cnd-eyes\" />\n              <span class=\"pl-4\">预览</span>\n            </cube-button>\n            <cube-button :loading=\"printLoading\" :disabled=\"disabledPrint_\" type=\"primary\" @click=\"confirmPrint\">\n              打印\n            </cube-button>\n     \n          </div>\n        </div>\n      </template>\n    </local-dialog>\n  </div>\n</template>\n<script>\nimport utils from '../../common/utils.js'\nimport loginDialog from '../../common/login.vue'\nimport localDialog from '../../../Dialog/index.js'\nexport default {\n  components: {\n    loginDialog,\n    localDialog\n  },\n  name: 'FrPrint',\n  props: {\n    //打印列表内容\n    reportList: {\n      type: String,\n      default: ''\n    },\n    //实际打印的报表模版内容，空则禁止打印\n    reportlets: {\n      type: String,\n      default: ''\n    },\n    //是否支持预览\n    isPreview: {\n      type: Boolean,\n      default: false\n    },\n    //是否静默打印\n    isQuitePrint: {\n      type: Boolean,\n      default: false\n    },\n    //用户对静默打印是否可选，若设置isQuitePrint为true时，默认勾选\n    showQuiteConfig: {\n      type: Boolean,\n      default: false\n    },\n    loginPath: {\n      type: String,\n      default: '/webroot/decision/login/cross/domain'\n    },\n    printUrl: {\n      type: String,\n      default: 'http://localhost:8080/webroot/decision/view/report/',\n    },\n    origin: {\n      type: String,\n      default: 'http://localhost:8080'\n    },\n    iframeId: {\n      type: String,\n      default: 'fineReportIframe'\n    },\n    isPopUp: {\n      type: Boolean,\n      default: false\n    },\n  },\n  data () {\n    return {\n      previewLoading: false,\n      loginVisible: false,\n      userQuiteConfig: false,\n      visible: false,\n      printVisible: false,\n      useReportListResult: [],\n      useReportList: [],\n      useReportlets: [],\n      currentClick: 'print',\n      username: '',\n      password: '',\n      msg: null,\n      taskList:[],\n      printLoading:false\n    }\n  },\n  watch: {\n    showQuiteConfig: {\n      handler (val) {\n        if (val && this.isQuitePrint) {\n          this.userQuiteConfig = true\n        }\n      },\n      immediate: true\n    },\n    isQuitePrint(val){\n      if(!val && this.showQuiteConfig){\n        this.userQuiteConfig = false\n      }\n    },\n    reportList: {\n      handler (val) {\n        if (val) {\n          try {\n            this.useReportList = JSON.parse(val)\n          } catch (e) {\n            console.log(e)\n          }\n        }\n      },\n      immediate: true\n    },\n  },\n  computed: {\n    disabledPrint_(){\n      if(this.reportlets){\n        return false\n      }\n      if(!this.reportlets && !this.useReportListResult.length){\n        return true\n      }\n      if(this.useReportListResult.length){\n        return false\n      }\n      return true\n    },\n    isPreviewNoData_ () {\n      return this.isPreview && this.reportlets.length\n    },\n    isPreview_ () {\n      return this.isPreview && this.useReportList.length\n    },\n    isQuitePrint_ () {\n      return this.isQuitePrint\n    },\n    computedLabel_ () {\n      return item => {\n        const split = item && item.reportlet.split('.')\n        return split[0]\n      }\n    }\n  },\n\n  mounted () {\n    const messageEvent = (event) => {\n      const { code, id } = event.data\n      if (id === this.iframeId) {\n        if (code && code === 200) {\n          this.loginVisible && (this.loginVisible = false)\n          this.printVisible && (this.printVisible = false)\n          this.$refs.login.hideLoading()\n          if(this.username && this.password){\n            utils.saveFineUser(\n              this.username,\n              this.password\n            )\n          }\n          if(this.taskList.length){\n            this.taskList.forEach(item=>{\n              const task = item\n              const p = task.params\n              task.fn(p[0],p[1],p[2])\n              this.taskList.shift()\n            })\n          }\n        } else if (code && code === 500) {\n          if (this.msg) {\n            this.$message.error('操作失败，请检查账户名及密码是否正确。')\n            this.msg.close()\n            this.msg = null\n          } else {\n            this.msg = this.$message({\n              type: 'error',\n              message: '操作失败，请检查账户名及密码是否正确。'\n            })\n          }\n          utils.removeIframe(this.iframeId)\n          utils.removeFineUser()\n          this.loginVisible = true\n          this.$refs.login.hideLoading()\n          this.hasLoadedReport = false\n          this.taskList  = []\n          localStorage.removeItem(this.iframeId + '-hasload')\n        }\n      }\n    }\n    window.addEventListener('message', messageEvent, false);\n    this.$once('hook:beforeDestroy', () => {\n      utils.removeIframe(this.iframeId)\n      localStorage.removeItem(this.iframeId + '-hasload')\n      window.removeEventListener('message', messageEvent, false);\n    })\n    utils.removeIframe(this.iframeId)  \n    const load = localStorage.getItem(this.iframeId + '-hasload')  \n    if( load !== null && load !== undefined ){\n      localStorage.removeItem(this.iframeId + '-hasload')\n    }\n  },\n\n  methods: {\n    send(sendCb){\n      const cb = ()=>{\n        const config = {\n        data: {\n          reportlets: []\n        }\n      }\n        const methods = 'console.log()'\n        utils.sendMessageToIframe(JSON.stringify(config) + '---' + methods + '---' + this.iframeId, this.iframeId, this.origin)\n      }\n      const info = {\n        origin: this.origin,\n        loginPath: this.loginPath,\n        iframeId: this.iframeId\n      }\n      const user = { \n        username: this.username,\n        password: this.password\n      }\n      utils.doSubmit(cb,info,user)\n      sendCb()\n    },\n    login (res) {\n      utils.removeIframe(this.iframeId)  \n      const load = localStorage.getItem(this.iframeId + '-hasload')  \n      if( load !== null && load !== undefined ){\n        localStorage.removeItem(this.iframeId + '-hasload')\n      }\n      this.username = res.username\n      this.password = res.password\n      if (this.currentClick === 'print') {\n       const cb =  ()=>{\n          this.taskList.push({\n            params:false,\n            fn:this.commonPrint\n          })\n        }\n        this.send(cb)\n        \n      } else if (this.currentClick === 'preview') {\n        const cb = ()=>{\n          this.taskList.push({\n            params:false,\n            fn:this.preview\n          })\n        }\n        this.send(cb)\n      }\n     \n    },\n    // 弹窗后选择内容点击确认的打印\n    confirmPrint () {\n      this.printLoading = true\n      if(this.useReportListResult.length){\n        this.sendSubmit(this.useReportListResult,this.handleCallBack)\n      }else if (this.reportlets) {\n        // 直接打印\n        this.sendSubmit(this.reportlets,this.handleCallBack)\n      }\n    },\n    // 预览\n    preview () {\n      this.previewLoading = true\n      if (!utils.checkFineUser()) {\n        // 没有用户名和密码，应该提示登录\n        this.currentClick = 'preview'\n        this.loginVisible = true\n        this.previewLoading = false\n        return\n      }\n      if (this.useReportListResult.length) {\n        // 选择内容之后的预览\n        this.throttled(this.sendSubmit(this.useReportListResult,this.handlePreviewCallBack), 500)\n      } else if (this.reportlets) {\n        // 默认的预览\n        this.throttled(this.sendSubmit(this.reportlets,this.handlePreviewCallBack), 500)\n      }\n    },\n    print () {\n      this.printLoading = true\n      if (!utils.checkFineUser()) {\n        // 没有用户名和密码，应该提示登录\n        this.currentClick = 'print'\n        this.loginVisible = true\n      } else {\n        this.commonPrint()\n      }\n    },\n    commonPrint () {\n      if (this.useReportList.length) {\n        // 选择内容\n        this.useReportListResult = []\n        this.printVisible = true\n        this.printLoading = false\n      } else if (this.reportlets) {\n        // 直接打印\n        this.sendSubmit(this.reportlets,this.handleCallBack)\n      }\n    },\n    sendSubmit(params,fn){\n      const info = {\n        origin: this.origin,\n        loginPath: this.loginPath,\n        iframeId: this.iframeId\n      }\n      const user = { \n        username: this.username,\n        password: this.password\n      }\n      this.send(()=>{\n        this.taskList.push({params:[fn(params),info,user],fn:utils.doSubmit})\n      })\n    },\n    handleCallBack (reportlets) {\n      const cb = (res) => {\n        const report = typeof reportlets === 'string' ? JSON.parse(reportlets) : reportlets\n        this.createParams(report)\n        this.printLoading = false\n        this.$refs.login.hideLoading()\n      }\n      return cb\n    },\n    handlePreviewCallBack (reportlets) {\n      const cb = (res) => {\n        const report = typeof reportlets === 'string' ? JSON.parse(reportlets) : reportlets\n        this.createParams(report, false, 'doURLPDFPrint')\n        this.previewLoading = false\n        this.$refs.login.hideLoading()\n      }\n      return cb\n    },\n    createParams (reportlets, isPopUp, method = 'doURLPrint') {\n      const config = {\n        isPopUp: isPopUp !== undefined ? isPopUp : this.isPopUp,\n        data: {\n          reportlets: reportlets, // 需要打印的模板列表\n          __cumulatepagenumber__: false //每个模板的页码独立 \n        },\n      }\n      if (method === 'doURLPDFPrint') {\n        config.url = this.printUrl\n      } else if (method === 'doURLPrint') {\n        config.printUrl = this.printUrl\n        config.type = 'print'\n        config.printType = this.showQuiteConfig===false && this.isQuitePrint ? 1 : this.userQuiteConfig ? 1 : 0\n        config.ieQuietPrint = true\n        config.pageType = 0\n        config.pageIndex = ''\n        config.copy = 0\n      }\n      const methods = `FR.${method}(config)`\n      const iframeId = this.iframeId\n      const origin = this.origin\n      utils.sendMessageToIframe(JSON.stringify(config) + '---' + methods + '---' + iframeId,iframeId,origin)\n    },\n    clickGuide () {\n      window.open('https://help.fanruan.com/finereport/doc-view-2489.html')\n    },\n    throttled (fn, delay = 500) {\n      let timer = null\n      return function (...args) {\n        if (!timer) {\n          timer = setTimeout(() => {\n            fn.apply(this, args)\n            timer = null\n          }, delay);\n        }\n      }\n    },\n    checkUser () {\n      return !!this.username && !!this.password\n    },\n    clickDownload () {\n      //点击静默打印下载软件，打开新的页面\n      //判断当前的操作系统\n      const userAgent = navigator.userAgent\n      const isMac = /macintosh|mac os x/i.test(userAgent)\n      const isWin = /windows|win32/i.test(userAgent)\n      if (isWin) {\n        window.open('https://fine-build.oss-cn-shanghai.aliyuncs.com/finereport/10.0/stable/exe/FinePrint_Windows_5_0.exe')\n      }\n      else if (isMac) {\n        window.open('https://fine-build.oss-cn-shanghai.aliyuncs.com/finereport/10.0/stable/exe/FinePrint_macos_5_0.dmg')\n      }\n    },\n  },\n}\n</script>\n<style scoped lang=\"scss\">\n.pl-4 {\n  padding-left: 4px;\n}\n\n.quiteTip {\n  color: #3d77cd;\n  cursor: pointer;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}