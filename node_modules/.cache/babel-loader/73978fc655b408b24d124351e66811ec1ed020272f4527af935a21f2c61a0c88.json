{"ast":null,"code":"import { kebabCase } from 'element-ui/src/utils/util';\n/**\n * Show migrating guide in browser console.\n *\n * Usage:\n * import Migrating from 'element-ui/src/mixins/migrating';\n *\n * mixins: [Migrating]\n *\n * add getMigratingConfig method for your component.\n *  getMigratingConfig() {\n *    return {\n *      props: {\n *        'allow-no-selection': 'allow-no-selection is removed.',\n *        'selection-mode': 'selection-mode is removed.'\n *      },\n *      events: {\n *        selectionchange: 'selectionchange is renamed to selection-change.'\n *      }\n *    };\n *  },\n */\nexport default {\n  mounted() {\n    if (process.env.NODE_ENV === 'production') return;\n    if (!this.$vnode) return;\n    const {\n      props = {},\n      events = {}\n    } = this.getMigratingConfig();\n    const {\n      data,\n      componentOptions\n    } = this.$vnode;\n    const definedProps = data.attrs || {};\n    const definedEvents = componentOptions.listeners || {};\n    for (let propName in definedProps) {\n      propName = kebabCase(propName); // compatible with camel case\n      if (props[propName]) {\n        console.warn(`[Element Migrating][${this.$options.name}][Attribute]: ${props[propName]}`);\n      }\n    }\n    for (let eventName in definedEvents) {\n      eventName = kebabCase(eventName); // compatible with camel case\n      if (events[eventName]) {\n        console.warn(`[Element Migrating][${this.$options.name}][Event]: ${events[eventName]}`);\n      }\n    }\n  },\n  methods: {\n    getMigratingConfig() {\n      return {\n        props: {},\n        events: {}\n      };\n    }\n  }\n};","map":{"version":3,"names":["kebabCase","mounted","process","env","NODE_ENV","$vnode","props","events","getMigratingConfig","data","componentOptions","definedProps","attrs","definedEvents","listeners","propName","console","warn","$options","name","eventName","methods"],"sources":["/Users/myproject/vuedemo/node_modules/element-ui/src/mixins/migrating.js"],"sourcesContent":["import { kebabCase } from 'element-ui/src/utils/util';\n/**\n * Show migrating guide in browser console.\n *\n * Usage:\n * import Migrating from 'element-ui/src/mixins/migrating';\n *\n * mixins: [Migrating]\n *\n * add getMigratingConfig method for your component.\n *  getMigratingConfig() {\n *    return {\n *      props: {\n *        'allow-no-selection': 'allow-no-selection is removed.',\n *        'selection-mode': 'selection-mode is removed.'\n *      },\n *      events: {\n *        selectionchange: 'selectionchange is renamed to selection-change.'\n *      }\n *    };\n *  },\n */\nexport default {\n  mounted() {\n    if (process.env.NODE_ENV === 'production') return;\n    if (!this.$vnode) return;\n    const { props = {}, events = {} } = this.getMigratingConfig();\n    const { data, componentOptions } = this.$vnode;\n    const definedProps = data.attrs || {};\n    const definedEvents = componentOptions.listeners || {};\n\n    for (let propName in definedProps) {\n      propName = kebabCase(propName); // compatible with camel case\n      if (props[propName]) {\n        console.warn(`[Element Migrating][${this.$options.name}][Attribute]: ${props[propName]}`);\n      }\n    }\n\n    for (let eventName in definedEvents) {\n      eventName = kebabCase(eventName); // compatible with camel case\n      if (events[eventName]) {\n        console.warn(`[Element Migrating][${this.$options.name}][Event]: ${events[eventName]}`);\n      }\n    }\n  },\n  methods: {\n    getMigratingConfig() {\n      return {\n        props: {},\n        events: {}\n      };\n    }\n  }\n};\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,2BAA2B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;EACbC,OAAOA,CAAA,EAAG;IACR,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IAC3C,IAAI,CAAC,IAAI,CAACC,MAAM,EAAE;IAClB,MAAM;MAAEC,KAAK,GAAG,CAAC,CAAC;MAAEC,MAAM,GAAG,CAAC;IAAE,CAAC,GAAG,IAAI,CAACC,kBAAkB,CAAC,CAAC;IAC7D,MAAM;MAAEC,IAAI;MAAEC;IAAiB,CAAC,GAAG,IAAI,CAACL,MAAM;IAC9C,MAAMM,YAAY,GAAGF,IAAI,CAACG,KAAK,IAAI,CAAC,CAAC;IACrC,MAAMC,aAAa,GAAGH,gBAAgB,CAACI,SAAS,IAAI,CAAC,CAAC;IAEtD,KAAK,IAAIC,QAAQ,IAAIJ,YAAY,EAAE;MACjCI,QAAQ,GAAGf,SAAS,CAACe,QAAQ,CAAC,CAAC,CAAC;MAChC,IAAIT,KAAK,CAACS,QAAQ,CAAC,EAAE;QACnBC,OAAO,CAACC,IAAI,CAAE,uBAAsB,IAAI,CAACC,QAAQ,CAACC,IAAK,iBAAgBb,KAAK,CAACS,QAAQ,CAAE,EAAC,CAAC;MAC3F;IACF;IAEA,KAAK,IAAIK,SAAS,IAAIP,aAAa,EAAE;MACnCO,SAAS,GAAGpB,SAAS,CAACoB,SAAS,CAAC,CAAC,CAAC;MAClC,IAAIb,MAAM,CAACa,SAAS,CAAC,EAAE;QACrBJ,OAAO,CAACC,IAAI,CAAE,uBAAsB,IAAI,CAACC,QAAQ,CAACC,IAAK,aAAYZ,MAAM,CAACa,SAAS,CAAE,EAAC,CAAC;MACzF;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACPb,kBAAkBA,CAAA,EAAG;MACnB,OAAO;QACLF,KAAK,EAAE,CAAC,CAAC;QACTC,MAAM,EAAE,CAAC;MACX,CAAC;IACH;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}