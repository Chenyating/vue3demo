{"ast":null,"code":"// 可指定拖拽位置\nconst dragConfig = ['top', 'left', 'bottom', 'right'];\nexport default {\n  bind(boxEl, {\n    value,\n    modifiers\n  }) {\n    // 是否只在内部移动\n    const isInside = modifiers['inside'];\n    // 拖拽位置\n    const drag = dragConfig.find(v => modifiers[v]);\n    if (!(value && !drag)) {\n      boxEl.addEventListener('mousedown', onmousedown, false);\n    }\n    boxEl.addEventListener('mousemove', onmousemove, false);\n    // 鼠标移动，用于判断是否未可移动区域\n    function onmousemove(e) {\n      // 通过css选择器指定拖拽的元素\n      if (value && !drag) {\n        const dragEl = document.querySelector(value);\n        if (dragEl) {\n          dragEl.style.cursor = 'move';\n          dragEl.onmousedown = onmousedown;\n          boxEl.removeEventListener('mousemove', onmousemove, false);\n        }\n        return;\n      }\n      const position = Object.assign({\n        mouseX: e.clientX,\n        mouseY: e.clientY,\n        height: boxEl.offsetHeight,\n        width: boxEl.offsetWidth,\n        offsetLeft: boxEl.offsetLeft,\n        offsetTop: boxEl.offsetTop\n      }, getPosition(boxEl));\n      const canMove = checkMove(drag, value, position);\n      if (canMove) {\n        boxEl.style.cursor = 'move';\n        // 将值设置在dragCursor上，resizer指令如果有配置会在这里获取鼠标状态\n        boxEl.setAttribute('dragCursor', 'move');\n      } else {\n        boxEl.style.cursor = '';\n        boxEl.setAttribute('dragCursor', '');\n      }\n    }\n    // 按下鼠标瞬间\n    function onmousedown(e) {\n      // 父容器\n      const boxParentEl = boxEl.offsetParent || document.documentElement;\n      const position = Object.assign({\n        mouseX: e.clientX,\n        mouseY: e.clientY,\n        height: boxEl.offsetHeight,\n        width: boxEl.offsetWidth,\n        offsetLeft: boxEl.offsetLeft,\n        offsetTop: boxEl.offsetTop\n      }, getPosition(boxEl));\n      const disX = e.clientX; // 记录鼠标点下X轴位置\n      const disY = e.clientY; // 记录鼠标点下的Y轴位置\n      const canMove = checkMove(drag, value, position);\n      if (canMove) {\n        document.body.style.userSelect = 'none';\n        document.addEventListener('mousemove', docMove, false);\n        document.addEventListener('mouseup', onmouseup, false);\n      }\n      function docMove(e) {\n        const moveX = e.clientX - disX; // 鼠标移动的x轴距离\n        const moveY = e.clientY - disY; // 鼠标移动的Y轴距离\n        const x = moveX + position.offsetLeft; // 与原本位置相加，算出目前X轴位置\n        const y = moveY + position.offsetTop; // 与原本位置相加，算出目前Y轴位置\n        // 判断是否只允许在内部移动\n        const left = isInside ? Math.min(Math.max(0, x), boxParentEl.clientWidth - boxEl.offsetWidth) : x;\n        const top = isInside ? Math.min(Math.max(0, y), boxParentEl.clientHeight - boxEl.offsetHeight) : y;\n        boxEl.style.left = `${left}px`;\n        boxEl.style.top = `${top}px`;\n      }\n      function onmouseup() {\n        document.body.style.userSelect = '';\n        document.removeEventListener('mousemove', docMove, false);\n        document.removeEventListener('mouseup', onmouseup, false);\n      }\n    }\n    // 获取盒子相对于body的坐标\n    function getPosition(e) {\n      if (e) {\n        const offsetLeft = e.offsetLeft;\n        const offsetTop = e.offsetTop;\n        const parentPosition = getPosition(e.offsetParent);\n        return {\n          x: offsetLeft + parentPosition.x,\n          y: offsetTop + parentPosition.y\n        };\n      }\n      return {\n        x: 0,\n        y: 0\n      };\n    }\n    // 使用鼠标位置判断是否处于允许拖拽的范围\n    function checkMove(drag, value, position) {\n      // 不要处于拉伸区域\n      const isResizer = boxEl.getAttribute('isResizer');\n      const canDrag = !isResizer || isResizer === 'false';\n      const {\n        mouseX,\n        mouseY,\n        x,\n        y,\n        width,\n        height\n      } = position;\n      if (drag === 'top') {\n        return mouseY - y <= value && mouseY > y && canDrag;\n      } else if (drag === 'left') {\n        return mouseX - x <= value && mouseX > x && canDrag;\n      } else if (drag === 'bottom') {\n        const bottom = height - (mouseY - y);\n        return bottom <= value && mouseY > y && bottom > 0 && canDrag;\n      } else if (drag === 'right') {\n        const right = width - (mouseX - x);\n        return right <= value && mouseX > x && right > 0 && canDrag;\n      } else {\n        return true && canDrag;\n      }\n    }\n  }\n};","map":{"version":3,"names":["dragConfig","bind","boxEl","value","modifiers","isInside","drag","find","v","addEventListener","onmousedown","onmousemove","e","dragEl","document","querySelector","style","cursor","removeEventListener","position","Object","assign","mouseX","clientX","mouseY","clientY","height","offsetHeight","width","offsetWidth","offsetLeft","offsetTop","getPosition","canMove","checkMove","setAttribute","boxParentEl","offsetParent","documentElement","disX","disY","body","userSelect","docMove","onmouseup","moveX","moveY","x","y","left","Math","min","max","clientWidth","top","clientHeight","parentPosition","isResizer","getAttribute","canDrag","bottom","right"],"sources":["/Users/myproject/vuedemo/node_modules/@cndinfo/cube-design-web/src/directives/cubeDrag/drag.js"],"sourcesContent":["// 可指定拖拽位置\nconst dragConfig = ['top', 'left', 'bottom', 'right']\nexport default {\n  bind(boxEl, { value, modifiers }) {\n    // 是否只在内部移动\n    const isInside = modifiers['inside']\n    // 拖拽位置\n    const drag = dragConfig.find(v => modifiers[v])\n    if (!(value && !drag)) {\n      boxEl.addEventListener('mousedown', onmousedown, false)\n    }\n    boxEl.addEventListener('mousemove', onmousemove, false)\n    // 鼠标移动，用于判断是否未可移动区域\n    function onmousemove(e) {\n      // 通过css选择器指定拖拽的元素\n      if (value && !drag) {\n        const dragEl = document.querySelector(value)\n        if (dragEl) {\n          dragEl.style.cursor = 'move'\n          dragEl.onmousedown = onmousedown\n          boxEl.removeEventListener('mousemove', onmousemove, false)\n        }\n        return\n      }\n      const position = Object.assign({ mouseX: e.clientX, mouseY: e.clientY, height: boxEl.offsetHeight, width: boxEl.offsetWidth, offsetLeft: boxEl.offsetLeft, offsetTop: boxEl.offsetTop }, getPosition(boxEl))\n      const canMove = checkMove(drag, value, position)\n      if (canMove) {\n        boxEl.style.cursor = 'move'\n        // 将值设置在dragCursor上，resizer指令如果有配置会在这里获取鼠标状态\n        boxEl.setAttribute('dragCursor', 'move')\n      } else {\n        boxEl.style.cursor = ''\n        boxEl.setAttribute('dragCursor', '')\n      }\n    }\n    // 按下鼠标瞬间\n    function onmousedown(e) {\n      // 父容器\n      const boxParentEl = boxEl.offsetParent || document.documentElement\n      const position = Object.assign({ mouseX: e.clientX, mouseY: e.clientY, height: boxEl.offsetHeight, width: boxEl.offsetWidth, offsetLeft: boxEl.offsetLeft, offsetTop: boxEl.offsetTop }, getPosition(boxEl))\n      const disX = e.clientX // 记录鼠标点下X轴位置\n      const disY = e.clientY // 记录鼠标点下的Y轴位置\n      const canMove = checkMove(drag, value, position)\n      if (canMove) {\n        document.body.style.userSelect = 'none'\n        document.addEventListener('mousemove', docMove, false)\n        document.addEventListener('mouseup', onmouseup, false)\n      }\n      function docMove(e) {\n        const moveX = e.clientX - disX // 鼠标移动的x轴距离\n        const moveY = e.clientY - disY // 鼠标移动的Y轴距离\n        const x = moveX + position.offsetLeft // 与原本位置相加，算出目前X轴位置\n        const y = moveY + position.offsetTop // 与原本位置相加，算出目前Y轴位置\n        // 判断是否只允许在内部移动\n        const left = isInside ? Math.min(Math.max(0, x), boxParentEl.clientWidth - boxEl.offsetWidth) : x\n        const top = isInside ? Math.min(Math.max(0, y), boxParentEl.clientHeight - boxEl.offsetHeight) : y\n        boxEl.style.left = `${left}px`\n        boxEl.style.top = `${top}px`\n      }\n      function onmouseup() {\n        document.body.style.userSelect = ''\n        document.removeEventListener('mousemove', docMove, false)\n        document.removeEventListener('mouseup', onmouseup, false)\n      }\n    }\n    // 获取盒子相对于body的坐标\n    function getPosition(e) {\n      if (e) {\n        const offsetLeft = e.offsetLeft\n        const offsetTop = e.offsetTop\n        const parentPosition = getPosition(e.offsetParent)\n        return {\n          x: offsetLeft + parentPosition.x,\n          y: offsetTop + parentPosition.y\n        }\n      }\n      return { x: 0, y: 0 }\n    }\n    // 使用鼠标位置判断是否处于允许拖拽的范围\n    function checkMove(drag, value, position) {\n      // 不要处于拉伸区域\n      const isResizer = boxEl.getAttribute('isResizer')\n      const canDrag = !isResizer || isResizer === 'false'\n      const { mouseX, mouseY, x, y, width, height } = position\n      if (drag === 'top') {\n        return mouseY - y <= value && mouseY > y && canDrag\n      } else if (drag === 'left') {\n        return mouseX - x <= value && mouseX > x && canDrag\n      } else if (drag === 'bottom') {\n        const bottom = height - (mouseY - y)\n        return bottom <= value && mouseY > y && bottom > 0 && canDrag\n      } else if (drag === 'right') {\n        const right = width - (mouseX - x)\n        return right <= value && mouseX > x && right > 0 && canDrag\n      } else {\n        return true && canDrag\n      }\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}