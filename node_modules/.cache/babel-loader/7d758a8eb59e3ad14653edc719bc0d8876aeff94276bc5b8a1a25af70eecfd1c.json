{"ast":null,"code":"export default {\n  computed: {\n    isChecked() {\n      const {\n        dataKey = 'rowData'\n      } = this.params.context;\n      const rowData = this.params.context.componentParent[dataKey];\n      const {\n        childrenListKey = '_details'\n      } = this.params.context;\n      if (!rowData.length) {\n        return false;\n      }\n      const flag = rowData.every(item => {\n        if (item[childrenListKey] && item._selectedKeys && item._selected) {\n          return item._selectedKeys.length === item[childrenListKey].length;\n        }\n        return false;\n      });\n      return flag;\n    },\n    indeterminate() {\n      const {\n        dataKey = 'rowData'\n      } = this.params.context;\n      const rowData = this.params.context.componentParent[dataKey];\n      return this.isChecked || !rowData.length ? false : rowData.some(item => item._selectedKeys && item._selectedKeys.length || item._selected);\n    }\n  },\n  methods: {\n    async handleCheckAllChange(e) {\n      const {\n        childrenListKey = '_details',\n        apiKey = 'gridApi',\n        childRowKey\n      } = this.params.context;\n      const fatherapi = this.params.context.componentParent[apiKey];\n      fatherapi.forEachNode(async node => {\n        node.data._selected = e;\n        if (!node.data[childrenListKey]) {\n          node.data[childrenListKey] = [];\n        }\n        if (e && !node.data[childrenListKey].length && typeof this.params.context.loadDetail === 'function') {\n          node.data[childrenListKey] = await this.params.context.loadDetail(node.data);\n        }\n        if (e && node.data[childrenListKey]) {\n          node.data._selectedKeys = node.data[childrenListKey].map(item => {\n            if (!item._selectedDisabled) {\n              return item[childRowKey];\n            }\n          });\n        } else {\n          node.data._selectedKeys = [];\n        }\n        const rowNode = fatherapi.getDetailGridInfo(`detail_${node.id}`);\n        rowNode && rowNode.api.refreshCells({\n          force: true\n        });\n      });\n      fatherapi.refreshCells({\n        force: true\n      });\n    }\n  }\n};","map":{"version":3,"names":["computed","isChecked","dataKey","params","context","rowData","componentParent","childrenListKey","length","flag","every","item","_selectedKeys","_selected","indeterminate","some","methods","handleCheckAllChange","e","apiKey","childRowKey","fatherapi","forEachNode","node","data","loadDetail","map","_selectedDisabled","rowNode","getDetailGridInfo","id","api","refreshCells","force"],"sources":["node_modules/@cndinfo/cube-design-web/src/components/AgGridExtend/headerSelect.vue"],"sourcesContent":["<template>\n  <el-checkbox\n    :value=\"isChecked\"\n    :indeterminate=\"indeterminate\"\n    @change=\"handleCheckAllChange\"\n  />\n</template>\n\n<script>\nexport default {\n  computed: {\n    isChecked() {\n      const { dataKey = 'rowData' } = this.params.context\n      const rowData = this.params.context.componentParent[dataKey]\n      const { childrenListKey = '_details' } = this.params.context\n      if (!rowData.length) { return false }\n      const flag = rowData.every(item => {\n        if (item[childrenListKey] && item._selectedKeys && item._selected) {\n          return item._selectedKeys.length === item[childrenListKey].length\n        }\n        return false\n      })\n      return flag\n    },\n    indeterminate() {\n      const { dataKey = 'rowData' } = this.params.context\n      const rowData = this.params.context.componentParent[dataKey]\n      return this.isChecked || !rowData.length ? false : rowData.some(item => (item._selectedKeys && item._selectedKeys.length) || item._selected)\n    }\n  },\n  methods: {\n    async handleCheckAllChange(e) {\n      const { childrenListKey = '_details', apiKey = 'gridApi', childRowKey } = this.params.context\n      const fatherapi = this.params.context.componentParent[apiKey]\n      fatherapi.forEachNode(async(node) => {\n        node.data._selected = e\n        if (!node.data[childrenListKey]) {\n          node.data[childrenListKey] = []\n        }\n        if (e && !node.data[childrenListKey].length && typeof this.params.context.loadDetail === 'function') {\n          node.data[childrenListKey] = await this.params.context.loadDetail(node.data)\n        }\n        if (e && node.data[childrenListKey]) {\n          node.data._selectedKeys = node.data[childrenListKey].map(item => {\n            if (!item._selectedDisabled) {\n              return item[childRowKey]\n            }\n          })\n        } else {\n          node.data._selectedKeys = []\n        }\n        const rowNode = fatherapi.getDetailGridInfo(`detail_${node.id}`)\n        rowNode && rowNode.api.refreshCells({ force: true })\n      })\n      fatherapi.refreshCells({ force: true })\n    }\n  }\n}\n</script>\n"],"mappings":"AASA;EACAA,QAAA;IACAC,UAAA;MACA;QAAAC,OAAA;MAAA,SAAAC,MAAA,CAAAC,OAAA;MACA,MAAAC,OAAA,QAAAF,MAAA,CAAAC,OAAA,CAAAE,eAAA,CAAAJ,OAAA;MACA;QAAAK,eAAA;MAAA,SAAAJ,MAAA,CAAAC,OAAA;MACA,KAAAC,OAAA,CAAAG,MAAA;QAAA;MAAA;MACA,MAAAC,IAAA,GAAAJ,OAAA,CAAAK,KAAA,CAAAC,IAAA;QACA,IAAAA,IAAA,CAAAJ,eAAA,KAAAI,IAAA,CAAAC,aAAA,IAAAD,IAAA,CAAAE,SAAA;UACA,OAAAF,IAAA,CAAAC,aAAA,CAAAJ,MAAA,KAAAG,IAAA,CAAAJ,eAAA,EAAAC,MAAA;QACA;QACA;MACA;MACA,OAAAC,IAAA;IACA;IACAK,cAAA;MACA;QAAAZ,OAAA;MAAA,SAAAC,MAAA,CAAAC,OAAA;MACA,MAAAC,OAAA,QAAAF,MAAA,CAAAC,OAAA,CAAAE,eAAA,CAAAJ,OAAA;MACA,YAAAD,SAAA,KAAAI,OAAA,CAAAG,MAAA,WAAAH,OAAA,CAAAU,IAAA,CAAAJ,IAAA,IAAAA,IAAA,CAAAC,aAAA,IAAAD,IAAA,CAAAC,aAAA,CAAAJ,MAAA,IAAAG,IAAA,CAAAE,SAAA;IACA;EACA;EACAG,OAAA;IACA,MAAAC,qBAAAC,CAAA;MACA;QAAAX,eAAA;QAAAY,MAAA;QAAAC;MAAA,SAAAjB,MAAA,CAAAC,OAAA;MACA,MAAAiB,SAAA,QAAAlB,MAAA,CAAAC,OAAA,CAAAE,eAAA,CAAAa,MAAA;MACAE,SAAA,CAAAC,WAAA,OAAAC,IAAA;QACAA,IAAA,CAAAC,IAAA,CAAAX,SAAA,GAAAK,CAAA;QACA,KAAAK,IAAA,CAAAC,IAAA,CAAAjB,eAAA;UACAgB,IAAA,CAAAC,IAAA,CAAAjB,eAAA;QACA;QACA,IAAAW,CAAA,KAAAK,IAAA,CAAAC,IAAA,CAAAjB,eAAA,EAAAC,MAAA,gBAAAL,MAAA,CAAAC,OAAA,CAAAqB,UAAA;UACAF,IAAA,CAAAC,IAAA,CAAAjB,eAAA,eAAAJ,MAAA,CAAAC,OAAA,CAAAqB,UAAA,CAAAF,IAAA,CAAAC,IAAA;QACA;QACA,IAAAN,CAAA,IAAAK,IAAA,CAAAC,IAAA,CAAAjB,eAAA;UACAgB,IAAA,CAAAC,IAAA,CAAAZ,aAAA,GAAAW,IAAA,CAAAC,IAAA,CAAAjB,eAAA,EAAAmB,GAAA,CAAAf,IAAA;YACA,KAAAA,IAAA,CAAAgB,iBAAA;cACA,OAAAhB,IAAA,CAAAS,WAAA;YACA;UACA;QACA;UACAG,IAAA,CAAAC,IAAA,CAAAZ,aAAA;QACA;QACA,MAAAgB,OAAA,GAAAP,SAAA,CAAAQ,iBAAA,WAAAN,IAAA,CAAAO,EAAA;QACAF,OAAA,IAAAA,OAAA,CAAAG,GAAA,CAAAC,YAAA;UAAAC,KAAA;QAAA;MACA;MACAZ,SAAA,CAAAW,YAAA;QAAAC,KAAA;MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}