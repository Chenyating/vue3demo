{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport localDialogTable from '../DialogTable/index.js';\nexport default {\n  name: 'AgInputSelect',\n  components: {\n    localDialogTable\n  },\n  props: {\n    title: {\n      type: String,\n      default: ''\n    },\n    value: {\n      type: String,\n      default: ''\n    },\n    size: {\n      type: String,\n      default: 'mini'\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    // 是否自动聚焦\n    autoFocus: {\n      type: Boolean,\n      default: false\n    },\n    reqConfig: {\n      type: Object,\n      default: () => {\n        return {\n          url: '',\n          // 接口api\n          method: '',\n          // 请求方法\n          params: {},\n          // 请求参数\n          keyword: '',\n          // 查询关键字\n          searchValue: '',\n          // 搜索框默认值设置\n          dataFormat: {},\n          // 数据格式\n          updataUrl: false // 更新分页信息到路径上\n        };\n      }\n    },\n\n    gridOptions: {\n      type: String,\n      default: ''\n    },\n    search: {\n      type: Boolean,\n      default: false\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      isFocus: true,\n      childValue: this.value,\n      tableSelectData: [],\n      allSelect: [],\n      visible: false,\n      // value: null,\n      filterVal: [{\n        value: '@{ALL}'\n      }, {\n        value: '@{CURRENTUSER}'\n      }, {\n        value: '@{CURRENTSTAFF}'\n      }, {\n        value: '@{CURRENTORG}'\n      }, {\n        value: '@{CURRENTROLE}'\n      }, {\n        value: '@{CURRENTCUSTOMER}'\n      }, {\n        value: '@{CURRENTCORP}'\n      }, {\n        value: '@{CURRENTCOST}'\n      }]\n    };\n  },\n  computed: {\n    isPlaceholder() {\n      return this.placeholder || this.$t('components.pleaseEnter');\n    }\n  },\n  mounted() {\n    // if (this.params && Object.keys(this.params).length > 0) this.childValue = this.params.value // （ag-grid中使用必须有）\n    // // this.formatNum()\n    // // 返回当前组件指向\n    // this.mark && this.$emit('getComponent', this)\n    this.$nextTick(() => {\n      if (this.$refs.input) {\n        this.$refs.input.focus();\n        console.log('this.$refs.input', this.$refs.input);\n        console.log('this.$refs.params', this.params);\n      }\n    });\n  },\n  // 销毁前触发失焦事件--解决ag-grid点击直接退出编辑状态情况\n  beforeDestroy() {\n    const pseudoEvent = {\n      mark: 'pseudoEvent',\n      target: {\n        value: this.childValue\n      }\n    };\n    this.blurAction(pseudoEvent);\n  },\n  methods: {\n    focus() {},\n    clear() {\n      this.childValue = '';\n    },\n    handleIconClick(event) {\n      this.isFocus = false;\n      event.preventDefault();\n      this.visible = true;\n    },\n    onSelectionChangedData(ref) {\n      console.log('ref', ref);\n      // 获取当前分页数据\n      const pageNo = this.$refs.table.pagination.pageNo;\n      // 当前页选中值对象\n      // const selectedNodes = ref.getSelectedNodes()\n      ref.forEachNode((node, index) => {\n        if (node.selected) {\n          this.allSelect.push(node);\n        } else {\n          this.allSelect.map((item, index_) => {\n            if (node.data.sId === item.data.sId) {\n              this.allSelect.splice(index_, 1);\n            }\n          });\n        }\n      });\n      this.allSelect = this.allSelect.length > 0 ? unique(this.allSelect) : [];\n      function unique(arr) {\n        var i;\n        var j;\n        var len = arr.length;\n        for (i = 0; i < len; i++) {\n          for (j = i + 1; j < len; j++) {\n            if (arr[i].data.sId === arr[j].data.sId) {\n              arr.splice(j, 1);\n              len--;\n              j--;\n            }\n          }\n        }\n        return arr;\n      }\n      // 取出当前分页中所选中的值\n      const selectedData = this.allSelect && this.allSelect.map(node => node.data);\n      this.tableSelectData[pageNo] = selectedData;\n      // 所有选中的值\n      this.$refs.table.selectedRightDataNodes = [].concat.apply([], selectedData);\n    },\n    afterFetch(rowData) {\n      this.complete_Data = rowData;\n      console.log(rowData);\n      this.$refs.table.gridOptions.api.forEachNode(node => {\n        const data = [].concat.apply([], this.tableSelectData);\n        data.map(item => {\n          if (item[rowData.keyField] === node.data[rowData.keyField]) {\n            node.setSelected(true);\n          }\n        });\n      });\n    },\n    handleClose(value = []) {\n      console.log('value', value);\n      this.$emit('onSelect', value);\n    },\n    onSelect(option, type) {\n      if (type === 'confirm') {\n        const value = {\n          option: option,\n          data: this.complete_Data\n        };\n        this.$emit('change', value);\n        this.$emit('saveVal', value);\n      }\n      // this.handleClose()\n      this.allSelect = [];\n      this.arr = [];\n      this.visible = false;\n    },\n    // 失焦事件\n    blurAction(e) {\n      // this.handleIconClick(true)\n      this.$emit('input', this.childValue);\n      this.$emit('blur', e);\n    },\n    tabCell(e) {\n      if (!this.mark) return;\n      // 解决ag-grid编辑状态回车赋值以及计算问题\n      if (e.keyCode === 13) {\n        // const pseudoEvent = {\n        //   mark: 'pseudoEvent',\n        //   target: {\n        //     value: this.childValue\n        //   }\n        // }\n        // this.flagFocus && this.blurAction(pseudoEvent)\n      }\n      this.$emit('keyup', e);\n    },\n    getValue() {\n      return this.childValue;\n    },\n    querySearch(queryString, cb) {\n      const filterVal = this.filterVal;\n      const results = queryString ? filterVal.filter(this.createFilter(queryString)) : filterVal;\n      // 调用 callback 返回建议列表的数据\n      cb(results);\n    },\n    createFilter(queryString) {\n      return filterVal => {\n        return filterVal.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0;\n      };\n    },\n    handleSelect(item) {},\n    isCancelBeforeStart() {\n      return false;\n    },\n    isCancelAfterEnd() {\n      return false;\n    },\n    isPopup() {\n      return false;\n    }\n  }\n};","map":{"version":3,"names":["localDialogTable","name","components","props","title","type","String","default","value","size","disabled","Boolean","autoFocus","reqConfig","Object","url","method","params","keyword","searchValue","dataFormat","updataUrl","gridOptions","search","placeholder","data","isFocus","childValue","tableSelectData","allSelect","visible","filterVal","computed","isPlaceholder","$t","mounted","$nextTick","$refs","input","focus","console","log","beforeDestroy","pseudoEvent","mark","target","blurAction","methods","clear","handleIconClick","event","preventDefault","onSelectionChangedData","ref","pageNo","table","pagination","forEachNode","node","index","selected","push","map","item","index_","sId","splice","length","unique","arr","i","j","len","selectedData","selectedRightDataNodes","concat","apply","afterFetch","rowData","complete_Data","api","keyField","setSelected","handleClose","$emit","onSelect","option","e","tabCell","keyCode","getValue","querySearch","queryString","cb","results","filter","createFilter","toLowerCase","indexOf","handleSelect","isCancelBeforeStart","isCancelAfterEnd","isPopup"],"sources":["node_modules/@cndinfo/cube-design-web/src/components/ForGridComponents/AgInputSelect.vue"],"sourcesContent":["<template>\n  <div class=\"input-search\">\n    <el-autocomplete\n      ref=\"input\"\n      v-model=\"childValue\"\n      class=\"inline-input\"\n      :fetch-suggestions=\"querySearch\"\n      :trigger-on-focus=\"false\"\n      style=\"width: 100%\"\n      size=\"mini\"\n      :placeholder=\"isPlaceholder\"\n      @focus=\"focus\"\n      @keyup.native=\"tabCell\"\n      @select=\"handleSelect\"\n    >\n      <i\n        v-if=\"!search\"\n        slot=\"suffix\"\n        class=\"el-icon-search\"\n        @click=\"handleIconClick\"\n      />\n      <i slot=\"suffix\" class=\"el-icon-circle-close\" @click=\"clear\" />\n    </el-autocomplete>\n    <!-- <el-input\n    v-model=\"childValue\"\n    :size=\"size\"\n    :disabled=\"disabled\"\n    @input=\"inputAction\"\n    @focus=\"focusAction\"\n    @blur=\"blurAction\"\n    @keyup.native=\"tabCell\"\n    clearable\n    @clear=\"clear\">\n      <i\n      slot=\"suffix\"\n      class=\"el-icon-search\"\n      @click=\"handleIconClick\">\n      </i>\n    </el-input> -->\n    <local-dialog-table\n      ref=\"table\"\n      :title=\"title\"\n      :append-to-body=\"true\"\n      :visible.sync=\"visible\"\n      :req-config=\"reqConfig\"\n      :column-defs=\"gridOptions.columnDefs\"\n      :show-pagination=\"true\"\n      :radio=\"false\"\n      :required=\"false\"\n      :show-search=\"true\"\n      :custom-select=\"false\"\n      @selectChange=\"onSelectionChangedData\"\n      @afterFetch=\"afterFetch\"\n      @onSelect=\"onSelect\"\n    />\n  </div>\n</template>\n\n<script>\nimport localDialogTable from '../DialogTable/index.js'\nexport default {\n  name: 'AgInputSelect',\n  components: { localDialogTable },\n  props: {\n    title: {\n      type: String,\n      default: ''\n    },\n    value: {\n      type: String,\n      default: ''\n    },\n    size: {\n      type: String,\n      default: 'mini'\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    // 是否自动聚焦\n    autoFocus: {\n      type: Boolean,\n      default: false\n    },\n    reqConfig: {\n      type: Object,\n      default: () => {\n        return {\n          url: '', // 接口api\n          method: '', // 请求方法\n          params: {}, // 请求参数\n          keyword: '', // 查询关键字\n          searchValue: '', // 搜索框默认值设置\n          dataFormat: {}, // 数据格式\n          updataUrl: false // 更新分页信息到路径上\n        }\n      }\n    },\n    gridOptions: {\n      type: String,\n      default: ''\n    },\n    search: {\n      type: Boolean,\n      default: false\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      isFocus: true,\n      childValue: this.value,\n      tableSelectData: [],\n      allSelect: [],\n      visible: false,\n      // value: null,\n      filterVal: [\n        { value: '@{ALL}' },\n        { value: '@{CURRENTUSER}' },\n        { value: '@{CURRENTSTAFF}' },\n        { value: '@{CURRENTORG}' },\n        { value: '@{CURRENTROLE}' },\n        { value: '@{CURRENTCUSTOMER}' },\n        { value: '@{CURRENTCORP}' },\n        { value: '@{CURRENTCOST}' }\n      ]\n    }\n  },\n  computed: {\n    isPlaceholder() {\n      return this.placeholder || this.$t('components.pleaseEnter')\n    }\n  },\n  mounted() {\n    // if (this.params && Object.keys(this.params).length > 0) this.childValue = this.params.value // （ag-grid中使用必须有）\n    // // this.formatNum()\n    // // 返回当前组件指向\n    // this.mark && this.$emit('getComponent', this)\n    this.$nextTick(() => {\n      if (this.$refs.input) {\n        this.$refs.input.focus()\n        console.log('this.$refs.input', this.$refs.input)\n        console.log('this.$refs.params', this.params)\n      }\n    })\n  },\n  // 销毁前触发失焦事件--解决ag-grid点击直接退出编辑状态情况\n  beforeDestroy() {\n    const pseudoEvent = {\n      mark: 'pseudoEvent',\n      target: {\n        value: this.childValue\n      }\n    }\n    this.blurAction(pseudoEvent)\n  },\n  methods: {\n    focus() {},\n    clear() {\n      this.childValue = ''\n    },\n    handleIconClick(event) {\n      this.isFocus = false\n      event.preventDefault()\n      this.visible = true\n    },\n    onSelectionChangedData(ref) {\n      console.log('ref', ref)\n      // 获取当前分页数据\n      const pageNo = this.$refs.table.pagination.pageNo\n      // 当前页选中值对象\n      // const selectedNodes = ref.getSelectedNodes()\n      ref.forEachNode((node, index) => {\n        if (node.selected) {\n          this.allSelect.push(node)\n        } else {\n          this.allSelect.map((item, index_) => {\n            if (node.data.sId === item.data.sId) {\n              this.allSelect.splice(index_, 1)\n            }\n          })\n        }\n      })\n      this.allSelect = this.allSelect.length > 0 ? unique(this.allSelect) : []\n      function unique(arr) {\n        var i\n        var j\n        var len = arr.length\n        for (i = 0; i < len; i++) {\n          for (j = i + 1; j < len; j++) {\n            if (arr[i].data.sId === arr[j].data.sId) {\n              arr.splice(j, 1)\n              len--\n              j--\n            }\n          }\n        }\n        return arr\n      }\n      // 取出当前分页中所选中的值\n      const selectedData =\n        this.allSelect && this.allSelect.map((node) => node.data)\n      this.tableSelectData[pageNo] = selectedData\n      // 所有选中的值\n      this.$refs.table.selectedRightDataNodes = [].concat.apply(\n        [],\n        selectedData\n      )\n    },\n    afterFetch(rowData) {\n      this.complete_Data = rowData\n      console.log(rowData)\n      this.$refs.table.gridOptions.api.forEachNode((node) => {\n        const data = [].concat.apply([], this.tableSelectData)\n        data.map((item) => {\n          if (item[rowData.keyField] === node.data[rowData.keyField]) {\n            node.setSelected(true)\n          }\n        })\n      })\n    },\n    handleClose(value = []) {\n      console.log('value', value)\n      this.$emit('onSelect', value)\n    },\n    onSelect(option, type) {\n      if (type === 'confirm') {\n        const value = {\n          option: option,\n          data: this.complete_Data\n        }\n        this.$emit('change', value)\n        this.$emit('saveVal', value)\n      }\n      // this.handleClose()\n      this.allSelect = []\n      this.arr = []\n      this.visible = false\n    },\n    // 失焦事件\n    blurAction(e) {\n      // this.handleIconClick(true)\n      this.$emit('input', this.childValue)\n      this.$emit('blur', e)\n    },\n    tabCell(e) {\n      if (!this.mark) return\n      // 解决ag-grid编辑状态回车赋值以及计算问题\n      if (e.keyCode === 13) {\n        // const pseudoEvent = {\n        //   mark: 'pseudoEvent',\n        //   target: {\n        //     value: this.childValue\n        //   }\n        // }\n        // this.flagFocus && this.blurAction(pseudoEvent)\n      }\n      this.$emit('keyup', e)\n    },\n    getValue() {\n      return this.childValue\n    },\n    querySearch(queryString, cb) {\n      const filterVal = this.filterVal\n      const results = queryString\n        ? filterVal.filter(this.createFilter(queryString))\n        : filterVal\n      // 调用 callback 返回建议列表的数据\n      cb(results)\n    },\n    createFilter(queryString) {\n      return (filterVal) => {\n        return (\n          filterVal.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0\n        )\n      }\n    },\n    handleSelect(item) {},\n\n    isCancelBeforeStart() {\n      return false\n    },\n\n    isCancelAfterEnd() {\n      return false\n    },\n    isPopup() {\n      return false\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.input-search {\n  .el-icon-search,\n  .el-icon-circle-close {\n    cursor: pointer;\n    margin: 0 1px;\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}