{"ast":null,"code":"import '../../../../lib/styles/components/RightMenu.scss';\nexport default {\n  name: 'RightMenu',\n  props: {\n    target: {\n      type: null,\n      default: ''\n    },\n    show: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      triggerShowFn: () => {},\n      triggerHideFn: () => {},\n      x: null,\n      y: null,\n      style: {},\n      binded: false\n    };\n  },\n  watch: {\n    show(show) {\n      if (show) {\n        this.bindHideEvents();\n      } else {\n        this.unbindHideEvents();\n      }\n    },\n    target(target) {\n      this.bindEvents();\n    }\n  },\n  mounted() {\n    this.bindEvents();\n  },\n  methods: {\n    // 初始化事件\n    bindEvents() {\n      this.$nextTick(() => {\n        if (!this.target || this.binded) return;\n        this.triggerShowFn = this.contextMenuHandler.bind(this);\n        this.target.addEventListener('contextmenu', this.triggerShowFn);\n        this.binded = true;\n      });\n    },\n    // 取消绑定事件\n    unbindEvents() {\n      if (!this.target) return;\n      this.target.removeEventListener('contextmenu', this.triggerShowFn);\n    },\n    // 绑定隐藏菜单事件\n    bindHideEvents() {\n      this.triggerHideFn = this.clickDocumentHandler.bind(this);\n      document.addEventListener('mousedown', this.triggerHideFn);\n      document.addEventListener('mousewheel', this.triggerHideFn);\n    },\n    // 取消绑定隐藏菜单事件\n    unbindHideEvents() {\n      document.removeEventListener('mousedown', this.triggerHideFn);\n      document.removeEventListener('mousewheel', this.triggerHideFn);\n    },\n    // 鼠标按压事件处理器\n    clickDocumentHandler(e) {\n      this.$emit('update:show', false);\n    },\n    // 右键事件事件处理\n    contextMenuHandler(e) {\n      this.x = e.clientX;\n      this.y = e.clientY;\n      this.layout();\n      this.$emit('update:show', true);\n      e.preventDefault();\n    },\n    // 布局\n    layout() {\n      this.style = {\n        left: this.x + 'px',\n        top: this.y + 'px'\n      };\n    }\n  }\n};","map":{"version":3,"names":["name","props","target","type","default","show","Boolean","data","triggerShowFn","triggerHideFn","x","y","style","binded","watch","bindHideEvents","unbindHideEvents","bindEvents","mounted","methods","$nextTick","contextMenuHandler","bind","addEventListener","unbindEvents","removeEventListener","clickDocumentHandler","document","e","$emit","clientX","clientY","layout","preventDefault","left","top"],"sources":["node_modules/@cndinfo/cube-design-web/src/components/RightMenu/src/index.vue"],"sourcesContent":["<template>\n  <div\n    v-show=\"show\"\n    :style=\"style\"\n    style=\"display: block;\"\n    class=\"right-menu-banner\"\n    @mousedown.stop\n    @contextmenu.prevent\n  >\n    <slot />\n  </div>\n</template>\n\n<script>\nimport '../../../../lib/styles/components/RightMenu.scss'\nexport default {\n  name: 'RightMenu',\n  props: {\n    target: {\n      type: null,\n      default: ''\n    },\n    show: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      triggerShowFn: () => {},\n      triggerHideFn: () => {},\n      x: null,\n      y: null,\n      style: {},\n      binded: false\n    }\n  },\n  watch: {\n    show(show) {\n      if (show) {\n        this.bindHideEvents()\n      } else {\n        this.unbindHideEvents()\n      }\n    },\n    target(target) {\n      this.bindEvents()\n    }\n  },\n  mounted() {\n    this.bindEvents()\n  },\n  methods: {\n    // 初始化事件\n    bindEvents() {\n      this.$nextTick(() => {\n        if (!this.target || this.binded) return\n        this.triggerShowFn = this.contextMenuHandler.bind(this)\n        this.target.addEventListener('contextmenu', this.triggerShowFn)\n        this.binded = true\n      })\n    },\n\n    // 取消绑定事件\n    unbindEvents() {\n      if (!this.target) return\n      this.target.removeEventListener('contextmenu', this.triggerShowFn)\n    },\n\n    // 绑定隐藏菜单事件\n    bindHideEvents() {\n      this.triggerHideFn = this.clickDocumentHandler.bind(this)\n      document.addEventListener('mousedown', this.triggerHideFn)\n      document.addEventListener('mousewheel', this.triggerHideFn)\n    },\n\n    // 取消绑定隐藏菜单事件\n    unbindHideEvents() {\n      document.removeEventListener('mousedown', this.triggerHideFn)\n      document.removeEventListener('mousewheel', this.triggerHideFn)\n    },\n\n    // 鼠标按压事件处理器\n    clickDocumentHandler(e) {\n      this.$emit('update:show', false)\n    },\n\n    // 右键事件事件处理\n    contextMenuHandler(e) {\n      this.x = e.clientX\n      this.y = e.clientY\n      this.layout()\n      this.$emit('update:show', true)\n      e.preventDefault()\n    },\n\n    // 布局\n    layout() {\n      this.style = {\n        left: this.x + 'px',\n        top: this.y + 'px'\n      }\n    }\n  }\n}\n</script>\n"],"mappings":"AAcA;AACA;EACAA,IAAA;EACAC,KAAA;IACAC,MAAA;MACAC,IAAA;MACAC,OAAA;IACA;IACAC,IAAA;MACAF,IAAA,EAAAG,OAAA;MACAF,OAAA;IACA;EACA;EACAG,KAAA;IACA;MACAC,aAAA,EAAAA,CAAA;MACAC,aAAA,EAAAA,CAAA;MACAC,CAAA;MACAC,CAAA;MACAC,KAAA;MACAC,MAAA;IACA;EACA;EACAC,KAAA;IACAT,SAAA;MACA,IAAAA,IAAA;QACA,KAAAU,cAAA;MACA;QACA,KAAAC,gBAAA;MACA;IACA;IACAd,aAAA;MACA,KAAAe,UAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAD,UAAA;EACA;EACAE,OAAA;IACA;IACAF,WAAA;MACA,KAAAG,SAAA;QACA,UAAAlB,MAAA,SAAAW,MAAA;QACA,KAAAL,aAAA,QAAAa,kBAAA,CAAAC,IAAA;QACA,KAAApB,MAAA,CAAAqB,gBAAA,qBAAAf,aAAA;QACA,KAAAK,MAAA;MACA;IACA;IAEA;IACAW,aAAA;MACA,UAAAtB,MAAA;MACA,KAAAA,MAAA,CAAAuB,mBAAA,qBAAAjB,aAAA;IACA;IAEA;IACAO,eAAA;MACA,KAAAN,aAAA,QAAAiB,oBAAA,CAAAJ,IAAA;MACAK,QAAA,CAAAJ,gBAAA,mBAAAd,aAAA;MACAkB,QAAA,CAAAJ,gBAAA,oBAAAd,aAAA;IACA;IAEA;IACAO,iBAAA;MACAW,QAAA,CAAAF,mBAAA,mBAAAhB,aAAA;MACAkB,QAAA,CAAAF,mBAAA,oBAAAhB,aAAA;IACA;IAEA;IACAiB,qBAAAE,CAAA;MACA,KAAAC,KAAA;IACA;IAEA;IACAR,mBAAAO,CAAA;MACA,KAAAlB,CAAA,GAAAkB,CAAA,CAAAE,OAAA;MACA,KAAAnB,CAAA,GAAAiB,CAAA,CAAAG,OAAA;MACA,KAAAC,MAAA;MACA,KAAAH,KAAA;MACAD,CAAA,CAAAK,cAAA;IACA;IAEA;IACAD,OAAA;MACA,KAAApB,KAAA;QACAsB,IAAA,OAAAxB,CAAA;QACAyB,GAAA,OAAAxB,CAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}