{"ast":null,"code":"import { defineStore } from 'pinia';\n\n// 创建一个Pinia Store\nexport const cubeCacheStore = defineStore({\n  id: 'cubeCache',\n  state: () => ({\n    cacheData: {} // 存储缓存数据的对象\n  }),\n\n  getters: {\n    getCacheByKey: state => cacheKey => state.cacheData[cacheKey] || {}\n  },\n  actions: {\n    generateCacheKey() {\n      // 生成唯一缓存key的逻辑，可以使用 UUID 等方式\n      return Math.random().toString(36).substr(2, 9);\n    },\n    setCache(cacheKey, cacheInfo, time = 0) {\n      // 获取上一个版本\n      const prevCacheInfo = this.cacheData[cacheKey] || {};\n\n      // 如果数据发生变化或者间隔时间到达，存储为最新版本\n      if (JSON.stringify(prevCacheInfo) !== JSON.stringify(cacheInfo) || time > 0) {\n        this.cacheData[cacheKey] = cacheInfo;\n        localStorage.setItem(cacheKey, JSON.stringify(cacheInfo));\n\n        // 设置自动存储定时器\n        if (time > 0) {\n          setTimeout(() => {\n            this.setCache(cacheKey, cacheInfo, time);\n          }, time);\n        }\n      }\n    },\n    cancelAutoSave(cacheKey) {\n      // 取消自动存储\n      clearTimeout(this.cacheData[cacheKey]?.timer);\n    },\n    clearCache(cacheKey) {\n      // 清空指定缓存\n      delete this.cacheData[cacheKey];\n      localStorage.removeItem(cacheKey);\n    },\n    clearAllCache() {\n      // 清空所有缓存\n      for (const key in this.cacheData) {\n        this.clearCache(key);\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","cubeCacheStore","id","state","cacheData","getters","getCacheByKey","cacheKey","actions","generateCacheKey","Math","random","toString","substr","setCache","cacheInfo","time","prevCacheInfo","JSON","stringify","localStorage","setItem","setTimeout","cancelAutoSave","clearTimeout","timer","clearCache","removeItem","clearAllCache","key"],"sources":["/Users/myproject/vuedemo/src/store/index.js"],"sourcesContent":["import { defineStore } from 'pinia';\n\n// 创建一个Pinia Store\nexport const cubeCacheStore = defineStore({\n  id: 'cubeCache',\n  state: () => ({\n    cacheData: {}, // 存储缓存数据的对象\n  }),\n\n  getters: {\n    getCacheByKey: (state) => (cacheKey) => state.cacheData[cacheKey] || {},\n  },\n\n  actions: {\n    generateCacheKey() {\n      // 生成唯一缓存key的逻辑，可以使用 UUID 等方式\n      return Math.random().toString(36).substr(2, 9);\n    },\n\n    setCache(cacheKey, cacheInfo, time = 0) {\n      // 获取上一个版本\n      const prevCacheInfo = this.cacheData[cacheKey] || {};\n      \n      // 如果数据发生变化或者间隔时间到达，存储为最新版本\n      if (JSON.stringify(prevCacheInfo) !== JSON.stringify(cacheInfo) || time > 0) {\n        this.cacheData[cacheKey] = cacheInfo;\n        localStorage.setItem(cacheKey, JSON.stringify(cacheInfo));\n        \n        // 设置自动存储定时器\n        if (time > 0) {\n          setTimeout(() => {\n            this.setCache(cacheKey, cacheInfo, time);\n          }, time);\n        }\n      }\n    },\n\n    cancelAutoSave(cacheKey) {\n      // 取消自动存储\n      clearTimeout(this.cacheData[cacheKey]?.timer);\n    },\n\n    clearCache(cacheKey) {\n      // 清空指定缓存\n      delete this.cacheData[cacheKey];\n      localStorage.removeItem(cacheKey);\n    },\n\n    clearAllCache() {\n      // 清空所有缓存\n      for (const key in this.cacheData) {\n        this.clearCache(key);\n      }\n    },\n  },\n});\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;;AAEnC;AACA,OAAO,MAAMC,cAAc,GAAGD,WAAW,CAAC;EACxCE,EAAE,EAAE,WAAW;EACfC,KAAK,EAAEA,CAAA,MAAO;IACZC,SAAS,EAAE,CAAC,CAAC,CAAE;EACjB,CAAC,CAAC;;EAEFC,OAAO,EAAE;IACPC,aAAa,EAAGH,KAAK,IAAMI,QAAQ,IAAKJ,KAAK,CAACC,SAAS,CAACG,QAAQ,CAAC,IAAI,CAAC;EACxE,CAAC;EAEDC,OAAO,EAAE;IACPC,gBAAgBA,CAAA,EAAG;MACjB;MACA,OAAOC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;IAChD,CAAC;IAEDC,QAAQA,CAACP,QAAQ,EAAEQ,SAAS,EAAEC,IAAI,GAAG,CAAC,EAAE;MACtC;MACA,MAAMC,aAAa,GAAG,IAAI,CAACb,SAAS,CAACG,QAAQ,CAAC,IAAI,CAAC,CAAC;;MAEpD;MACA,IAAIW,IAAI,CAACC,SAAS,CAACF,aAAa,CAAC,KAAKC,IAAI,CAACC,SAAS,CAACJ,SAAS,CAAC,IAAIC,IAAI,GAAG,CAAC,EAAE;QAC3E,IAAI,CAACZ,SAAS,CAACG,QAAQ,CAAC,GAAGQ,SAAS;QACpCK,YAAY,CAACC,OAAO,CAACd,QAAQ,EAAEW,IAAI,CAACC,SAAS,CAACJ,SAAS,CAAC,CAAC;;QAEzD;QACA,IAAIC,IAAI,GAAG,CAAC,EAAE;UACZM,UAAU,CAAC,MAAM;YACf,IAAI,CAACR,QAAQ,CAACP,QAAQ,EAAEQ,SAAS,EAAEC,IAAI,CAAC;UAC1C,CAAC,EAAEA,IAAI,CAAC;QACV;MACF;IACF,CAAC;IAEDO,cAAcA,CAAChB,QAAQ,EAAE;MACvB;MACAiB,YAAY,CAAC,IAAI,CAACpB,SAAS,CAACG,QAAQ,CAAC,EAAEkB,KAAK,CAAC;IAC/C,CAAC;IAEDC,UAAUA,CAACnB,QAAQ,EAAE;MACnB;MACA,OAAO,IAAI,CAACH,SAAS,CAACG,QAAQ,CAAC;MAC/Ba,YAAY,CAACO,UAAU,CAACpB,QAAQ,CAAC;IACnC,CAAC;IAEDqB,aAAaA,CAAA,EAAG;MACd;MACA,KAAK,MAAMC,GAAG,IAAI,IAAI,CAACzB,SAAS,EAAE;QAChC,IAAI,CAACsB,UAAU,CAACG,GAAG,CAAC;MACtB;IACF;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}