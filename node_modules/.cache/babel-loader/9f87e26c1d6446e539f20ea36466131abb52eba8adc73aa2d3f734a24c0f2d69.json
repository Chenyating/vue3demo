{"ast":null,"code":"import agEditorMixins from './ag-editor-mixins';\nexport default {\n  name: 'AgInputDialog',\n  mixins: [agEditorMixins],\n  props: {},\n  data() {\n    return {\n      // 鼠标hover状态\n      flagHover: false\n    };\n  },\n  computed: {\n    componentProps() {\n      return Object.assign({}, {\n        placeholder: this.$t('components.pleaseEnter'),\n        size: 'mini'\n      }, this.params?.cellEditorComponentProps || {});\n    },\n    readonlyComputed() {\n      if (this.type === 'dialog') return true;\n      return this.readonly;\n    }\n  },\n  methods: {\n    triggerChange() {\n      const {\n        cellEditorComponentProps,\n        ...restAgParams\n      } = this.params || {};\n      const {\n        change\n      } = cellEditorComponentProps || {};\n      change?.(this.agValue, {\n        agParams: restAgParams\n      });\n    },\n    triggerClear() {\n      const {\n        cellEditorComponentProps,\n        ...restAgParams\n      } = this.params || {};\n      const {\n        clear\n      } = cellEditorComponentProps || {};\n      clear?.(this.agValue, {\n        agParams: restAgParams\n      });\n    },\n    // 监听键盘事件\n    handleKeyup(e) {\n      this.triggerKeyup(e);\n    },\n    // 监听键盘事件\n    handleKeydown(e) {\n      this.triggerKeydown(e);\n    },\n    handleBlur(e) {\n      this.triggerBlur(e);\n    },\n    // 聚焦事件\n    handleFocus(e) {\n      if (this.hasError) {\n        this.popoverVisible = true;\n      }\n      const {\n        focusSelect\n      } = this.componentProps;\n      if (focusSelect) {\n        this.$nextTick(() => {\n          e.target.select();\n        });\n      }\n      this.triggerFocus(e);\n    },\n    mouseenter() {\n      this.flagHover = true;\n    },\n    mouseleave() {\n      this.flagHover = false;\n    },\n    handleChange() {\n      this.triggerChange();\n    },\n    handleClearClick() {\n      this.agValue = '';\n      this.triggerChange();\n      this.triggerClear();\n    },\n    focus() {\n      this.$refs.inputRef.focus();\n    },\n    blur() {\n      this.$refs.inputRef.blur();\n    },\n    select() {\n      this.$refs.inputRef.select();\n    }\n  }\n};","map":{"version":3,"names":["agEditorMixins","name","mixins","props","data","flagHover","computed","componentProps","Object","assign","placeholder","$t","size","params","cellEditorComponentProps","readonlyComputed","type","readonly","methods","triggerChange","restAgParams","change","agValue","agParams","triggerClear","clear","handleKeyup","e","triggerKeyup","handleKeydown","triggerKeydown","handleBlur","triggerBlur","handleFocus","hasError","popoverVisible","focusSelect","$nextTick","target","select","triggerFocus","mouseenter","mouseleave","handleChange","handleClearClick","focus","$refs","inputRef","blur"],"sources":["node_modules/@cndinfo/cube-design-web/src/components/ForGridComponents/cell-editor/AgGridInputDialog.vue"],"sourcesContent":["<template>\n  <el-input\n    ref=\"inputRef\"\n    v-model=\"agValue\"\n    :readonly=\"readonlyComputed\"\n    @mouseenter.native=\"mouseenter\"\n    @mouseleave.native=\"mouseleave\"\n    @change=\"handleChange\"\n    @focus=\"handleFocus\"\n    @blur=\"handleBlur\"\n  >\n    <i slot=\"suffix\" class=\"el-input__icon el-icon-search\" @click=\"emitFocus\" />\n    <i\n      v-show=\"flagHover && agValue\"\n      slot=\"suffix\"\n      class=\"el-input__icon el-icon-circle-close pointer\"\n      @click.stop=\"handleClearClick\"\n    />\n  </el-input>\n</template>\n\n<script>\nimport agEditorMixins from './ag-editor-mixins'\n\nexport default {\n  name: 'AgInputDialog',\n  mixins: [agEditorMixins],\n  props: {},\n  data() {\n    return {\n      // 鼠标hover状态\n      flagHover: false\n    }\n  },\n  computed: {\n    componentProps() {\n      return Object.assign(\n        {},\n        {\n          placeholder: this.$t('components.pleaseEnter'),\n          size: 'mini'\n        },\n        this.params?.cellEditorComponentProps || {}\n      )\n    },\n    readonlyComputed() {\n      if (this.type === 'dialog') return true\n      return this.readonly\n    }\n  },\n\n  methods: {\n    triggerChange() {\n      const { cellEditorComponentProps, ...restAgParams } = this.params || {}\n\n      const { change } = cellEditorComponentProps || {}\n\n      change?.(this.agValue, {\n        agParams: restAgParams\n      })\n    },\n    triggerClear() {\n      const { cellEditorComponentProps, ...restAgParams } = this.params || {}\n\n      const { clear } = cellEditorComponentProps || {}\n\n      clear?.(this.agValue, {\n        agParams: restAgParams\n      })\n    },\n    // 监听键盘事件\n    handleKeyup(e) {\n      this.triggerKeyup(e)\n    },\n    // 监听键盘事件\n    handleKeydown(e) {\n      this.triggerKeydown(e)\n    },\n    handleBlur(e) {\n      this.triggerBlur(e)\n    },\n    // 聚焦事件\n    handleFocus(e) {\n      if (this.hasError) {\n        this.popoverVisible = true\n      }\n\n      const { focusSelect } = this.componentProps\n\n      if (focusSelect) {\n        this.$nextTick(() => {\n          e.target.select()\n        })\n      }\n\n      this.triggerFocus(e)\n    },\n    mouseenter() {\n      this.flagHover = true\n    },\n    mouseleave() {\n      this.flagHover = false\n    },\n    handleChange() {\n      this.triggerChange()\n    },\n    handleClearClick() {\n      this.agValue = ''\n      this.triggerChange()\n      this.triggerClear()\n    },\n    focus() {\n      this.$refs.inputRef.focus()\n    },\n    blur() {\n      this.$refs.inputRef.blur()\n    },\n    select() {\n      this.$refs.inputRef.select()\n    }\n  }\n}\n</script>\n"],"mappings":"AAsBA,OAAAA,cAAA;AAEA;EACAC,IAAA;EACAC,MAAA,GAAAF,cAAA;EACAG,KAAA;EACAC,KAAA;IACA;MACA;MACAC,SAAA;IACA;EACA;EACAC,QAAA;IACAC,eAAA;MACA,OAAAC,MAAA,CAAAC,MAAA,CACA,IACA;QACAC,WAAA,OAAAC,EAAA;QACAC,IAAA;MACA,GACA,KAAAC,MAAA,EAAAC,wBAAA,MACA;IACA;IACAC,iBAAA;MACA,SAAAC,IAAA;MACA,YAAAC,QAAA;IACA;EACA;EAEAC,OAAA;IACAC,cAAA;MACA;QAAAL,wBAAA;QAAA,GAAAM;MAAA,SAAAP,MAAA;MAEA;QAAAQ;MAAA,IAAAP,wBAAA;MAEAO,MAAA,QAAAC,OAAA;QACAC,QAAA,EAAAH;MACA;IACA;IACAI,aAAA;MACA;QAAAV,wBAAA;QAAA,GAAAM;MAAA,SAAAP,MAAA;MAEA;QAAAY;MAAA,IAAAX,wBAAA;MAEAW,KAAA,QAAAH,OAAA;QACAC,QAAA,EAAAH;MACA;IACA;IACA;IACAM,YAAAC,CAAA;MACA,KAAAC,YAAA,CAAAD,CAAA;IACA;IACA;IACAE,cAAAF,CAAA;MACA,KAAAG,cAAA,CAAAH,CAAA;IACA;IACAI,WAAAJ,CAAA;MACA,KAAAK,WAAA,CAAAL,CAAA;IACA;IACA;IACAM,YAAAN,CAAA;MACA,SAAAO,QAAA;QACA,KAAAC,cAAA;MACA;MAEA;QAAAC;MAAA,SAAA7B,cAAA;MAEA,IAAA6B,WAAA;QACA,KAAAC,SAAA;UACAV,CAAA,CAAAW,MAAA,CAAAC,MAAA;QACA;MACA;MAEA,KAAAC,YAAA,CAAAb,CAAA;IACA;IACAc,WAAA;MACA,KAAApC,SAAA;IACA;IACAqC,WAAA;MACA,KAAArC,SAAA;IACA;IACAsC,aAAA;MACA,KAAAxB,aAAA;IACA;IACAyB,iBAAA;MACA,KAAAtB,OAAA;MACA,KAAAH,aAAA;MACA,KAAAK,YAAA;IACA;IACAqB,MAAA;MACA,KAAAC,KAAA,CAAAC,QAAA,CAAAF,KAAA;IACA;IACAG,KAAA;MACA,KAAAF,KAAA,CAAAC,QAAA,CAAAC,IAAA;IACA;IACAT,OAAA;MACA,KAAAO,KAAA,CAAAC,QAAA,CAAAR,MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}