{"ast":null,"code":"import _ from \"lodash\";\nimport $router from \"../common/uni-router\";\nimport { Volcengine } from \"../common\";\nimport { checkIsIOS } from \"../common/utils/env\";\nexport default class UniVolcengine extends Volcengine {\n  constructor(params) {\n    params.type = 0; // 表示是uni-app 端的SDK\n    super(params);\n    try {\n      this.uniPluginObject = params.uniPluginObject;\n      this.routerInfo = UNI_ROUTES.pages;\n      this.tarBar = UNI_ROUTES.tarBar ? UNI_ROUTES.tarBar.list : [];\n      this.isVolcengine = true;\n      if (!this.uniPluginObject.hasStarted()) {\n        this.uniPluginObject.start();\n      }\n    } catch (e) {\n      this.isVolcengine = false;\n      this.routerInfo = [];\n      this.tarBar = [];\n      this.reportException(\"constructor\");\n    }\n    const pages = this.getCurrentPagesArr();\n    this.changeCurrentPage(pages);\n  }\n  start() {\n    if (!this.isVolcengine) {\n      return;\n    }\n    this.init(this.routerInfo, this.tarBar);\n    if (!this.isSuccessInit) {\n      this.reportException(\"start\");\n    }\n  }\n  // 监听路由变化\n  listenRouter(param) {\n    if (!_.isObject(param)) {\n      param = {};\n    }\n    try {\n      $router.onchange = (n, o) => {\n        if (!this.isVolcengine) {\n          return;\n        }\n        const lastVisitUrl = this.getCacheVisitUrl();\n        const nowPath = n.fullPath;\n        if (lastVisitUrl === nowPath) {\n          return;\n        }\n        this.setCacheVisitUrl(nowPath);\n        this.customPageview(o.fullPath, param);\n      };\n    } catch (e) {\n      this.reportException(\"listenRouter\");\n    }\n  }\n  /**\n   * 上报火山引擎唯一的用户id 登录传id 退出的时候传null或空字符串\n   * @param {*} paramUserUniqueId 要上报的火山用户唯一ID\n   * @returns\n   */\n  setUserUniqueId(paramUserUniqueId) {\n    if (!this.isVolcengine) {\n      return;\n    }\n    try {\n      const userUniqueId = paramUserUniqueId || this.nullProp;\n      this.uniPluginObject.setUserUniqueId(userUniqueId);\n    } catch (e) {\n      this.reportException(\"setUserUniqueId\");\n    }\n  }\n  // 获取uni-app的插件\n  getuniPluginObject() {\n    return this.uniPluginObject;\n  }\n  // 获取项目是否接入了火山SDK\n  getIsVolcengine() {\n    return this.isVolcengine;\n  }\n  /**\n   * 上报接口埋点\n   * @param {Object} param\n   */\n  collectApi(param) {\n    try {\n      const pages = this.getCurrentPagesArr();\n      this.changeCurrentPage(pages);\n      const currentUrl = this.pages[0];\n      const commonAttr = this.getCommonAttr(currentUrl);\n      const apiParam = {\n        api_name: param.apiName,\n        // 接口名称\n        is_success: param.isSuccess,\n        // 是否成功\n        api_time_cost: param.apiTimeCost // 接口请求耗费的时间\n      };\n\n      let finalParam = {\n        ...commonAttr,\n        ...apiParam\n      };\n      delete param.apiName;\n      delete param.isSuccess;\n      delete param.apiTimeCost;\n      finalParam = {\n        ...finalParam,\n        ...param\n      };\n      this.uniPluginObject.onEventV3(\"api_request\", finalParam);\n    } catch (e) {\n      this.reportException(\"collectApi\");\n    }\n  }\n\n  /**\n   *\n   * @param {*} path 路径\n   * @param {*} param 用户自定义的参数\n   */\n  customPageview(path, param) {\n    try {\n      if (!this.volcengineProps[path]) {\n        this.updateRouter(this.routerInfo, this.tarBar);\n      }\n      const lastPageVisitTime = this.getCacheTime();\n      const nowTime = new Date().getTime();\n      this.setCacheTime(nowTime);\n      const commonAttr = this.getCommonAttr(path);\n      const durationParam = {\n        custom_page_duration: nowTime - lastPageVisitTime\n      };\n      const finalParam = {\n        ...commonAttr,\n        ...durationParam,\n        ...param\n      };\n      this.uniPluginObject.onEventV3(\"custom_pageview\", finalParam);\n    } catch (e) {\n      this.reportException(\"customPageview\");\n    }\n  }\n  // 监听初始化进入页面\n  customPageviewOpen(param) {\n    if (!_.isObject(param)) {\n      param = {};\n    }\n    try {\n      // 是否是用vebview打开了H5，如果打开了，则不触发Open\n      const webviewVisible = this.checkWebviewVisible();\n      if (webviewVisible) {\n        return;\n      }\n      const nowTime = new Date().getTime();\n      this.setCacheTime(nowTime); // 重新记录页面停留时间\n      let currentUrl;\n      if (this.pages.length > 0) {\n        currentUrl = this.pages[0];\n      } else {\n        // 获取不到当前页面只能获取上一次访问的\n        currentUrl = this.getCacheVisitUrl();\n      }\n      // 如果没有任何匹配的，那就是首页\n      if (!currentUrl) {\n        currentUrl = \"/\" + this.routerInfo[0].path;\n      }\n      this.setCacheVisitUrl(currentUrl);\n      if (!this.volcengineProps[currentUrl]) {\n        this.updateRouter(this.routerInfo, this.tarBar);\n      }\n      const commonAttr = this.getCommonAttr(currentUrl);\n      const finalParam = {\n        ...commonAttr,\n        ...param\n      };\n      this.uniPluginObject.onEventV3(\"custom_pageview_open\", finalParam);\n    } catch (e) {\n      this.reportException(\"customPageviewOpen\");\n    }\n  }\n  handleWebviewOnHide() {\n    try {\n      // 是否是iOS\n      const isIOS = checkIsIOS(); // iOS终端\n      const nowTime = new Date().getTime();\n      this.setCacheTime(nowTime);\n      if (isIOS) {\n        const webwiewCache = this.getWebviewCache();\n        const lastPageVisitTime = webwiewCache[this.cacheTimeKey] || 0;\n        delete webwiewCache[this.cacheTimeKey];\n        const duration = nowTime - lastPageVisitTime;\n        const durationParam = {\n          custom_page_duration: duration\n        };\n        const param = {\n          ...webwiewCache,\n          ...durationParam\n        };\n        this.uniPluginObject.onEventV3(\"custom_pageview\", param);\n        this.uniPluginObject.onEventV3(\"custom_pagview_hide\", webwiewCache);\n      }\n    } catch (e) {\n      this.reportException(\"handleWebviewOnHide\");\n    }\n  }\n  /**\n   * 监听隐藏页面\n   * @param\n   * @returns\n   */\n  customPageviewHide(param) {\n    try {\n      const isWebviewHide = this.checkWebviewVisible();\n      if (isWebviewHide) {\n        const isIOS = checkIsIOS(); // iOS终端\n        if (isIOS) {\n          this.handleWebviewOnHide();\n        }\n        return;\n      }\n      if (!_.isObject(param)) {\n        param = {};\n      }\n      const pages = this.getCurrentPagesArr();\n      this.changeCurrentPage(pages);\n      let currentUrl = this.getCacheVisitUrl();\n      if (this.pages.length > 0) {\n        currentUrl = this.pages[0];\n      }\n      // 如果没有任何匹配的，那就是首页\n      if (!currentUrl) {\n        currentUrl = \"/\" + this.routerInfo[0].path;\n      }\n      if (!this.volcengineProps[currentUrl]) {\n        this.updateRouter(this.routerInfo, this.tarBar);\n      }\n      const commonAttr = this.getCommonAttr(currentUrl);\n      const finalParam = {\n        ...commonAttr,\n        ...param\n      };\n      this.uniPluginObject.onEventV3(\"custom_pageview_hide\", finalParam);\n      // 上报当前页面的停留时间，然后onShow的时候会重新改写当前页面访问时间\n      this.customPageview(currentUrl, param);\n    } catch (e) {\n      this.reportException(\"customPageviewHide\");\n    }\n  }\n  /**\n   * 用户上报火山自定义事件\n   * @param {*} name 自定义的事件名称\n   * @param {*} param 自定义的事件参数\n   * @returns\n   */\n  reportEvent(name, param) {\n    try {\n      // 防止 自定义 custom_pageview 事件的时候没有执行对应逻辑\n      const oldPath = this.pages && this.pages.length ? this.pages[0] : this.routerInfo[0].path;\n      const pages = this.getCurrentPagesArr();\n      this.changeCurrentPage(pages);\n      const currentUrl = this.pages[0];\n      if (name === \"custom_pageview\") {\n        this.setCacheVisitUrl(oldPath, param);\n      }\n      const commonAttr = this.getCommonAttr(currentUrl);\n      const finalParam = {\n        ...commonAttr,\n        ...param\n      };\n      this.uniPluginObject.onEventV3(name, finalParam);\n    } catch (e) {\n      this.reportException(\"reportEvent\");\n    }\n  }\n  /**\n   * 设置用户属性\n   * @param {*} profileParam 用户属性\n   * @returns\n   */\n  profileSet(profileParam) {\n    try {\n      this.uniPluginObject.profileSet(profileParam);\n    } catch (e) {\n      this.reportException(\"profileSet\");\n    }\n  }\n  sdkVersionProfileSet(param) {\n    try {\n      const sdkVersion = this.getSdkVersion();\n      const finalParam = {\n        ...param,\n        ...sdkVersion\n      };\n      this.profileSet(finalParam);\n    } catch (e) {\n      this.reportException(\"sdkVersionProfileSet\");\n    }\n  }\n  appVersionProfileSet(param) {\n    try {\n      const appVersion = this.getAppVersion();\n      const finalParam = {\n        ...param,\n        ...appVersion\n      };\n      this.profileSet(finalParam);\n    } catch (e) {\n      this.reportException(\"appVersionProfileSet\");\n    }\n  }\n\n  // 判断是否有加载webview 以及 webivew 是否可见\n  checkWebviewVisible() {\n    try {\n      let visible = false;\n      if (plus && plus.webview) {\n        const webviewList = plus.webview.all();\n        if (webviewList && webviewList.length) {\n          visible = webviewList.some(function (current) {\n            const reg = new RegExp(/http[s]?:\\/\\/[\\w.]+[\\w\\/]*[\\w.]*\\??[\\w=&\\+\\%]*/);\n            return reg.test(current.getURL()) && current.isVisible();\n          });\n        }\n      }\n      return visible;\n    } catch (e) {\n      this.reportException(\"checkWebviewVisible\");\n      return false;\n    }\n  }\n\n  /**\n   * 上报异常事件\n   * @param {*} method_name 异常API的名称\n   */\n  reportException(exception_method_name) {\n    try {\n      if (this.uniPluginObject) {\n        const reportInfo = {\n          exception_method_name,\n          exception_type: \"analytics_sdk\",\n          exception_platform: \"app\"\n        };\n        this.uniPluginObject.onEventV3(this.exceptionThrowEventName, reportInfo);\n      }\n    } catch (e) {}\n  }\n}","map":{"version":3,"names":["_","$router","Volcengine","checkIsIOS","UniVolcengine","constructor","params","type","uniPluginObject","routerInfo","UNI_ROUTES","pages","tarBar","list","isVolcengine","hasStarted","start","e","reportException","getCurrentPagesArr","changeCurrentPage","init","isSuccessInit","listenRouter","param","isObject","onchange","n","o","lastVisitUrl","getCacheVisitUrl","nowPath","fullPath","setCacheVisitUrl","customPageview","setUserUniqueId","paramUserUniqueId","userUniqueId","nullProp","getuniPluginObject","getIsVolcengine","collectApi","currentUrl","commonAttr","getCommonAttr","apiParam","api_name","apiName","is_success","isSuccess","api_time_cost","apiTimeCost","finalParam","onEventV3","path","volcengineProps","updateRouter","lastPageVisitTime","getCacheTime","nowTime","Date","getTime","setCacheTime","durationParam","custom_page_duration","customPageviewOpen","webviewVisible","checkWebviewVisible","length","handleWebviewOnHide","isIOS","webwiewCache","getWebviewCache","cacheTimeKey","duration","customPageviewHide","isWebviewHide","reportEvent","name","oldPath","profileSet","profileParam","sdkVersionProfileSet","sdkVersion","getSdkVersion","appVersionProfileSet","appVersion","getAppVersion","visible","plus","webview","webviewList","all","some","current","reg","RegExp","test","getURL","isVisible","exception_method_name","reportInfo","exception_type","exception_platform","exceptionThrowEventName"],"sources":["/Users/myproject/vuedemo/node_modules/@cndinfo/cube-analytics-sdk/uni-app/index.js"],"sourcesContent":["import _ from \"lodash\"\nimport $router from \"../common/uni-router\"\nimport { Volcengine } from \"../common\"\nimport { checkIsIOS } from \"../common/utils/env\"\n\nexport default class UniVolcengine extends Volcengine {\n  constructor(params) {\n    params.type = 0 // 表示是uni-app 端的SDK\n    super(params)\n    try {\n      this.uniPluginObject = params.uniPluginObject\n      this.routerInfo = UNI_ROUTES.pages\n      this.tarBar = UNI_ROUTES.tarBar ? UNI_ROUTES.tarBar.list : []\n      this.isVolcengine = true\n      if (!this.uniPluginObject.hasStarted()) {\n        this.uniPluginObject.start()\n      }\n    } catch (e) {\n      this.isVolcengine = false\n      this.routerInfo = []\n      this.tarBar = []\n      this.reportException(\"constructor\")\n    }\n    const pages = this.getCurrentPagesArr()\n    this.changeCurrentPage(pages)\n  }\n  start() {\n    if (!this.isVolcengine) {\n      return\n    }\n    this.init(this.routerInfo, this.tarBar)\n    if (!this.isSuccessInit) {\n      this.reportException(\"start\")\n    }\n  }\n  // 监听路由变化\n  listenRouter(param) {\n    if (!_.isObject(param)) {\n      param = {}\n    }\n    try {\n      $router.onchange = (n, o) => {\n        if (!this.isVolcengine) {\n          return\n        }\n        const lastVisitUrl = this.getCacheVisitUrl()\n        const nowPath = n.fullPath\n        if (lastVisitUrl === nowPath) {\n          return\n        }\n        this.setCacheVisitUrl(nowPath)\n        this.customPageview(o.fullPath, param)\n      }\n    } catch (e) {\n      this.reportException(\"listenRouter\")\n    }\n  }\n  /**\n   * 上报火山引擎唯一的用户id 登录传id 退出的时候传null或空字符串\n   * @param {*} paramUserUniqueId 要上报的火山用户唯一ID\n   * @returns\n   */\n  setUserUniqueId(paramUserUniqueId) {\n    if (!this.isVolcengine) {\n      return\n    }\n    try {\n      const userUniqueId = paramUserUniqueId || this.nullProp\n      this.uniPluginObject.setUserUniqueId(userUniqueId)\n    } catch (e) {\n      this.reportException(\"setUserUniqueId\")\n    }\n  }\n  // 获取uni-app的插件\n  getuniPluginObject() {\n    return this.uniPluginObject\n  }\n  // 获取项目是否接入了火山SDK\n  getIsVolcengine() {\n    return this.isVolcengine\n  }\n  /**\n   * 上报接口埋点\n   * @param {Object} param\n   */\n  collectApi(param) {\n    try {\n      const pages = this.getCurrentPagesArr()\n      this.changeCurrentPage(pages)\n      const currentUrl = this.pages[0]\n      const commonAttr = this.getCommonAttr(currentUrl)\n      const apiParam = {\n        api_name: param.apiName, // 接口名称\n        is_success: param.isSuccess, // 是否成功\n        api_time_cost: param.apiTimeCost // 接口请求耗费的时间\n      }\n      let finalParam = {\n        ...commonAttr,\n        ...apiParam\n      }\n      delete param.apiName\n      delete param.isSuccess\n      delete param.apiTimeCost\n      finalParam = {\n        ...finalParam,\n        ...param\n      }\n      this.uniPluginObject.onEventV3(\"api_request\", finalParam)\n    } catch (e) {\n      this.reportException(\"collectApi\")\n    }\n  }\n\n  /**\n   *\n   * @param {*} path 路径\n   * @param {*} param 用户自定义的参数\n   */\n  customPageview(path, param) {\n    try {\n      if (!this.volcengineProps[path]) {\n        this.updateRouter(this.routerInfo, this.tarBar)\n      }\n      const lastPageVisitTime = this.getCacheTime()\n      const nowTime = new Date().getTime()\n      this.setCacheTime(nowTime)\n      const commonAttr = this.getCommonAttr(path)\n      const durationParam = {\n        custom_page_duration: nowTime - lastPageVisitTime\n      }\n      const finalParam = {\n        ...commonAttr,\n        ...durationParam,\n        ...param\n      }\n      this.uniPluginObject.onEventV3(\"custom_pageview\", finalParam)\n    } catch (e) {\n      this.reportException(\"customPageview\")\n    }\n  }\n  // 监听初始化进入页面\n  customPageviewOpen(param) {\n    if (!_.isObject(param)) {\n      param = {}\n    }\n    try {\n      // 是否是用vebview打开了H5，如果打开了，则不触发Open\n      const webviewVisible = this.checkWebviewVisible()\n      if (webviewVisible) {\n        return\n      }\n      const nowTime = new Date().getTime()\n      this.setCacheTime(nowTime) // 重新记录页面停留时间\n      let currentUrl\n      if (this.pages.length > 0) {\n        currentUrl = this.pages[0]\n      } else {\n        // 获取不到当前页面只能获取上一次访问的\n        currentUrl = this.getCacheVisitUrl()\n      }\n      // 如果没有任何匹配的，那就是首页\n      if (!currentUrl) {\n        currentUrl = \"/\" + this.routerInfo[0].path\n      }\n      this.setCacheVisitUrl(currentUrl)\n      if (!this.volcengineProps[currentUrl]) {\n        this.updateRouter(this.routerInfo, this.tarBar)\n      }\n\n      const commonAttr = this.getCommonAttr(currentUrl)\n      const finalParam = {\n        ...commonAttr,\n        ...param\n      }\n      this.uniPluginObject.onEventV3(\"custom_pageview_open\", finalParam)\n    } catch (e) {\n      this.reportException(\"customPageviewOpen\")\n    }\n  }\n\n  handleWebviewOnHide() {\n    try {\n      // 是否是iOS\n      const isIOS = checkIsIOS() // iOS终端\n      const nowTime = new Date().getTime()\n      this.setCacheTime(nowTime)\n      if (isIOS) {\n        const webwiewCache = this.getWebviewCache()\n        const lastPageVisitTime = webwiewCache[this.cacheTimeKey] || 0\n        delete webwiewCache[this.cacheTimeKey]\n        const duration = nowTime - lastPageVisitTime\n        const durationParam = {\n          custom_page_duration: duration\n        }\n        const param = {\n          ...webwiewCache,\n          ...durationParam\n        }\n        this.uniPluginObject.onEventV3(\"custom_pageview\", param)\n        this.uniPluginObject.onEventV3(\"custom_pagview_hide\", webwiewCache)\n      }\n    } catch (e) {\n      this.reportException(\"handleWebviewOnHide\")\n    }\n  }\n  /**\n   * 监听隐藏页面\n   * @param\n   * @returns\n   */\n  customPageviewHide(param) {\n    try {\n      const isWebviewHide = this.checkWebviewVisible()\n      if (isWebviewHide) {\n        const isIOS = checkIsIOS() // iOS终端\n        if (isIOS) {\n          this.handleWebviewOnHide()\n        }\n        return\n      }\n      if (!_.isObject(param)) {\n        param = {}\n      }\n      const pages = this.getCurrentPagesArr()\n      this.changeCurrentPage(pages)\n      let currentUrl = this.getCacheVisitUrl()\n      if (this.pages.length > 0) {\n        currentUrl = this.pages[0]\n      }\n      // 如果没有任何匹配的，那就是首页\n      if (!currentUrl) {\n        currentUrl = \"/\" + this.routerInfo[0].path\n      }\n\n      if (!this.volcengineProps[currentUrl]) {\n        this.updateRouter(this.routerInfo, this.tarBar)\n      }\n      const commonAttr = this.getCommonAttr(currentUrl)\n      const finalParam = {\n        ...commonAttr,\n        ...param\n      }\n      this.uniPluginObject.onEventV3(\"custom_pageview_hide\", finalParam)\n      // 上报当前页面的停留时间，然后onShow的时候会重新改写当前页面访问时间\n      this.customPageview(currentUrl, param)\n    } catch (e) {\n      this.reportException(\"customPageviewHide\")\n    }\n  }\n  /**\n   * 用户上报火山自定义事件\n   * @param {*} name 自定义的事件名称\n   * @param {*} param 自定义的事件参数\n   * @returns\n   */\n  reportEvent(name, param) {\n    try {\n      // 防止 自定义 custom_pageview 事件的时候没有执行对应逻辑\n      const oldPath =\n        this.pages && this.pages.length\n          ? this.pages[0]\n          : this.routerInfo[0].path\n      const pages = this.getCurrentPagesArr()\n      this.changeCurrentPage(pages)\n      const currentUrl = this.pages[0]\n      if (name === \"custom_pageview\") {\n        this.setCacheVisitUrl(oldPath, param)\n      }\n      const commonAttr = this.getCommonAttr(currentUrl)\n      const finalParam = {\n        ...commonAttr,\n        ...param\n      }\n      this.uniPluginObject.onEventV3(name, finalParam)\n    } catch (e) {\n      this.reportException(\"reportEvent\")\n    }\n  }\n  /**\n   * 设置用户属性\n   * @param {*} profileParam 用户属性\n   * @returns\n   */\n  profileSet(profileParam) {\n    try {\n      this.uniPluginObject.profileSet(profileParam)\n    } catch (e) {\n      this.reportException(\"profileSet\")\n    }\n  }\n  sdkVersionProfileSet(param) {\n    try {\n      const sdkVersion = this.getSdkVersion()\n      const finalParam = {\n        ...param,\n        ...sdkVersion\n      }\n      this.profileSet(finalParam)\n    } catch (e) {\n      this.reportException(\"sdkVersionProfileSet\")\n    }\n  }\n\n  appVersionProfileSet(param) {\n    try {\n      const appVersion = this.getAppVersion()\n      const finalParam = {\n        ...param,\n        ...appVersion\n      }\n      this.profileSet(finalParam)\n    } catch (e) {\n      this.reportException(\"appVersionProfileSet\")\n    }\n  }\n\n  // 判断是否有加载webview 以及 webivew 是否可见\n  checkWebviewVisible() {\n    try {\n      let visible = false\n      if (plus && plus.webview) {\n        const webviewList = plus.webview.all()\n        if (webviewList && webviewList.length) {\n          visible = webviewList.some(function(current) {\n            const reg = new RegExp(\n              /http[s]?:\\/\\/[\\w.]+[\\w\\/]*[\\w.]*\\??[\\w=&\\+\\%]*/\n            )\n            return reg.test(current.getURL()) && current.isVisible()\n          })\n        }\n      }\n      return visible\n    } catch (e) {\n      this.reportException(\"checkWebviewVisible\")\n      return false\n    }\n  }\n\n  /**\n   * 上报异常事件\n   * @param {*} method_name 异常API的名称\n   */\n  reportException(exception_method_name) {\n    try {\n      if (this.uniPluginObject) {\n        const reportInfo = {\n          exception_method_name,\n          exception_type: \"analytics_sdk\",\n          exception_platform: \"app\"\n        }\n        this.uniPluginObject.onEventV3(this.exceptionThrowEventName, reportInfo)\n      }\n    } catch (e) {}\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}