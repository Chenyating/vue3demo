{"ast":null,"code":"import { defineStore, createPinia } from 'pinia';\n\n// 创建一个 Pinia store\nconst pinia = createPinia();\nexport const cubeCacheStore = defineStore('cubeCache', {\n  state: () => ({\n    cacheData: {} // 用于存储缓存数据\n  }),\n\n  actions: {\n    // 生成唯一缓存key\n    getCacheKey() {\n      // 返回一个唯一的缓存key，你可以使用更复杂的逻辑生成\n      return Math.random().toString(36).substring(7);\n    },\n    set(cacheKey, cacheInfo, time = 0) {\n      if (!this.cacheData[cacheKey]) {\n        this.cacheData[cacheKey] = {};\n      }\n\n      // 判断是否存在差异，如果存在则存储为最新版本\n      const lastVersion = this.cacheData[cacheKey].latestVersion;\n      if (!lastVersion || JSON.stringify(lastVersion.data) !== JSON.stringify(cacheInfo)) {\n        this.cacheData[cacheKey][`version${lastVersion ? lastVersion.number + 1 : 0}`] = {\n          data: cacheInfo,\n          timestamp: Date.now()\n        };\n        this.cacheData[cacheKey].latestVersion = {\n          data: cacheInfo,\n          number: lastVersion ? lastVersion.number + 1 : 0\n        };\n\n        // 自动缓存\n        if (time > 0) {\n          const autoSaveTimer = setInterval(() => {\n            this.set(cacheKey, cacheInfo);\n          }, time);\n\n          // 取消自动缓存\n          this.cacheData[cacheKey].autoSaveTimer = autoSaveTimer;\n        }\n      }\n    },\n    autoSave(cacheKey, time = 0) {\n      if (time > 0) {\n        // Schedule an auto-save with a time delay\n        setTimeout(() => {\n          this.set(cacheKey, this.caches[cacheKey].data);\n          this.autoSave(cacheKey, time);\n        }, time);\n      }\n    },\n    cancelAutoSave(cacheKey) {\n      // Cancel auto-save for a cache\n      clearTimeout(this.caches[cacheKey].timer);\n      this.caches[cacheKey].timer = null;\n    },\n    clear(cacheKey) {\n      if (this.caches[cacheKey]) {\n        delete this.caches[cacheKey];\n      }\n    },\n    getAllCaches() {\n      return this.getAllCaches;\n    }\n  }\n});","map":{"version":3,"names":["defineStore","createPinia","pinia","cubeCacheStore","state","cacheData","actions","getCacheKey","Math","random","toString","substring","set","cacheKey","cacheInfo","time","lastVersion","latestVersion","JSON","stringify","data","number","timestamp","Date","now","autoSaveTimer","setInterval","autoSave","setTimeout","caches","cancelAutoSave","clearTimeout","timer","clear","getAllCaches"],"sources":["/Users/myproject/vuedemo/src/store/index.js"],"sourcesContent":["import { defineStore, createPinia } from 'pinia';\n\n// 创建一个 Pinia store\nconst pinia = createPinia();\n\nexport const cubeCacheStore = defineStore('cubeCache', {\n  state: () => ({\n    cacheData: {}, // 用于存储缓存数据\n  }),\n\n  actions: {\n    // 生成唯一缓存key\n    getCacheKey() {\n      // 返回一个唯一的缓存key，你可以使用更复杂的逻辑生成\n      return Math.random().toString(36).substring(7);\n    },\n    set(cacheKey, cacheInfo, time = 0) {\n      if (!this.cacheData[cacheKey]) {\n        this.cacheData[cacheKey] = {};\n      }\n\n      // 判断是否存在差异，如果存在则存储为最新版本\n      const lastVersion = this.cacheData[cacheKey].latestVersion;\n      if (!lastVersion || JSON.stringify(lastVersion.data) !== JSON.stringify(cacheInfo)) {\n        this.cacheData[cacheKey][`version${lastVersion ? lastVersion.number + 1 : 0}`] = {\n          data: cacheInfo,\n          timestamp: Date.now(),\n        };\n        this.cacheData[cacheKey].latestVersion = {\n          data: cacheInfo,\n          number: lastVersion ? lastVersion.number + 1 : 0,\n        };\n\n        // 自动缓存\n        if (time > 0) {\n          const autoSaveTimer = setInterval(() => {\n            this.set(cacheKey, cacheInfo);\n          }, time);\n\n          // 取消自动缓存\n          this.cacheData[cacheKey].autoSaveTimer = autoSaveTimer;\n        }\n      }\n    },\n    autoSave(cacheKey, time = 0) {\n      if (time > 0) {\n        // Schedule an auto-save with a time delay\n        setTimeout(() => {\n          this.set(cacheKey, this.caches[cacheKey].data);\n          this.autoSave(cacheKey, time);\n        }, time);\n      }\n    },\n    cancelAutoSave(cacheKey) {\n      // Cancel auto-save for a cache\n      clearTimeout(this.caches[cacheKey].timer);\n      this.caches[cacheKey].timer = null;\n    },\n    clear(cacheKey) {\n      if (this.caches[cacheKey]) {\n        delete this.caches[cacheKey];\n      }\n    },\n    getAllCaches() {\n      return this.getAllCaches;\n    },\n  },\n});\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,OAAO;;AAEhD;AACA,MAAMC,KAAK,GAAGD,WAAW,CAAC,CAAC;AAE3B,OAAO,MAAME,cAAc,GAAGH,WAAW,CAAC,WAAW,EAAE;EACrDI,KAAK,EAAEA,CAAA,MAAO;IACZC,SAAS,EAAE,CAAC,CAAC,CAAE;EACjB,CAAC,CAAC;;EAEFC,OAAO,EAAE;IACP;IACAC,WAAWA,CAAA,EAAG;MACZ;MACA,OAAOC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,CAAC;IAChD,CAAC;IACDC,GAAGA,CAACC,QAAQ,EAAEC,SAAS,EAAEC,IAAI,GAAG,CAAC,EAAE;MACjC,IAAI,CAAC,IAAI,CAACV,SAAS,CAACQ,QAAQ,CAAC,EAAE;QAC7B,IAAI,CAACR,SAAS,CAACQ,QAAQ,CAAC,GAAG,CAAC,CAAC;MAC/B;;MAEA;MACA,MAAMG,WAAW,GAAG,IAAI,CAACX,SAAS,CAACQ,QAAQ,CAAC,CAACI,aAAa;MAC1D,IAAI,CAACD,WAAW,IAAIE,IAAI,CAACC,SAAS,CAACH,WAAW,CAACI,IAAI,CAAC,KAAKF,IAAI,CAACC,SAAS,CAACL,SAAS,CAAC,EAAE;QAClF,IAAI,CAACT,SAAS,CAACQ,QAAQ,CAAC,CAAE,UAASG,WAAW,GAAGA,WAAW,CAACK,MAAM,GAAG,CAAC,GAAG,CAAE,EAAC,CAAC,GAAG;UAC/ED,IAAI,EAAEN,SAAS;UACfQ,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC;QACtB,CAAC;QACD,IAAI,CAACnB,SAAS,CAACQ,QAAQ,CAAC,CAACI,aAAa,GAAG;UACvCG,IAAI,EAAEN,SAAS;UACfO,MAAM,EAAEL,WAAW,GAAGA,WAAW,CAACK,MAAM,GAAG,CAAC,GAAG;QACjD,CAAC;;QAED;QACA,IAAIN,IAAI,GAAG,CAAC,EAAE;UACZ,MAAMU,aAAa,GAAGC,WAAW,CAAC,MAAM;YACtC,IAAI,CAACd,GAAG,CAACC,QAAQ,EAAEC,SAAS,CAAC;UAC/B,CAAC,EAAEC,IAAI,CAAC;;UAER;UACA,IAAI,CAACV,SAAS,CAACQ,QAAQ,CAAC,CAACY,aAAa,GAAGA,aAAa;QACxD;MACF;IACF,CAAC;IACDE,QAAQA,CAACd,QAAQ,EAAEE,IAAI,GAAG,CAAC,EAAE;MAC3B,IAAIA,IAAI,GAAG,CAAC,EAAE;QACZ;QACAa,UAAU,CAAC,MAAM;UACf,IAAI,CAAChB,GAAG,CAACC,QAAQ,EAAE,IAAI,CAACgB,MAAM,CAAChB,QAAQ,CAAC,CAACO,IAAI,CAAC;UAC9C,IAAI,CAACO,QAAQ,CAACd,QAAQ,EAAEE,IAAI,CAAC;QAC/B,CAAC,EAAEA,IAAI,CAAC;MACV;IACF,CAAC;IACDe,cAAcA,CAACjB,QAAQ,EAAE;MACvB;MACAkB,YAAY,CAAC,IAAI,CAACF,MAAM,CAAChB,QAAQ,CAAC,CAACmB,KAAK,CAAC;MACzC,IAAI,CAACH,MAAM,CAAChB,QAAQ,CAAC,CAACmB,KAAK,GAAG,IAAI;IACpC,CAAC;IACDC,KAAKA,CAACpB,QAAQ,EAAE;MACd,IAAI,IAAI,CAACgB,MAAM,CAAChB,QAAQ,CAAC,EAAE;QACzB,OAAO,IAAI,CAACgB,MAAM,CAAChB,QAAQ,CAAC;MAC9B;IACF,CAAC;IACDqB,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACA,YAAY;IAC1B;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}