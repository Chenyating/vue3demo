{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useStore } from 'pinia';\nimport { cubeCacheStore } from './store/index.js';\nexport default {\n  data() {\n    return {\n      editableTabsValue: '',\n      editableTabs: [],\n      cubeCache: cubeCacheStore()\n    };\n  },\n  computed: {\n    allCache() {\n      return cubeCache.getAll();\n    }\n  },\n  methods: {\n    goEdit(tab) {\n      this.editableTabsValue = tab.name;\n      this.$router.push({\n        path: `/edit?cacheKey=${tab.name}`\n      }); // 更新路由\n    },\n\n    handleTabsEdit(targetName, action) {\n      if (action === 'add') {\n        var cacheKey = this.cubeCache.getCacheKey();\n        this.editableTabs.push({\n          title: '编辑',\n          name: cacheKey,\n          content: '编辑',\n          cacheKey: cacheKey\n        });\n        this.editableTabsValue = cacheKey;\n        this.$router.push({\n          path: `/edit?cacheKey=${cacheKey}`\n        }); // 更新路由\n        localStorage.setItem('editableTabs', JSON.stringify(this.editableTabs));\n      }\n      if (action === 'remove') {\n        this.editableTabs = this.editableTabs.filter(item => item.name !== targetName);\n        localStorage.setItem('editableTabs', JSON.stringify(this.editableTabs));\n      }\n    }\n  },\n  mounted() {\n    var list = localStorage.getItem('editableTabs');\n    if (list != null) {\n      this.editableTabs = JSON.parse(list);\n    } else {\n      this.editableTabs = [];\n    }\n  }\n};","map":{"version":3,"names":["useStore","cubeCacheStore","data","editableTabsValue","editableTabs","cubeCache","computed","allCache","getAll","methods","goEdit","tab","name","$router","push","path","handleTabsEdit","targetName","action","cacheKey","getCacheKey","title","content","localStorage","setItem","JSON","stringify","filter","item","mounted","list","getItem","parse"],"sources":["src/App.vue"],"sourcesContent":["<template>\n  <div>\n    {{ editableTabsValue }}\n    <br />缓存数据：<br />\n    <el-tag v-for=\"(item, index) in editableTabs\" type=\"success\">{{ item.name }}</el-tag>\n    <br />缓存信息：<br />\n    {{ cubeCache.getAll() }}\n    <br />路由示例图：<br />\n    <el-tabs\n      v-model=\"editableTabsValue\"\n      type=\"card\"\n      @tab-click=\"goEdit\"\n      editable\n      @edit=\"handleTabsEdit\"\n    >\n      <el-tab-pane\n        :disabled=\"editableTabsValue == item.name\"\n        :key=\"item.name\"\n        v-for=\"(item, index) in editableTabs\"\n        :label=\"item.title + item.name\"\n        :name=\"item.name\"\n        :id=\"`tab-${item.cacheKey}`\"\n      >\n        {{ item.cacheKey }}\n        <router-view />\n      </el-tab-pane>\n    </el-tabs>\n  </div>\n</template>\n\n<script>\nimport { useStore } from 'pinia';\nimport { cubeCacheStore } from './store/index.js';\n\nexport default {\n  data() {\n    return {\n      editableTabsValue: '',\n      editableTabs: [],\n      cubeCache:cubeCacheStore()\n    };\n  },\n  computed:{\n    allCache(){\n      return cubeCache.getAll()\n    }\n  },\n  methods: {\n    goEdit(tab) {\n      this.editableTabsValue = tab.name\n      this.$router.push({ path: `/edit?cacheKey=${tab.name}` }) // 更新路由\n    },\n    handleTabsEdit(targetName, action) {\n      if (action === 'add') {\n        var cacheKey = this.cubeCache.getCacheKey()\n        this.editableTabs.push({\n          title: '编辑',\n          name: cacheKey,\n          content: '编辑',\n          cacheKey: cacheKey,\n        })\n        this.editableTabsValue = cacheKey\n        this.$router.push({ path: `/edit?cacheKey=${cacheKey}` }) // 更新路由\n        localStorage.setItem('editableTabs', JSON.stringify(this.editableTabs))\n      }\n      if (action === 'remove') {\n        this.editableTabs = this.editableTabs.filter(\n          (item) => item.name !== targetName\n        )\n        localStorage.setItem('editableTabs', JSON.stringify(this.editableTabs))\n      }\n    },\n  },\n  mounted() {\n    var list = localStorage.getItem('editableTabs');\n    if (list != null) {\n      this.editableTabs = JSON.parse(list);\n    } else {\n      this.editableTabs = [];\n    }\n  },\n};\n</script>"],"mappings":";AA+BA,SAAAA,QAAA;AACA,SAAAC,cAAA;AAEA;EACAC,KAAA;IACA;MACAC,iBAAA;MACAC,YAAA;MACAC,SAAA,EAAAJ,cAAA;IACA;EACA;EACAK,QAAA;IACAC,SAAA;MACA,OAAAF,SAAA,CAAAG,MAAA;IACA;EACA;EACAC,OAAA;IACAC,OAAAC,GAAA;MACA,KAAAR,iBAAA,GAAAQ,GAAA,CAAAC,IAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;QAAAC,IAAA,oBAAAJ,GAAA,CAAAC,IAAA;MAAA;IACA;;IACAI,eAAAC,UAAA,EAAAC,MAAA;MACA,IAAAA,MAAA;QACA,IAAAC,QAAA,QAAAd,SAAA,CAAAe,WAAA;QACA,KAAAhB,YAAA,CAAAU,IAAA;UACAO,KAAA;UACAT,IAAA,EAAAO,QAAA;UACAG,OAAA;UACAH,QAAA,EAAAA;QACA;QACA,KAAAhB,iBAAA,GAAAgB,QAAA;QACA,KAAAN,OAAA,CAAAC,IAAA;UAAAC,IAAA,oBAAAI,QAAA;QAAA;QACAI,YAAA,CAAAC,OAAA,iBAAAC,IAAA,CAAAC,SAAA,MAAAtB,YAAA;MACA;MACA,IAAAc,MAAA;QACA,KAAAd,YAAA,QAAAA,YAAA,CAAAuB,MAAA,CACAC,IAAA,IAAAA,IAAA,CAAAhB,IAAA,KAAAK,UACA;QACAM,YAAA,CAAAC,OAAA,iBAAAC,IAAA,CAAAC,SAAA,MAAAtB,YAAA;MACA;IACA;EACA;EACAyB,QAAA;IACA,IAAAC,IAAA,GAAAP,YAAA,CAAAQ,OAAA;IACA,IAAAD,IAAA;MACA,KAAA1B,YAAA,GAAAqB,IAAA,CAAAO,KAAA,CAAAF,IAAA;IACA;MACA,KAAA1B,YAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}