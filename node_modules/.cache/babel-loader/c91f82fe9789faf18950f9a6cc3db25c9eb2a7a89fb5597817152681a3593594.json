{"ast":null,"code":"export default {\n  name: 'AgGridSelect',\n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n    queryMethod: {\n      type: Function,\n      default: null\n    },\n    remoteMethod: {\n      type: Function,\n      default: null\n    },\n    remote: {\n      type: Boolean,\n      default: false\n    },\n    multipleLimit: {\n      type: Number,\n      default: 0\n    },\n    filterable: {\n      type: Boolean,\n      default: false\n    },\n    filterMethod: {\n      type: Function,\n      default: null\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    autoFocus: {\n      type: Boolean,\n      default: false\n    },\n    clearable: {\n      type: Boolean,\n      default: true\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    },\n    size: {\n      type: String,\n      default: 'mini'\n    },\n    config: {\n      type: Object,\n      default: () => {\n        return {\n          label: 'sCodeName',\n          value: 'sCodeValue'\n        };\n      }\n    },\n    searchLimit: {\n      type: Number,\n      default: 4\n    },\n    options: {\n      type: Array,\n      default: () => {\n        return [];\n      }\n    },\n    // 当前行数据（ag-grid中使用必须有）\n    params: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    },\n    // 组件唯一标识\n    mark: {\n      type: String,\n      default: ''\n    },\n    // 默认选项\n    defaultOption: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      // options: []\n      tempV: '',\n      defaultConfig: {\n        label: 'sCodeName',\n        value: 'sCodeValue'\n      }\n    };\n  },\n  computed: {\n    isPlaceholder() {\n      return this.placeholder || this.$t('components.pleaseSelect');\n    },\n    optionConfig() {\n      Object.assign(this.defaultConfig, this.config);\n      return this.defaultConfig;\n    },\n    optionsComputed() {\n      // console.log('拿到的options--', this.options)\n      if (this.options && this.options.length > 0) return this.options;\n      return [];\n      // const { options } = this.params.colDef.filterList()\n      // this.options = options\n    },\n\n    reserveKeyword() {\n      return this.multiple;\n    }\n  },\n  watch: {\n    tempV(newVal) {\n      if (!newVal) {\n        this.getOptions(null);\n      }\n    }\n  },\n  created() {\n    // 返回当前组件指向\n    // console.log('this.queryMethod--', this.queryMethod)\n    this.mark && this.$emit('getComponent', this);\n    this.queryMethod && this.queryMethod(this.params).then(options => {\n      // console.log('options--', options)\n      // eslint-disable-next-line vue/no-mutating-props\n      this.options = options;\n      // 设置当前选项\n      const curOption = this.value || this.params.value || this.defaultOption;\n      curOption && this.options.forEach(item => {\n        // 当前为key/value情况\n        if (item[this.optionConfig.value] === curOption || item[this.optionConfig.label] === curOption) {\n          // this.tempV = item[this.optionConfig.label]\n          this.$nextTick(() => {\n            this.tempV = item[this.optionConfig.value];\n            this.change(item[this.optionConfig.value], 'init');\n          });\n        }\n      });\n    });\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.autoFocus && this.focus();\n    });\n  },\n  // 销毁前触发失焦事件--解决ag-grid编辑状态回车计算问题\n  beforeDestroy() {\n    const pseudoEvent = {\n      mark: 'pseudoEvent',\n      target: {\n        value: this.value\n      }\n    };\n    this.blurAction(pseudoEvent);\n  },\n  methods: {\n    // 设置值方法\n    setValue(value) {\n      this.tempV = value;\n      this.change(this.tempV);\n    },\n    // 重置方法\n    reset() {\n      this.tempV = '';\n      this.change(this.tempV);\n    },\n    // 选择器聚焦方法\n    focus() {\n      // console.log('this.$refs.agSelect--', this.$refs.agSelect)\n      this.$refs.agSelect.$el.children[0].children[0].focus();\n    },\n    // 聚焦事件触发\n    focusAction(e) {\n      this.$emit('focus', e);\n    },\n    // 失焦事件触发\n    blurAction(e) {\n      this.$emit('blur', e);\n    },\n    change(v, type) {\n      console.log('change事件--', v);\n      let curOption = '';\n      if (this.multiple) {\n        const obj = {};\n        v.forEach(item => {\n          obj[item] = true;\n        });\n        curOption = this.options.filter(item => {\n          const key = this.optionConfig.value ? this.optionConfig.value : this.optionConfig.label;\n          return obj[item[key]];\n        });\n      } else {\n        curOption = this.options.find(item => {\n          const key = this.optionConfig.value ? this.optionConfig.value : this.optionConfig.label;\n          return item[key] === v;\n        });\n      }\n      console.log('curOption--', curOption);\n      this.$emit('getVal', v); // （ag-grid中使用必须有）\n      this.$emit('getOption', curOption, type); // （返回整个对象，部分场景需要其他值）\n    },\n\n    getOptions(value) {\n      if (this.remote && this.remoteMethod) {\n        if (this.searchLimit !== 0 || value && value.length < this.searchLimit) {\n          return;\n        }\n        this.remoteMethod(value, this.params).then(options => {\n          // eslint-disable-next-line vue/no-mutating-props\n          this.options = options;\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","props","value","type","String","default","queryMethod","Function","remoteMethod","remote","Boolean","multipleLimit","Number","filterable","filterMethod","disabled","multiple","autoFocus","clearable","placeholder","size","config","Object","label","searchLimit","options","Array","params","mark","defaultOption","data","tempV","defaultConfig","computed","isPlaceholder","$t","optionConfig","assign","optionsComputed","length","reserveKeyword","watch","newVal","getOptions","created","$emit","then","curOption","forEach","item","$nextTick","change","mounted","focus","beforeDestroy","pseudoEvent","target","blurAction","methods","setValue","reset","$refs","agSelect","$el","children","focusAction","e","v","console","log","obj","filter","key","find"],"sources":["node_modules/@cndinfo/cube-design-web/src/components/ForGridComponents/AgGridSelect.vue"],"sourcesContent":["<template>\n  <div>\n    <el-select\n      ref=\"agSelect\"\n      v-model=\"tempV\"\n      :size=\"size\"\n      :clearable=\"clearable\"\n      :placeholder=\"isPlaceholder\"\n      :multiple=\"multiple\"\n      :reserve-keyword=\"reserveKeyword\"\n      :disabled=\"disabled\"\n      :filter-method=\"filterMethod\"\n      :filterable=\"filterable\"\n      :remote=\"remote\"\n      :remote-method=\"getOptions\"\n      :multiple-limit=\"multipleLimit\"\n      @change=\"change\"\n      @focus=\"focusAction\"\n      @blur=\"blurAction\"\n    >\n      <el-option\n        v-for=\"item in optionsComputed\"\n        :key=\"item[optionConfig.value]\"\n        :disabled=\"item.disabled\"\n        :label=\"item[optionConfig.label]\"\n        :value=\"optionConfig.value ? item[optionConfig.value] : item[optionConfig.label]\"\n      />\n    </el-select>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'AgGridSelect',\n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n    queryMethod: {\n      type: Function,\n      default: null\n    },\n    remoteMethod: {\n      type: Function,\n      default: null\n    },\n    remote: {\n      type: Boolean,\n      default: false\n    },\n    multipleLimit: {\n      type: Number,\n      default: 0\n    },\n    filterable: {\n      type: Boolean,\n      default: false\n    },\n    filterMethod: {\n      type: Function,\n      default: null\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    autoFocus: {\n      type: Boolean,\n      default: false\n    },\n    clearable: {\n      type: Boolean,\n      default: true\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    },\n    size: {\n      type: String,\n      default: 'mini'\n    },\n    config: {\n      type: Object,\n      default: () => {\n        return {\n          label: 'sCodeName',\n          value: 'sCodeValue'\n        }\n      }\n    },\n    searchLimit: {\n      type: Number,\n      default: 4\n    },\n    options: {\n      type: Array,\n      default: () => {\n        return []\n      }\n    },\n    // 当前行数据（ag-grid中使用必须有）\n    params: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    // 组件唯一标识\n    mark: {\n      type: String,\n      default: ''\n    },\n    // 默认选项\n    defaultOption: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      // options: []\n      tempV: '',\n      defaultConfig: {\n        label: 'sCodeName',\n        value: 'sCodeValue'\n      }\n    }\n  },\n  computed: {\n    isPlaceholder() {\n      return this.placeholder || this.$t('components.pleaseSelect')\n    },\n    optionConfig() {\n      Object.assign(this.defaultConfig, this.config)\n      return this.defaultConfig\n    },\n    optionsComputed() {\n      // console.log('拿到的options--', this.options)\n      if (this.options && this.options.length > 0) return this.options\n      return []\n      // const { options } = this.params.colDef.filterList()\n      // this.options = options\n    },\n    reserveKeyword() {\n      return this.multiple\n    }\n  },\n  watch: {\n    tempV(newVal) {\n      if (!newVal) {\n        this.getOptions(null)\n      }\n    }\n  },\n  created() {\n    // 返回当前组件指向\n    // console.log('this.queryMethod--', this.queryMethod)\n    this.mark && this.$emit('getComponent', this)\n    this.queryMethod && this.queryMethod(this.params).then(options => {\n      // console.log('options--', options)\n      // eslint-disable-next-line vue/no-mutating-props\n      this.options = options\n      // 设置当前选项\n      const curOption = this.value || this.params.value || this.defaultOption\n      curOption && this.options.forEach(item => {\n        // 当前为key/value情况\n        if (item[this.optionConfig.value] === curOption || item[this.optionConfig.label] === curOption) {\n          // this.tempV = item[this.optionConfig.label]\n          this.$nextTick(() => {\n            this.tempV = item[this.optionConfig.value]\n            this.change(item[this.optionConfig.value], 'init')\n          })\n        }\n      })\n    })\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.autoFocus && this.focus()\n    })\n  },\n  // 销毁前触发失焦事件--解决ag-grid编辑状态回车计算问题\n  beforeDestroy() {\n    const pseudoEvent = {\n      mark: 'pseudoEvent',\n      target: {\n        value: this.value\n      }\n    }\n    this.blurAction(pseudoEvent)\n  },\n  methods: {\n    // 设置值方法\n    setValue(value) {\n      this.tempV = value\n      this.change(this.tempV)\n    },\n    // 重置方法\n    reset() {\n      this.tempV = ''\n      this.change(this.tempV)\n    },\n    // 选择器聚焦方法\n    focus() {\n      // console.log('this.$refs.agSelect--', this.$refs.agSelect)\n      this.$refs.agSelect.$el.children[0].children[0].focus()\n    },\n    // 聚焦事件触发\n    focusAction(e) {\n      this.$emit('focus', e)\n    },\n    // 失焦事件触发\n    blurAction(e) {\n      this.$emit('blur', e)\n    },\n    change(v, type) {\n      console.log('change事件--', v)\n      let curOption = ''\n      if (this.multiple) {\n        const obj = {}\n        v.forEach(item => {\n          obj[item] = true\n        })\n        curOption = this.options.filter(item => {\n          const key = this.optionConfig.value ? this.optionConfig.value : this.optionConfig.label\n          return obj[item[key]]\n        })\n      } else {\n        curOption = this.options.find(item => {\n          const key = this.optionConfig.value ? this.optionConfig.value : this.optionConfig.label\n          return item[key] === v\n        })\n      }\n      console.log('curOption--', curOption)\n      this.$emit('getVal', v) // （ag-grid中使用必须有）\n      this.$emit('getOption', curOption, type) // （返回整个对象，部分场景需要其他值）\n    },\n    getOptions(value) {\n      if (this.remote && this.remoteMethod) {\n        if (this.searchLimit !== 0 || (value && value.length < this.searchLimit)) {\n          return\n        }\n        this.remoteMethod(value, this.params).then(options => {\n          // eslint-disable-next-line vue/no-mutating-props\n          this.options = options\n        })\n      }\n    }\n  }\n}\n</script>\n"],"mappings":"AAgCA;EACAA,IAAA;EACAC,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAC,WAAA;MACAH,IAAA,EAAAI,QAAA;MACAF,OAAA;IACA;IACAG,YAAA;MACAL,IAAA,EAAAI,QAAA;MACAF,OAAA;IACA;IACAI,MAAA;MACAN,IAAA,EAAAO,OAAA;MACAL,OAAA;IACA;IACAM,aAAA;MACAR,IAAA,EAAAS,MAAA;MACAP,OAAA;IACA;IACAQ,UAAA;MACAV,IAAA,EAAAO,OAAA;MACAL,OAAA;IACA;IACAS,YAAA;MACAX,IAAA,EAAAI,QAAA;MACAF,OAAA;IACA;IACAU,QAAA;MACAZ,IAAA,EAAAO,OAAA;MACAL,OAAA;IACA;IACAW,QAAA;MACAb,IAAA,EAAAO,OAAA;MACAL,OAAA;IACA;IACAY,SAAA;MACAd,IAAA,EAAAO,OAAA;MACAL,OAAA;IACA;IACAa,SAAA;MACAf,IAAA,EAAAO,OAAA;MACAL,OAAA;IACA;IACAc,WAAA;MACAhB,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAe,IAAA;MACAjB,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAgB,MAAA;MACAlB,IAAA,EAAAmB,MAAA;MACAjB,OAAA,EAAAA,CAAA;QACA;UACAkB,KAAA;UACArB,KAAA;QACA;MACA;IACA;IACAsB,WAAA;MACArB,IAAA,EAAAS,MAAA;MACAP,OAAA;IACA;IACAoB,OAAA;MACAtB,IAAA,EAAAuB,KAAA;MACArB,OAAA,EAAAA,CAAA;QACA;MACA;IACA;IACA;IACAsB,MAAA;MACAxB,IAAA,EAAAmB,MAAA;MACAjB,OAAA,EAAAA,CAAA;QACA;MACA;IACA;IACA;IACAuB,IAAA;MACAzB,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACA;IACAwB,aAAA;MACA1B,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;EACA;EACAyB,KAAA;IACA;MACA;MACAC,KAAA;MACAC,aAAA;QACAT,KAAA;QACArB,KAAA;MACA;IACA;EACA;EACA+B,QAAA;IACAC,cAAA;MACA,YAAAf,WAAA,SAAAgB,EAAA;IACA;IACAC,aAAA;MACAd,MAAA,CAAAe,MAAA,MAAAL,aAAA,OAAAX,MAAA;MACA,YAAAW,aAAA;IACA;IACAM,gBAAA;MACA;MACA,SAAAb,OAAA,SAAAA,OAAA,CAAAc,MAAA,kBAAAd,OAAA;MACA;MACA;MACA;IACA;;IACAe,eAAA;MACA,YAAAxB,QAAA;IACA;EACA;EACAyB,KAAA;IACAV,MAAAW,MAAA;MACA,KAAAA,MAAA;QACA,KAAAC,UAAA;MACA;IACA;EACA;EACAC,QAAA;IACA;IACA;IACA,KAAAhB,IAAA,SAAAiB,KAAA;IACA,KAAAvC,WAAA,SAAAA,WAAA,MAAAqB,MAAA,EAAAmB,IAAA,CAAArB,OAAA;MACA;MACA;MACA,KAAAA,OAAA,GAAAA,OAAA;MACA;MACA,MAAAsB,SAAA,QAAA7C,KAAA,SAAAyB,MAAA,CAAAzB,KAAA,SAAA2B,aAAA;MACAkB,SAAA,SAAAtB,OAAA,CAAAuB,OAAA,CAAAC,IAAA;QACA;QACA,IAAAA,IAAA,MAAAb,YAAA,CAAAlC,KAAA,MAAA6C,SAAA,IAAAE,IAAA,MAAAb,YAAA,CAAAb,KAAA,MAAAwB,SAAA;UACA;UACA,KAAAG,SAAA;YACA,KAAAnB,KAAA,GAAAkB,IAAA,MAAAb,YAAA,CAAAlC,KAAA;YACA,KAAAiD,MAAA,CAAAF,IAAA,MAAAb,YAAA,CAAAlC,KAAA;UACA;QACA;MACA;IACA;EACA;EACAkD,QAAA;IACA,KAAAF,SAAA;MACA,KAAAjC,SAAA,SAAAoC,KAAA;IACA;EACA;EACA;EACAC,cAAA;IACA,MAAAC,WAAA;MACA3B,IAAA;MACA4B,MAAA;QACAtD,KAAA,OAAAA;MACA;IACA;IACA,KAAAuD,UAAA,CAAAF,WAAA;EACA;EACAG,OAAA;IACA;IACAC,SAAAzD,KAAA;MACA,KAAA6B,KAAA,GAAA7B,KAAA;MACA,KAAAiD,MAAA,MAAApB,KAAA;IACA;IACA;IACA6B,MAAA;MACA,KAAA7B,KAAA;MACA,KAAAoB,MAAA,MAAApB,KAAA;IACA;IACA;IACAsB,MAAA;MACA;MACA,KAAAQ,KAAA,CAAAC,QAAA,CAAAC,GAAA,CAAAC,QAAA,IAAAA,QAAA,IAAAX,KAAA;IACA;IACA;IACAY,YAAAC,CAAA;MACA,KAAArB,KAAA,UAAAqB,CAAA;IACA;IACA;IACAT,WAAAS,CAAA;MACA,KAAArB,KAAA,SAAAqB,CAAA;IACA;IACAf,OAAAgB,CAAA,EAAAhE,IAAA;MACAiE,OAAA,CAAAC,GAAA,eAAAF,CAAA;MACA,IAAApB,SAAA;MACA,SAAA/B,QAAA;QACA,MAAAsD,GAAA;QACAH,CAAA,CAAAnB,OAAA,CAAAC,IAAA;UACAqB,GAAA,CAAArB,IAAA;QACA;QACAF,SAAA,QAAAtB,OAAA,CAAA8C,MAAA,CAAAtB,IAAA;UACA,MAAAuB,GAAA,QAAApC,YAAA,CAAAlC,KAAA,QAAAkC,YAAA,CAAAlC,KAAA,QAAAkC,YAAA,CAAAb,KAAA;UACA,OAAA+C,GAAA,CAAArB,IAAA,CAAAuB,GAAA;QACA;MACA;QACAzB,SAAA,QAAAtB,OAAA,CAAAgD,IAAA,CAAAxB,IAAA;UACA,MAAAuB,GAAA,QAAApC,YAAA,CAAAlC,KAAA,QAAAkC,YAAA,CAAAlC,KAAA,QAAAkC,YAAA,CAAAb,KAAA;UACA,OAAA0B,IAAA,CAAAuB,GAAA,MAAAL,CAAA;QACA;MACA;MACAC,OAAA,CAAAC,GAAA,gBAAAtB,SAAA;MACA,KAAAF,KAAA,WAAAsB,CAAA;MACA,KAAAtB,KAAA,cAAAE,SAAA,EAAA5C,IAAA;IACA;;IACAwC,WAAAzC,KAAA;MACA,SAAAO,MAAA,SAAAD,YAAA;QACA,SAAAgB,WAAA,UAAAtB,KAAA,IAAAA,KAAA,CAAAqC,MAAA,QAAAf,WAAA;UACA;QACA;QACA,KAAAhB,YAAA,CAAAN,KAAA,OAAAyB,MAAA,EAAAmB,IAAA,CAAArB,OAAA;UACA;UACA,KAAAA,OAAA,GAAAA,OAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}