{"ast":null,"code":"import { Popover } from 'element-ui';\nexport default {\n  name: 'SelectDropdown',\n  componentName: 'SelectDropdown',\n  components: {\n    ElPopover: Popover\n  },\n  props: {\n    value: {\n      type: Boolean,\n      default: false\n    },\n    boundariesPadding: {\n      type: Number,\n      default: 0\n    },\n    popperOptions: {\n      type: Object,\n      default() {\n        return {\n          gpuAcceleration: false\n        };\n      }\n    },\n    appendToBody: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      minWidth: ''\n    };\n  },\n  computed: {\n    value_: {\n      get() {\n        return this.value;\n      },\n      set(v) {\n        this.$emit('input', v);\n      }\n    },\n    popperClass_() {\n      let popperClass = `el-select-dropdown search-select `;\n      if (this.$parent.multiple) {\n        popperClass += ' is-multiple';\n      }\n      if (this.$parent.popperClass) {\n        popperClass += ` ${this.$parent.popperClass}`;\n      }\n      return popperClass;\n    }\n  },\n  watch: {\n    '$parent.inputWidth'() {\n      this.minWidth = this.$parent.$el.getBoundingClientRect().width + 'px';\n      this.$refs.elPopover.$refs.popper.style.minWidth = this.minWidth;\n    }\n  },\n  mounted() {\n    // 点击改DOM元素不算失焦\n    this.$parent.popperElm = this.$refs.elPopover.$refs.popper;\n    // 弹窗定义基于的DOM元素\n    this.$refs.elPopover.referenceElm = this.$parent.$refs.reference.$el;\n    // 弹窗内容DOM元素\n    this.$refs.elPopover.popperElm = this.$refs.elPopover.$refs.popper;\n    // 设置最小宽度\n    this.$refs.elPopover.$refs.popper.style.minWidth = this.minWidth;\n    // 设置appendToBody值\n    this.$refs.elPopover.appendToBody = this.appendToBody;\n    this.$on('updatePopper', () => {\n      if (this.$parent.visible) this.$refs.elPopover.updatePopper();\n    });\n  }\n};","map":{"version":3,"names":["Popover","name","componentName","components","ElPopover","props","value","type","Boolean","default","boundariesPadding","Number","popperOptions","Object","gpuAcceleration","appendToBody","data","minWidth","computed","value_","get","set","v","$emit","popperClass_","popperClass","$parent","multiple","watch","$parent.inputWidth","$el","getBoundingClientRect","width","$refs","elPopover","popper","style","mounted","popperElm","referenceElm","reference","$on","visible","updatePopper"],"sources":["node_modules/@cndinfo/cube-design-web/src/components/Select/src/select-dropdown.vue"],"sourcesContent":["<template>\n  <el-popover\n    ref=\"elPopover\"\n    v-model=\"value_\"\n    placement=\"bottom-start\"\n    :width=\"minWidth\"\n    :visible-arrow=\"false\"\n    trigger=\"manual\"\n    :popper-options=\"popperOptions\"\n    :popper-class=\"popperClass_\"\n  >\n    <slot></slot>\n  </el-popover>\n</template>\n\n<script type=\"text/babel\">\n\nimport {Popover} from 'element-ui'\n\nexport default {\n  name: 'SelectDropdown',\n  componentName: 'SelectDropdown',\n  components: {\n    ElPopover: Popover\n  },\n  props: {\n    value: {\n      type: Boolean,\n      default: false\n    },\n    boundariesPadding: {\n      type: Number,\n      default: 0\n    },\n    popperOptions: {\n      type: Object,\n      default() {\n        return {\n          gpuAcceleration: false\n        }\n      }\n    },\n    appendToBody: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      minWidth: ''\n    }\n  },\n  computed: {\n    value_: {\n      get() {\n        return this.value\n      },\n      set(v) {\n        this.$emit('input', v)\n      }\n    },\n    popperClass_() {\n      let popperClass = `el-select-dropdown search-select `\n      if (this.$parent.multiple) {\n        popperClass += ' is-multiple'\n      }\n      if (this.$parent.popperClass) {\n        popperClass += ` ${this.$parent.popperClass}`\n      }\n      return popperClass\n    }\n  },\n  watch: {\n    '$parent.inputWidth'() {\n      this.minWidth = this.$parent.$el.getBoundingClientRect().width + 'px'\n      this.$refs.elPopover.$refs.popper.style.minWidth = this.minWidth\n    }\n  },\n  mounted() {\n    // 点击改DOM元素不算失焦\n    this.$parent.popperElm = this.$refs.elPopover.$refs.popper\n    // 弹窗定义基于的DOM元素\n    this.$refs.elPopover.referenceElm = this.$parent.$refs.reference.$el\n    // 弹窗内容DOM元素\n    this.$refs.elPopover.popperElm = this.$refs.elPopover.$refs.popper\n    // 设置最小宽度\n    this.$refs.elPopover.$refs.popper.style.minWidth = this.minWidth\n    // 设置appendToBody值\n    this.$refs.elPopover.appendToBody = this.appendToBody\n    this.$on('updatePopper', () => {\n      if (this.$parent.visible) this.$refs.elPopover.updatePopper()\n    })\n  }\n}\n</script>\n"],"mappings":"AAiBA,SAAAA,OAAA;AAEA;EACAC,IAAA;EACAC,aAAA;EACAC,UAAA;IACAC,SAAA,EAAAJ;EACA;EACAK,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,OAAA;MACAC,OAAA;IACA;IACAC,iBAAA;MACAH,IAAA,EAAAI,MAAA;MACAF,OAAA;IACA;IACAG,aAAA;MACAL,IAAA,EAAAM,MAAA;MACAJ,QAAA;QACA;UACAK,eAAA;QACA;MACA;IACA;IACAC,YAAA;MACAR,IAAA,EAAAC,OAAA;MACAC,OAAA;IACA;EACA;EACAO,KAAA;IACA;MACAC,QAAA;IACA;EACA;EACAC,QAAA;IACAC,MAAA;MACAC,IAAA;QACA,YAAAd,KAAA;MACA;MACAe,IAAAC,CAAA;QACA,KAAAC,KAAA,UAAAD,CAAA;MACA;IACA;IACAE,aAAA;MACA,IAAAC,WAAA;MACA,SAAAC,OAAA,CAAAC,QAAA;QACAF,WAAA;MACA;MACA,SAAAC,OAAA,CAAAD,WAAA;QACAA,WAAA,aAAAC,OAAA,CAAAD,WAAA;MACA;MACA,OAAAA,WAAA;IACA;EACA;EACAG,KAAA;IACA,oBAAAC,CAAA;MACA,KAAAZ,QAAA,QAAAS,OAAA,CAAAI,GAAA,CAAAC,qBAAA,GAAAC,KAAA;MACA,KAAAC,KAAA,CAAAC,SAAA,CAAAD,KAAA,CAAAE,MAAA,CAAAC,KAAA,CAAAnB,QAAA,QAAAA,QAAA;IACA;EACA;EACAoB,QAAA;IACA;IACA,KAAAX,OAAA,CAAAY,SAAA,QAAAL,KAAA,CAAAC,SAAA,CAAAD,KAAA,CAAAE,MAAA;IACA;IACA,KAAAF,KAAA,CAAAC,SAAA,CAAAK,YAAA,QAAAb,OAAA,CAAAO,KAAA,CAAAO,SAAA,CAAAV,GAAA;IACA;IACA,KAAAG,KAAA,CAAAC,SAAA,CAAAI,SAAA,QAAAL,KAAA,CAAAC,SAAA,CAAAD,KAAA,CAAAE,MAAA;IACA;IACA,KAAAF,KAAA,CAAAC,SAAA,CAAAD,KAAA,CAAAE,MAAA,CAAAC,KAAA,CAAAnB,QAAA,QAAAA,QAAA;IACA;IACA,KAAAgB,KAAA,CAAAC,SAAA,CAAAnB,YAAA,QAAAA,YAAA;IACA,KAAA0B,GAAA;MACA,SAAAf,OAAA,CAAAgB,OAAA,OAAAT,KAAA,CAAAC,SAAA,CAAAS,YAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}