{"ast":null,"code":"function broadcast(componentName, eventName, params) {\n  this.$children.forEach(child => {\n    var name = child.$options.componentName;\n    if (name === componentName) {\n      child.$emit.apply(child, [eventName].concat(params));\n    } else {\n      broadcast.apply(child, [componentName, eventName].concat([params]));\n    }\n  });\n}\nexport default {\n  methods: {\n    dispatch(componentName, eventName, params) {\n      var parent = this.$parent || this.$root;\n      var name = parent.$options.componentName;\n      while (parent && (!name || name !== componentName)) {\n        parent = parent.$parent;\n        if (parent) {\n          name = parent.$options.componentName;\n        }\n      }\n      if (parent) {\n        parent.$emit.apply(parent, [eventName].concat(params));\n      }\n    },\n    broadcast(componentName, eventName, params) {\n      broadcast.call(this, componentName, eventName, params);\n    }\n  }\n};","map":{"version":3,"names":["broadcast","componentName","eventName","params","$children","forEach","child","name","$options","$emit","apply","concat","methods","dispatch","parent","$parent","$root","call"],"sources":["/Users/myproject/vuedemo/node_modules/element-ui/src/mixins/emitter.js"],"sourcesContent":["function broadcast(componentName, eventName, params) {\n  this.$children.forEach(child => {\n    var name = child.$options.componentName;\n\n    if (name === componentName) {\n      child.$emit.apply(child, [eventName].concat(params));\n    } else {\n      broadcast.apply(child, [componentName, eventName].concat([params]));\n    }\n  });\n}\nexport default {\n  methods: {\n    dispatch(componentName, eventName, params) {\n      var parent = this.$parent || this.$root;\n      var name = parent.$options.componentName;\n\n      while (parent && (!name || name !== componentName)) {\n        parent = parent.$parent;\n\n        if (parent) {\n          name = parent.$options.componentName;\n        }\n      }\n      if (parent) {\n        parent.$emit.apply(parent, [eventName].concat(params));\n      }\n    },\n    broadcast(componentName, eventName, params) {\n      broadcast.call(this, componentName, eventName, params);\n    }\n  }\n};\n"],"mappings":"AAAA,SAASA,SAASA,CAACC,aAAa,EAAEC,SAAS,EAAEC,MAAM,EAAE;EACnD,IAAI,CAACC,SAAS,CAACC,OAAO,CAACC,KAAK,IAAI;IAC9B,IAAIC,IAAI,GAAGD,KAAK,CAACE,QAAQ,CAACP,aAAa;IAEvC,IAAIM,IAAI,KAAKN,aAAa,EAAE;MAC1BK,KAAK,CAACG,KAAK,CAACC,KAAK,CAACJ,KAAK,EAAE,CAACJ,SAAS,CAAC,CAACS,MAAM,CAACR,MAAM,CAAC,CAAC;IACtD,CAAC,MAAM;MACLH,SAAS,CAACU,KAAK,CAACJ,KAAK,EAAE,CAACL,aAAa,EAAEC,SAAS,CAAC,CAACS,MAAM,CAAC,CAACR,MAAM,CAAC,CAAC,CAAC;IACrE;EACF,CAAC,CAAC;AACJ;AACA,eAAe;EACbS,OAAO,EAAE;IACPC,QAAQA,CAACZ,aAAa,EAAEC,SAAS,EAAEC,MAAM,EAAE;MACzC,IAAIW,MAAM,GAAG,IAAI,CAACC,OAAO,IAAI,IAAI,CAACC,KAAK;MACvC,IAAIT,IAAI,GAAGO,MAAM,CAACN,QAAQ,CAACP,aAAa;MAExC,OAAOa,MAAM,KAAK,CAACP,IAAI,IAAIA,IAAI,KAAKN,aAAa,CAAC,EAAE;QAClDa,MAAM,GAAGA,MAAM,CAACC,OAAO;QAEvB,IAAID,MAAM,EAAE;UACVP,IAAI,GAAGO,MAAM,CAACN,QAAQ,CAACP,aAAa;QACtC;MACF;MACA,IAAIa,MAAM,EAAE;QACVA,MAAM,CAACL,KAAK,CAACC,KAAK,CAACI,MAAM,EAAE,CAACZ,SAAS,CAAC,CAACS,MAAM,CAACR,MAAM,CAAC,CAAC;MACxD;IACF,CAAC;IACDH,SAASA,CAACC,aAAa,EAAEC,SAAS,EAAEC,MAAM,EAAE;MAC1CH,SAAS,CAACiB,IAAI,CAAC,IAAI,EAAEhB,aAAa,EAAEC,SAAS,EAAEC,MAAM,CAAC;IACxD;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}