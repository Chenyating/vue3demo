{"ast":null,"code":"let hiddenTextarea;\nconst HIDDEN_STYLE = `\n  height:0 !important;\n  visibility:hidden !important;\n  overflow:hidden !important;\n  position:absolute !important;\n  z-index:-1000 !important;\n  top:0 !important;\n  right:0 !important\n`;\nconst CONTEXT_STYLE = ['letter-spacing', 'line-height', 'padding-top', 'padding-bottom', 'font-family', 'font-weight', 'font-size', 'text-rendering', 'text-transform', 'width', 'text-indent', 'padding-left', 'padding-right', 'border-width', 'box-sizing'];\nfunction calculateNodeStyling(targetElement) {\n  const style = window.getComputedStyle(targetElement);\n  const boxSizing = style.getPropertyValue('box-sizing');\n  const paddingSize = parseFloat(style.getPropertyValue('padding-bottom')) + parseFloat(style.getPropertyValue('padding-top'));\n  const borderSize = parseFloat(style.getPropertyValue('border-bottom-width')) + parseFloat(style.getPropertyValue('border-top-width'));\n  const contextStyle = CONTEXT_STYLE.map(name => `${name}:${style.getPropertyValue(name)}`).join(';');\n  return {\n    contextStyle,\n    paddingSize,\n    borderSize,\n    boxSizing\n  };\n}\nexport default function calcTextareaHeight(targetElement, minRows = 1, maxRows = null) {\n  if (!hiddenTextarea) {\n    hiddenTextarea = document.createElement('textarea');\n    document.body.appendChild(hiddenTextarea);\n  }\n  let {\n    paddingSize,\n    borderSize,\n    boxSizing,\n    contextStyle\n  } = calculateNodeStyling(targetElement);\n  hiddenTextarea.setAttribute('style', `${contextStyle};${HIDDEN_STYLE}`);\n  hiddenTextarea.value = targetElement.value || targetElement.placeholder || '';\n  let height = hiddenTextarea.scrollHeight;\n  const result = {};\n  if (boxSizing === 'border-box') {\n    height = height + borderSize;\n  } else if (boxSizing === 'content-box') {\n    height = height - paddingSize;\n  }\n  hiddenTextarea.value = '';\n  let singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;\n  if (minRows !== null) {\n    let minHeight = singleRowHeight * minRows;\n    if (boxSizing === 'border-box') {\n      minHeight = minHeight + paddingSize + borderSize;\n    }\n    height = Math.max(minHeight, height);\n    result.minHeight = `${minHeight}px`;\n  }\n  if (maxRows !== null) {\n    let maxHeight = singleRowHeight * maxRows;\n    if (boxSizing === 'border-box') {\n      maxHeight = maxHeight + paddingSize + borderSize;\n    }\n    height = Math.min(maxHeight, height);\n  }\n  result.height = `${height}px`;\n  hiddenTextarea.parentNode && hiddenTextarea.parentNode.removeChild(hiddenTextarea);\n  hiddenTextarea = null;\n  return result;\n}\n;","map":{"version":3,"names":["hiddenTextarea","HIDDEN_STYLE","CONTEXT_STYLE","calculateNodeStyling","targetElement","style","window","getComputedStyle","boxSizing","getPropertyValue","paddingSize","parseFloat","borderSize","contextStyle","map","name","join","calcTextareaHeight","minRows","maxRows","document","createElement","body","appendChild","setAttribute","value","placeholder","height","scrollHeight","result","singleRowHeight","minHeight","Math","max","maxHeight","min","parentNode","removeChild"],"sources":["/Users/myproject/vuedemo/node_modules/element-ui/packages/input/src/calcTextareaHeight.js"],"sourcesContent":["let hiddenTextarea;\n\nconst HIDDEN_STYLE = `\n  height:0 !important;\n  visibility:hidden !important;\n  overflow:hidden !important;\n  position:absolute !important;\n  z-index:-1000 !important;\n  top:0 !important;\n  right:0 !important\n`;\n\nconst CONTEXT_STYLE = [\n  'letter-spacing',\n  'line-height',\n  'padding-top',\n  'padding-bottom',\n  'font-family',\n  'font-weight',\n  'font-size',\n  'text-rendering',\n  'text-transform',\n  'width',\n  'text-indent',\n  'padding-left',\n  'padding-right',\n  'border-width',\n  'box-sizing'\n];\n\nfunction calculateNodeStyling(targetElement) {\n  const style = window.getComputedStyle(targetElement);\n\n  const boxSizing = style.getPropertyValue('box-sizing');\n\n  const paddingSize = (\n    parseFloat(style.getPropertyValue('padding-bottom')) +\n    parseFloat(style.getPropertyValue('padding-top'))\n  );\n\n  const borderSize = (\n    parseFloat(style.getPropertyValue('border-bottom-width')) +\n    parseFloat(style.getPropertyValue('border-top-width'))\n  );\n\n  const contextStyle = CONTEXT_STYLE\n    .map(name => `${name}:${style.getPropertyValue(name)}`)\n    .join(';');\n\n  return { contextStyle, paddingSize, borderSize, boxSizing };\n}\n\nexport default function calcTextareaHeight(\n  targetElement,\n  minRows = 1,\n  maxRows = null\n) {\n  if (!hiddenTextarea) {\n    hiddenTextarea = document.createElement('textarea');\n    document.body.appendChild(hiddenTextarea);\n  }\n\n  let {\n    paddingSize,\n    borderSize,\n    boxSizing,\n    contextStyle\n  } = calculateNodeStyling(targetElement);\n\n  hiddenTextarea.setAttribute('style', `${contextStyle};${HIDDEN_STYLE}`);\n  hiddenTextarea.value = targetElement.value || targetElement.placeholder || '';\n\n  let height = hiddenTextarea.scrollHeight;\n  const result = {};\n\n  if (boxSizing === 'border-box') {\n    height = height + borderSize;\n  } else if (boxSizing === 'content-box') {\n    height = height - paddingSize;\n  }\n\n  hiddenTextarea.value = '';\n  let singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;\n\n  if (minRows !== null) {\n    let minHeight = singleRowHeight * minRows;\n    if (boxSizing === 'border-box') {\n      minHeight = minHeight + paddingSize + borderSize;\n    }\n    height = Math.max(minHeight, height);\n    result.minHeight = `${ minHeight }px`;\n  }\n  if (maxRows !== null) {\n    let maxHeight = singleRowHeight * maxRows;\n    if (boxSizing === 'border-box') {\n      maxHeight = maxHeight + paddingSize + borderSize;\n    }\n    height = Math.min(maxHeight, height);\n  }\n  result.height = `${ height }px`;\n  hiddenTextarea.parentNode && hiddenTextarea.parentNode.removeChild(hiddenTextarea);\n  hiddenTextarea = null;\n  return result;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}