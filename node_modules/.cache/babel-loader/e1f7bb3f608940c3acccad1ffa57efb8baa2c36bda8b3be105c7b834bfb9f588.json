{"ast":null,"code":"import localInputNumber from '../../InputNumber/index.js';\nexport default {\n  name: 'TableInput',\n  components: {\n    localInputNumber\n  },\n  directives: {\n    limit: function (el, binding) {\n      const data = binding.value;\n      if (data.min && +data.value < data.min) {\n        binding.value.set(data.min);\n      }\n      if (data.max && +data.value > data.max) {\n        binding.value.set(data.max);\n      }\n    }\n  },\n  data() {\n    return {\n      value: null,\n      maxVal: null,\n      minVal: null,\n      decimalDigit: 3\n    };\n  },\n  mounted() {\n    this.$nextTick(() => {\n      if (this.$refs.input) {\n        this.$refs.input.focus();\n      }\n    });\n  },\n  beforeMount() {\n    this.initFn();\n  },\n  methods: {\n    initFn() {\n      let maxVal = null;\n      let minVal = null;\n      const {\n        max,\n        min,\n        decimal\n      } = this.params.colDef;\n      if (max) {\n        if (typeof max === 'string') {\n          maxVal = this.params.data[max];\n        } else {\n          maxVal = max;\n        }\n      }\n      if (min) {\n        if (typeof min === 'string') {\n          minVal = this.params.data[min];\n        } else {\n          minVal = min;\n        }\n      }\n      if (decimal || decimal === 0) {\n        this.decimalDigit = decimal;\n      }\n      this.minVal = minVal;\n      this.maxVal = maxVal;\n      this.setValue(this.params.value);\n    },\n    setValue(value) {\n      this.value = value;\n    },\n    getValue() {\n      return +this.value;\n    }\n  }\n};","map":{"version":3,"names":["localInputNumber","name","components","directives","limit","el","binding","data","value","min","set","max","maxVal","minVal","decimalDigit","mounted","$nextTick","$refs","input","focus","beforeMount","initFn","methods","decimal","params","colDef","setValue","getValue"],"sources":["node_modules/@cndinfo/cube-design-web/src/components/AgGrid/src/TableInput.vue"],"sourcesContent":["<template>\n  <div>\n    <local-input-number v-model=\"value\" v-limit=\"{value: value,max:maxVal,min:minVal,set:setValue}\" :decimal-digit=\"decimalDigit\" type=\"number\" size=\"mini\" :placeholder=\"$t('grid.others.enterContent')\" clearable />\n  </div>\n</template>\n\n<script>\nimport localInputNumber from '../../InputNumber/index.js'\nexport default {\n  name: 'TableInput',\n  components: { localInputNumber },\n  directives: {\n    limit: function(el, binding) {\n      const data = binding.value\n      if (data.min && +data.value < data.min) {\n        binding.value.set(data.min)\n      }\n      if (data.max && +data.value > data.max) {\n        binding.value.set(data.max)\n      }\n    }\n  },\n  data() {\n    return {\n      value: null,\n      maxVal: null,\n      minVal: null,\n      decimalDigit: 3\n    }\n  },\n  mounted() {\n    this.$nextTick(() => {\n      if (this.$refs.input) {\n        this.$refs.input.focus()\n      }\n    })\n  },\n  beforeMount() {\n    this.initFn()\n  },\n  methods: {\n    initFn() {\n      let maxVal = null; let minVal = null\n      const { max, min, decimal } = this.params.colDef\n      if (max) {\n        if (typeof max === 'string') {\n          maxVal = this.params.data[max]\n        } else {\n          maxVal = max\n        }\n      }\n      if (min) {\n        if (typeof min === 'string') {\n          minVal = this.params.data[min]\n        } else {\n          minVal = min\n        }\n      }\n      if (decimal || decimal === 0) {\n        this.decimalDigit = decimal\n      }\n      this.minVal = minVal\n      this.maxVal = maxVal\n      this.setValue(this.params.value)\n    },\n    setValue(value) {\n      this.value = value\n    },\n    getValue() {\n      return +this.value\n    }\n  }\n}\n</script>\n"],"mappings":"AAOA,OAAAA,gBAAA;AACA;EACAC,IAAA;EACAC,UAAA;IAAAF;EAAA;EACAG,UAAA;IACAC,KAAA,WAAAA,CAAAC,EAAA,EAAAC,OAAA;MACA,MAAAC,IAAA,GAAAD,OAAA,CAAAE,KAAA;MACA,IAAAD,IAAA,CAAAE,GAAA,KAAAF,IAAA,CAAAC,KAAA,GAAAD,IAAA,CAAAE,GAAA;QACAH,OAAA,CAAAE,KAAA,CAAAE,GAAA,CAAAH,IAAA,CAAAE,GAAA;MACA;MACA,IAAAF,IAAA,CAAAI,GAAA,KAAAJ,IAAA,CAAAC,KAAA,GAAAD,IAAA,CAAAI,GAAA;QACAL,OAAA,CAAAE,KAAA,CAAAE,GAAA,CAAAH,IAAA,CAAAI,GAAA;MACA;IACA;EACA;EACAJ,KAAA;IACA;MACAC,KAAA;MACAI,MAAA;MACAC,MAAA;MACAC,YAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,SAAA;MACA,SAAAC,KAAA,CAAAC,KAAA;QACA,KAAAD,KAAA,CAAAC,KAAA,CAAAC,KAAA;MACA;IACA;EACA;EACAC,YAAA;IACA,KAAAC,MAAA;EACA;EACAC,OAAA;IACAD,OAAA;MACA,IAAAT,MAAA;MAAA,IAAAC,MAAA;MACA;QAAAF,GAAA;QAAAF,GAAA;QAAAc;MAAA,SAAAC,MAAA,CAAAC,MAAA;MACA,IAAAd,GAAA;QACA,WAAAA,GAAA;UACAC,MAAA,QAAAY,MAAA,CAAAjB,IAAA,CAAAI,GAAA;QACA;UACAC,MAAA,GAAAD,GAAA;QACA;MACA;MACA,IAAAF,GAAA;QACA,WAAAA,GAAA;UACAI,MAAA,QAAAW,MAAA,CAAAjB,IAAA,CAAAE,GAAA;QACA;UACAI,MAAA,GAAAJ,GAAA;QACA;MACA;MACA,IAAAc,OAAA,IAAAA,OAAA;QACA,KAAAT,YAAA,GAAAS,OAAA;MACA;MACA,KAAAV,MAAA,GAAAA,MAAA;MACA,KAAAD,MAAA,GAAAA,MAAA;MACA,KAAAc,QAAA,MAAAF,MAAA,CAAAhB,KAAA;IACA;IACAkB,SAAAlB,KAAA;MACA,KAAAA,KAAA,GAAAA,KAAA;IACA;IACAmB,SAAA;MACA,aAAAnB,KAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}