{"ast":null,"code":"import { Tooltip, FormItem, Col } from 'element-ui';\nexport default {\n  name: 'FormItem',\n  components: {\n    ElTooltip: Tooltip,\n    ElFormItem: FormItem,\n    ElCol: Col\n  },\n  provide() {\n    return {\n      cubeFormItem: this\n    };\n  },\n  props: {\n    // 标题\n    label: {\n      type: String,\n      default: ''\n    },\n    // 标题宽度\n    labelWidth: {\n      type: [String, Number],\n      default: ''\n    },\n    // 标题位置 right/top\n    labelPosition: {\n      type: String,\n      default: 'top'\n    },\n    // input 绑定值\n    prop: {\n      type: String,\n      default: ''\n    },\n    errorMsg: {\n      type: String,\n      default: ''\n    },\n    validateStatus: {\n      type: String,\n      default: ''\n    },\n    // item 占位栅格\n    customWidth: {\n      type: [Number, Array],\n      default: 0\n    },\n    // 取消标题\n    nolabel: {\n      type: Boolean,\n      default: false\n    },\n    // input 输入规则\n    rules: {\n      type: [Array, Object],\n      default: () => {\n        return null;\n      }\n    },\n    // 标题提示icon\n    tips: {\n      type: String,\n      default: ''\n    },\n    outline: {\n      type: Boolean,\n      default: false\n    },\n    required: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      disabled: true\n    };\n  },\n  computed: {\n    initWidth() {\n      if (Number.isFinite(Number(this.labelWidth))) {\n        return `${this.labelWidth * 1 + 50}px`;\n      }\n      return this.labelWidth;\n    },\n    curErrMsg() {\n      return this.errorMsg || '';\n    },\n    curId() {\n      const timestamp = new Date().getTime();\n      return this.label + timestamp;\n    },\n    itemWidth() {\n      let tempArr = [8, 6, 4];\n      // let tempArr = [15, 10, 5]\n      // let tempArr = [24, 12, 6]\n\n      if (Array.isArray(this.customWidth)) {\n        return this.customWidth;\n      }\n      if (this.customWidth !== 0) {\n        const colSpan = this.customWidth / 4;\n        if (colSpan === 2) {\n          tempArr = [16, 12, 8];\n        } else {\n          for (let i = 0; i < tempArr.length; i++) {\n            tempArr[i] = this.customWidth;\n          }\n        }\n      }\n      return tempArr;\n    }\n  },\n  async mounted() {\n    this.$nextTick(() => {\n      this.showToolTip();\n    });\n    const resizeObserver = new ResizeObserver(resizeObserverEntry => {\n      resizeObserverEntry.forEach(() => {\n        this.showToolTip();\n      });\n    });\n    resizeObserver.observe(this.$el);\n  },\n  methods: {\n    showToolTip() {\n      this.$nextTick(() => {\n        const label1 = this.$el.querySelector('.el-tooltip');\n        this.disabled = label1.clientWidth >= label1.scrollWidth;\n      });\n    }\n  }\n};","map":{"version":3,"names":["Tooltip","FormItem","Col","name","components","ElTooltip","ElFormItem","ElCol","provide","cubeFormItem","props","label","type","String","default","labelWidth","Number","labelPosition","prop","errorMsg","validateStatus","customWidth","Array","nolabel","Boolean","rules","Object","tips","outline","required","data","disabled","computed","initWidth","isFinite","curErrMsg","curId","timestamp","Date","getTime","itemWidth","tempArr","isArray","colSpan","i","length","mounted","$nextTick","showToolTip","resizeObserver","ResizeObserver","resizeObserverEntry","forEach","observe","$el","methods","label1","querySelector","clientWidth","scrollWidth"],"sources":["node_modules/@cndinfo/cube-design-web/src/components/FormItem/src/index.vue"],"sourcesContent":["<template>\n  <!-- <div\n    :class=\"[\n      'form-item',\n      labelPosition ? 'form-item-' + labelPosition : '',\n      nolabel ? 'nolabel' : ''\n    ]\"\n    :id=\"curId\"\n  > -->\n  <el-col\n    :xs=\"itemWidth[0]\"\n    :sm=\"itemWidth[1]\"\n    :md=\"itemWidth[2]\"\n    :lg=\"itemWidth[2]\"\n    :xl=\"itemWidth[2]\"\n  >\n    <div\n      :id=\"curId\"\n      :class=\"[\n        'form-item',\n        labelPosition ? 'form-item-' + labelPosition : '',\n        nolabel ? 'nolabel' : '',\n        {\n          'form-outline': outline,\n        },\n      ]\"\n    >\n      <el-form-item\n        :prop=\"prop\"\n        :rules=\"rules\"\n        :label-width=\"initWidth\"\n        :required=\"required\"\n        :validate-status=\"validateStatus\"\n        size=\"mini\"\n      >\n        <template v-if=\"!nolabel\" slot=\"label\">\n          <el-tooltip\n            effect=\"dark\"\n            :content=\"label\"\n            placement=\"top-start\"\n            :disabled=\"disabled\"\n            :tabindex=\"-1\"\n          >\n            <span>{{ label }}</span>\n          </el-tooltip>\n          <p v-if=\"labelPosition === 'top'\" class=\"label-replace\">{{label}}</p>\n        </template>\n        <slot />\n\n        <el-tooltip\n          effect=\"light\"\n          :tabindex=\"-1\"\n          :content=\"curErrMsg\"\n          placement=\"top\"\n        >\n          <cnd-icon\n            name=\"cnd-exclamation\"\n            style=\"display: none\"\n            class=\"form-item-error\"\n          />\n        </el-tooltip>\n      </el-form-item>\n    </div>\n  </el-col>\n  <!-- </div> -->\n</template>\n\n<script>\nimport { Tooltip, FormItem, Col } from 'element-ui'\nexport default {\n  name: 'FormItem',\n  components: {\n    ElTooltip: Tooltip,\n    ElFormItem: FormItem,\n    ElCol: Col\n  },\n  provide() {\n    return {\n      cubeFormItem: this\n    }\n  },\n  props: {\n    // 标题\n    label: {\n      type: String,\n      default: ''\n    },\n    // 标题宽度\n    labelWidth: {\n      type: [String, Number],\n      default: ''\n    },\n    // 标题位置 right/top\n    labelPosition: {\n      type: String,\n      default: 'top'\n    },\n    // input 绑定值\n    prop: {\n      type: String,\n      default: ''\n    },\n    errorMsg: {\n      type: String,\n      default: ''\n    },\n    validateStatus: {\n      type: String,\n      default: ''\n    },\n    // item 占位栅格\n    customWidth: {\n      type: [Number, Array],\n      default: 0\n    },\n    // 取消标题\n    nolabel: {\n      type: Boolean,\n      default: false\n    },\n    // input 输入规则\n    rules: {\n      type: [Array, Object],\n      default: () => {\n        return null\n      }\n    },\n    // 标题提示icon\n    tips: {\n      type: String,\n      default: ''\n    },\n    outline: {\n      type: Boolean,\n      default: false\n    },\n    required: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      disabled: true\n    }\n  },\n  computed: {\n    initWidth() {\n      if (Number.isFinite(Number(this.labelWidth))) {\n        return `${this.labelWidth * 1 + 50}px`\n      }\n      return this.labelWidth\n    },\n    curErrMsg() {\n      return this.errorMsg || ''\n    },\n    curId() {\n      const timestamp = new Date().getTime()\n      return this.label + timestamp\n    },\n    itemWidth() {\n      let tempArr = [8, 6, 4]\n      // let tempArr = [15, 10, 5]\n      // let tempArr = [24, 12, 6]\n\n      if (Array.isArray(this.customWidth)) {\n        return this.customWidth\n      }\n\n      if (this.customWidth !== 0) {\n        const colSpan = this.customWidth / 4\n        if (colSpan === 2) {\n          tempArr = [16, 12, 8]\n        } else {\n          for (let i = 0; i < tempArr.length; i++) {\n            tempArr[i] = this.customWidth\n          }\n        }\n      }\n      return tempArr\n    }\n  },\n  async mounted() {\n    this.$nextTick(() => {\n      this.showToolTip()\n    })\n    const resizeObserver = new ResizeObserver((resizeObserverEntry) => {\n      resizeObserverEntry.forEach(() => {\n        this.showToolTip()\n      })\n    })\n    resizeObserver.observe(this.$el)\n  },\n  methods: {\n    showToolTip() {\n      this.$nextTick(() => {\n        const label1 = this.$el.querySelector('.el-tooltip')\n\n        this.disabled = label1.clientWidth >= label1.scrollWidth\n      })\n    }\n  }\n}\n</script>\n<style lang=\"scss\" scopoed>\n@import '../../../../lib/styles/components/FormItem.scss';\n</style>\n"],"mappings":"AAoEA,SAAAA,OAAA,EAAAC,QAAA,EAAAC,GAAA;AACA;EACAC,IAAA;EACAC,UAAA;IACAC,SAAA,EAAAL,OAAA;IACAM,UAAA,EAAAL,QAAA;IACAM,KAAA,EAAAL;EACA;EACAM,QAAA;IACA;MACAC,YAAA;IACA;EACA;EACAC,KAAA;IACA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACA;IACAC,UAAA;MACAH,IAAA,GAAAC,MAAA,EAAAG,MAAA;MACAF,OAAA;IACA;IACA;IACAG,aAAA;MACAL,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACA;IACAI,IAAA;MACAN,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAK,QAAA;MACAP,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAM,cAAA;MACAR,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACA;IACAO,WAAA;MACAT,IAAA,GAAAI,MAAA,EAAAM,KAAA;MACAR,OAAA;IACA;IACA;IACAS,OAAA;MACAX,IAAA,EAAAY,OAAA;MACAV,OAAA;IACA;IACA;IACAW,KAAA;MACAb,IAAA,GAAAU,KAAA,EAAAI,MAAA;MACAZ,OAAA,EAAAA,CAAA;QACA;MACA;IACA;IACA;IACAa,IAAA;MACAf,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAc,OAAA;MACAhB,IAAA,EAAAY,OAAA;MACAV,OAAA;IACA;IACAe,QAAA;MACAjB,IAAA,EAAAY,OAAA;MACAV,OAAA;IACA;EACA;EACAgB,KAAA;IACA;MACAC,QAAA;IACA;EACA;EACAC,QAAA;IACAC,UAAA;MACA,IAAAjB,MAAA,CAAAkB,QAAA,CAAAlB,MAAA,MAAAD,UAAA;QACA,eAAAA,UAAA;MACA;MACA,YAAAA,UAAA;IACA;IACAoB,UAAA;MACA,YAAAhB,QAAA;IACA;IACAiB,MAAA;MACA,MAAAC,SAAA,OAAAC,IAAA,GAAAC,OAAA;MACA,YAAA5B,KAAA,GAAA0B,SAAA;IACA;IACAG,UAAA;MACA,IAAAC,OAAA;MACA;MACA;;MAEA,IAAAnB,KAAA,CAAAoB,OAAA,MAAArB,WAAA;QACA,YAAAA,WAAA;MACA;MAEA,SAAAA,WAAA;QACA,MAAAsB,OAAA,QAAAtB,WAAA;QACA,IAAAsB,OAAA;UACAF,OAAA;QACA;UACA,SAAAG,CAAA,MAAAA,CAAA,GAAAH,OAAA,CAAAI,MAAA,EAAAD,CAAA;YACAH,OAAA,CAAAG,CAAA,SAAAvB,WAAA;UACA;QACA;MACA;MACA,OAAAoB,OAAA;IACA;EACA;EACA,MAAAK,QAAA;IACA,KAAAC,SAAA;MACA,KAAAC,WAAA;IACA;IACA,MAAAC,cAAA,OAAAC,cAAA,CAAAC,mBAAA;MACAA,mBAAA,CAAAC,OAAA;QACA,KAAAJ,WAAA;MACA;IACA;IACAC,cAAA,CAAAI,OAAA,MAAAC,GAAA;EACA;EACAC,OAAA;IACAP,YAAA;MACA,KAAAD,SAAA;QACA,MAAAS,MAAA,QAAAF,GAAA,CAAAG,aAAA;QAEA,KAAA1B,QAAA,GAAAyB,MAAA,CAAAE,WAAA,IAAAF,MAAA,CAAAG,WAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}