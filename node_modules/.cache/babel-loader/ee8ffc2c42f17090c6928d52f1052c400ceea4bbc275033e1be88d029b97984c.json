{"ast":null,"code":"import _ from \"lodash\";\nimport $router from \"../common/uni-router\";\nimport { Volcengine } from \"../common\";\nexport default class UniVolcengine extends Volcengine {\n  constructor(params) {\n    params.type = 0; // 表示是uni-app 端的SDK\n    super(params);\n    try {\n      this.uniPluginObject = params.uniPluginObject;\n      this.routerInfo = UNI_ROUTES.pages;\n      this.tarBar = UNI_ROUTES.tarBar ? UNI_ROUTES.tarBar.list : [];\n      this.isVolcengine = true;\n      if (!this.uniPluginObject.hasStarted()) {\n        this.uniPluginObject.start();\n      }\n    } catch (e) {\n      this.isVolcengine = false;\n      this.routerInfo = [];\n      this.tarBar = [];\n    }\n    this.isIOSWebviewPause = false;\n    const pages = this.getCurrentPagesArr();\n    this.changeCurrentPage(pages);\n  }\n  start() {\n    if (!this.isVolcengine) {\n      return;\n    }\n    this.init(this.routerInfo, this.tarBar);\n  }\n  // 监听路由变化\n  listenRouter(param) {\n    if (!_.isObject(param)) {\n      param = {};\n    }\n    $router.onchange = (n, o) => {\n      if (!this.isVolcengine) {\n        return;\n      }\n      try {\n        const lastVisitUrl = this.getCacheVisitUrl();\n        const nowPath = n.fullPath;\n        if (lastVisitUrl === nowPath) {\n          return;\n        }\n        this.setCacheVisitUrl(nowPath);\n        this.customPageview(o.fullPath, param);\n      } catch (e) {}\n    };\n  }\n  /**\n   * 上报火山引擎唯一的用户id 登录传id 退出的时候传null或空字符串\n   * @param {*} paramUserUniqueId 要上报的火山用户唯一ID\n   * @returns\n   */\n  setUserUniqueId(paramUserUniqueId) {\n    if (!this.isVolcengine) {\n      return;\n    }\n    const userUniqueId = paramUserUniqueId || this.nullProp;\n    try {\n      this.uniPluginObject.setUserUniqueId(userUniqueId);\n    } catch (e) {}\n  }\n  // 获取uni-app的插件\n  getuniPluginObject() {\n    return this.uniPluginObject;\n  }\n  // 获取项目是否接入了火山SDK\n  getIsVolcengine() {\n    return this.isVolcengine;\n  }\n  /**\n   * 上报接口埋点\n   * @param {Object} param\n   */\n  collectApi(param) {\n    const pages = this.getCurrentPagesArr();\n    this.changeCurrentPage(pages);\n    const currentUrl = this.pages[0];\n    const commonAttr = this.getCommonAttr(currentUrl);\n    const apiParam = {\n      api_name: param.apiName,\n      // 接口名称\n      is_success: param.isSuccess,\n      // 是否成功\n      api_time_cost: param.apiTimeCost // 接口请求耗费的时间\n    };\n\n    let finalParam = {\n      ...commonAttr,\n      ...apiParam\n    };\n    delete param.apiName;\n    delete param.isSuccess;\n    delete param.apiTimeCost;\n    finalParam = {\n      ...finalParam,\n      ...param\n    };\n    try {\n      this.uniPluginObject.onEventV3(\"api_request\", finalParam);\n    } catch (e) {}\n  }\n\n  /**\n   *\n   * @param {*} path 路径\n   * @param {*} param 用户自定义的参数\n   */\n  customPageview(path, param) {\n    if (!this.volcengineProps[path]) {\n      this.updateRouter(this.routerInfo, this.tarBar);\n    }\n    const lastPageVisitTime = this.getCacheTime();\n    const nowTime = new Date().getTime();\n    this.setCacheTime(nowTime);\n    const commonAttr = this.getCommonAttr(path);\n    const durationParam = {\n      custom_page_duration: nowTime - lastPageVisitTime\n    };\n    const finalParam = {\n      ...commonAttr,\n      ...durationParam,\n      ...param\n    };\n    this.uniPluginObject.onEventV3(\"custom_pageview\", finalParam);\n  }\n  // 监听初始化进入页面\n  customPageviewOpen(param) {\n    if (!_.isObject(param)) {\n      param = {};\n    }\n    try {\n      // 是否是用vebview打开了H5，如果打开了，则不触发Open\n      const webviewVisible = this.checkVebviewVisible();\n      if (webviewVisible) {\n        return;\n      }\n      const nowTime = new Date().getTime();\n      this.setCacheTime(nowTime); // 重新记录页面停留时间\n      let currentUrl;\n      if (this.pages.length > 0) {\n        currentUrl = this.pages[0];\n      } else {\n        // 获取不到当前页面只能获取上一次访问的\n        currentUrl = this.getCacheVisitUrl();\n      }\n      // 如果没有任何匹配的，那就是首页\n      if (!currentUrl) {\n        currentUrl = \"/\" + this.routerInfo[0].path;\n      }\n      this.setCacheVisitUrl(currentUrl);\n      if (!this.volcengineProps[currentUrl]) {\n        this.updateRouter(this.routerInfo, this.tarBar);\n      }\n      const commonAttr = this.getCommonAttr(currentUrl);\n      const finalParam = {\n        ...commonAttr,\n        ...param\n      };\n      this.uniPluginObject.onEventV3(\"custom_pageview_open\", finalParam);\n    } catch (e) {}\n  }\n  handleWebviewOnHide() {\n    try {\n      // 是否是iOS\n      const agent = plus.navigator.getUserAgent();\n      const isIOS = agent.match(/(iphone os)/i); // iOS终端\n      const nowTime = new Date().getTime();\n      this.setCacheTime(nowTime);\n      if (isIOS) {\n        const webwiewCache = this.getWebviewCache();\n        const lastPageVisitTime = webwiewCache[this.cacheTimeKey] || 0;\n        delete webwiewCache[this.cacheTimeKey];\n        const duration = nowTime - lastPageVisitTime;\n        const durationParam = {\n          custom_page_duration: duration\n        };\n        const param = {\n          ...webwiewCache,\n          ...durationParam\n        };\n        this.uniPluginObject.onEventV3(\"custom_pageview\", param);\n        if (this.isIOSWebviewPause) {\n          this.uniPluginObject.onEventV3(\"custom_pagview_hide\", webwiewCache);\n        }\n      }\n    } catch (e) {}\n  }\n  /**\n   * 监听隐藏页面\n   * @param\n   * @returns\n   */\n  customPageviewHide(param) {\n    try {\n      const isWebviewHide = this.checkVebviewVisible();\n      if (isWebviewHide) {\n        const agent = plus.navigator.getUserAgent();\n        const isIOS = agent.match(/(iphone os)/i); // iOS终端\n        if (isIOS) {\n          this.isIOSWebviewPause = true;\n          this.handleWebviewOnHide();\n        }\n        return;\n      }\n      if (!_.isObject(param)) {\n        param = {};\n      }\n      const pages = this.getCurrentPagesArr();\n      this.changeCurrentPage(pages);\n      let currentUrl = this.getCacheVisitUrl();\n      if (this.pages.length > 0) {\n        currentUrl = this.pages[0];\n      }\n      // 如果没有任何匹配的，那就是首页\n      if (!currentUrl) {\n        currentUrl = \"/\" + this.routerInfo[0].path;\n      }\n      if (!this.volcengineProps[currentUrl]) {\n        this.updateRouter(this.routerInfo, this.tarBar);\n      }\n      const commonAttr = this.getCommonAttr(currentUrl);\n      const finalParam = {\n        ...commonAttr,\n        ...param\n      };\n      this.uniPluginObject.onEventV3(\"custom_pageview_hide\", finalParam);\n      // 上报当前页面的停留时间，然后onShow的时候会重新改写当前页面访问时间\n      this.customPageview(currentUrl, param);\n    } catch (e) {}\n  }\n  /**\n   * 用户上报火山自定义事件\n   * @param {*} name 自定义的事件名称\n   * @param {*} param 自定义的事件参数\n   * @returns\n   */\n  reportEvent(name, param) {\n    // 防止 自定义 custom_pageview 事件的时候没有执行对应逻辑\n    const oldPath = this.pages && this.pages.length ? this.pages[0] : this.routerInfo[0].path;\n    const pages = this.getCurrentPagesArr();\n    this.changeCurrentPage(pages);\n    const currentUrl = this.pages[0];\n    if (name === \"custom_pageview\") {\n      this.setCacheVisitUrl(oldPath, param);\n    }\n    const commonAttr = this.getCommonAttr(currentUrl);\n    const finalParam = {\n      ...commonAttr,\n      ...param\n    };\n    try {\n      this.uniPluginObject.onEventV3(name, finalParam);\n    } catch (e) {}\n  }\n  /**\n   * 设置用户属性\n   * @param {*} profileParam 用户属性\n   * @returns\n   */\n  profileSet(profileParam) {\n    try {\n      this.uniPluginObject.profileSet(profileParam);\n    } catch (e) {}\n  }\n  sdkVersionProfileSet(param) {\n    try {\n      const sdkVersion = this.getSdkVersion();\n      const finalParam = {\n        ...param,\n        ...sdkVersion\n      };\n      this.profileSet(finalParam);\n    } catch (e) {}\n  }\n  appVersionProfileSet(param) {\n    try {\n      const appVersion = this.getAppVersion();\n      const finalParam = {\n        ...param,\n        ...appVersion\n      };\n      this.profileSet(finalParam);\n    } catch (e) {}\n  }\n\n  // 判断是否有加载webview 以及 webivew 是否可见\n  checkVebviewVisible() {\n    let visible = false;\n    const webviewList = plus.webview.getDisplayWebview();\n    if (webviewList.length) {\n      const reg = /http[s]?:\\/\\/[\\w.]+[\\w\\/]*[\\w.]*\\??[\\w=&\\+\\%]*/;\n      webviewList.filter(item => {\n        return reg.test(item.getURL()) && item.isVisible();\n      });\n      visible = webviewList.length > 0;\n    }\n    return visible;\n  }\n}","map":{"version":3,"names":["_","$router","Volcengine","UniVolcengine","constructor","params","type","uniPluginObject","routerInfo","UNI_ROUTES","pages","tarBar","list","isVolcengine","hasStarted","start","e","isIOSWebviewPause","getCurrentPagesArr","changeCurrentPage","init","listenRouter","param","isObject","onchange","n","o","lastVisitUrl","getCacheVisitUrl","nowPath","fullPath","setCacheVisitUrl","customPageview","setUserUniqueId","paramUserUniqueId","userUniqueId","nullProp","getuniPluginObject","getIsVolcengine","collectApi","currentUrl","commonAttr","getCommonAttr","apiParam","api_name","apiName","is_success","isSuccess","api_time_cost","apiTimeCost","finalParam","onEventV3","path","volcengineProps","updateRouter","lastPageVisitTime","getCacheTime","nowTime","Date","getTime","setCacheTime","durationParam","custom_page_duration","customPageviewOpen","webviewVisible","checkVebviewVisible","length","handleWebviewOnHide","agent","plus","navigator","getUserAgent","isIOS","match","webwiewCache","getWebviewCache","cacheTimeKey","duration","customPageviewHide","isWebviewHide","reportEvent","name","oldPath","profileSet","profileParam","sdkVersionProfileSet","sdkVersion","getSdkVersion","appVersionProfileSet","appVersion","getAppVersion","visible","webviewList","webview","getDisplayWebview","reg","filter","item","test","getURL","isVisible"],"sources":["/Users/myproject/vuedemo/node_modules/@cndinfo/cube-analytics-sdk/uni-app/index.js"],"sourcesContent":["import _ from \"lodash\"\nimport $router from \"../common/uni-router\"\nimport { Volcengine } from \"../common\"\nexport default class UniVolcengine extends Volcengine {\n  constructor(params) {\n    params.type = 0 // 表示是uni-app 端的SDK\n    super(params)\n    try {\n      this.uniPluginObject = params.uniPluginObject\n      this.routerInfo = UNI_ROUTES.pages\n      this.tarBar = UNI_ROUTES.tarBar ? UNI_ROUTES.tarBar.list : []\n      this.isVolcengine = true\n      if (!this.uniPluginObject.hasStarted()) {\n        this.uniPluginObject.start()\n      }\n    } catch (e) {\n      this.isVolcengine = false\n      this.routerInfo = []\n      this.tarBar = []\n    }\n    this.isIOSWebviewPause = false\n    const pages = this.getCurrentPagesArr()\n    this.changeCurrentPage(pages)\n  }\n  start() {\n    if (!this.isVolcengine) {\n      return\n    }\n    this.init(this.routerInfo, this.tarBar)\n  }\n  // 监听路由变化\n  listenRouter(param) {\n    if (!_.isObject(param)) {\n      param = {}\n    }\n    $router.onchange = (n, o) => {\n      if (!this.isVolcengine) {\n        return\n      }\n      try {\n        const lastVisitUrl = this.getCacheVisitUrl()\n        const nowPath = n.fullPath\n        if (lastVisitUrl === nowPath) {\n          return\n        }\n        this.setCacheVisitUrl(nowPath)\n        this.customPageview(o.fullPath, param)\n      } catch (e) {}\n    }\n  }\n  /**\n   * 上报火山引擎唯一的用户id 登录传id 退出的时候传null或空字符串\n   * @param {*} paramUserUniqueId 要上报的火山用户唯一ID\n   * @returns\n   */\n  setUserUniqueId(paramUserUniqueId) {\n    if (!this.isVolcengine) {\n      return\n    }\n    const userUniqueId = paramUserUniqueId || this.nullProp\n    try {\n      this.uniPluginObject.setUserUniqueId(userUniqueId)\n    } catch (e) {}\n  }\n  // 获取uni-app的插件\n  getuniPluginObject() {\n    return this.uniPluginObject\n  }\n  // 获取项目是否接入了火山SDK\n  getIsVolcengine() {\n    return this.isVolcengine\n  }\n  /**\n   * 上报接口埋点\n   * @param {Object} param\n   */\n  collectApi(param) {\n    const pages = this.getCurrentPagesArr()\n    this.changeCurrentPage(pages)\n    const currentUrl = this.pages[0]\n    const commonAttr = this.getCommonAttr(currentUrl)\n    const apiParam = {\n      api_name: param.apiName, // 接口名称\n      is_success: param.isSuccess, // 是否成功\n      api_time_cost: param.apiTimeCost // 接口请求耗费的时间\n    }\n    let finalParam = {\n      ...commonAttr,\n      ...apiParam\n    }\n    delete param.apiName\n    delete param.isSuccess\n    delete param.apiTimeCost\n    finalParam = {\n      ...finalParam,\n      ...param\n    }\n    try {\n      this.uniPluginObject.onEventV3(\"api_request\", finalParam)\n    } catch (e) {}\n  }\n\n  /**\n   *\n   * @param {*} path 路径\n   * @param {*} param 用户自定义的参数\n   */\n  customPageview(path, param) {\n    if (!this.volcengineProps[path]) {\n      this.updateRouter(this.routerInfo, this.tarBar)\n    }\n    const lastPageVisitTime = this.getCacheTime()\n    const nowTime = new Date().getTime()\n    this.setCacheTime(nowTime)\n    const commonAttr = this.getCommonAttr(path)\n    const durationParam = {\n      custom_page_duration: nowTime - lastPageVisitTime\n    }\n    const finalParam = {\n      ...commonAttr,\n      ...durationParam,\n      ...param\n    }\n    this.uniPluginObject.onEventV3(\"custom_pageview\", finalParam)\n  }\n  // 监听初始化进入页面\n  customPageviewOpen(param) {\n    if (!_.isObject(param)) {\n      param = {}\n    }\n    try {\n      // 是否是用vebview打开了H5，如果打开了，则不触发Open\n      const webviewVisible = this.checkVebviewVisible()\n      if (webviewVisible) {\n        return\n      }\n      const nowTime = new Date().getTime()\n      this.setCacheTime(nowTime) // 重新记录页面停留时间\n      let currentUrl\n      if (this.pages.length > 0) {\n        currentUrl = this.pages[0]\n      } else {\n        // 获取不到当前页面只能获取上一次访问的\n        currentUrl = this.getCacheVisitUrl()\n      }\n      // 如果没有任何匹配的，那就是首页\n      if (!currentUrl) {\n        currentUrl = \"/\" + this.routerInfo[0].path\n      }\n      this.setCacheVisitUrl(currentUrl)\n      if (!this.volcengineProps[currentUrl]) {\n        this.updateRouter(this.routerInfo, this.tarBar)\n      }\n\n      const commonAttr = this.getCommonAttr(currentUrl)\n      const finalParam = {\n        ...commonAttr,\n        ...param\n      }\n      this.uniPluginObject.onEventV3(\"custom_pageview_open\", finalParam)\n    } catch (e) {\n    }\n  }\n\n  handleWebviewOnHide() {\n    try {\n      // 是否是iOS\n      const agent = plus.navigator.getUserAgent()\n      const isIOS = agent.match(/(iphone os)/i) // iOS终端\n      const nowTime = new Date().getTime()\n      this.setCacheTime(nowTime)\n      if (isIOS) {\n        const webwiewCache = this.getWebviewCache()\n        const lastPageVisitTime = webwiewCache[this.cacheTimeKey] || 0\n        delete webwiewCache[this.cacheTimeKey]\n        const duration = nowTime - lastPageVisitTime\n        const durationParam = {\n          custom_page_duration: duration\n        }\n        const param = {\n          ...webwiewCache,\n          ...durationParam\n        }\n        this.uniPluginObject.onEventV3(\"custom_pageview\", param)\n        if (this.isIOSWebviewPause) {\n          this.uniPluginObject.onEventV3(\"custom_pagview_hide\", webwiewCache)\n        }\n      }\n    } catch (e) {\n    }\n  }\n  /**\n   * 监听隐藏页面\n   * @param\n   * @returns\n   */\n  customPageviewHide(param) {\n    try {\n      const isWebviewHide = this.checkVebviewVisible()\n      if (isWebviewHide) {\n        const agent = plus.navigator.getUserAgent()\n        const isIOS = agent.match(/(iphone os)/i) // iOS终端\n        if (isIOS) {\n          this.isIOSWebviewPause = true\n          this.handleWebviewOnHide()\n        }\n        return\n      }\n      if (!_.isObject(param)) {\n        param = {}\n      }\n      const pages = this.getCurrentPagesArr()\n      this.changeCurrentPage(pages)\n      let currentUrl = this.getCacheVisitUrl()\n      if (this.pages.length > 0) {\n        currentUrl = this.pages[0]\n      }\n      // 如果没有任何匹配的，那就是首页\n      if (!currentUrl) {\n        currentUrl = \"/\" + this.routerInfo[0].path\n      }\n\n      if (!this.volcengineProps[currentUrl]) {\n        this.updateRouter(this.routerInfo, this.tarBar)\n      }\n      const commonAttr = this.getCommonAttr(currentUrl)\n      const finalParam = {\n        ...commonAttr,\n        ...param\n      }\n      this.uniPluginObject.onEventV3(\"custom_pageview_hide\", finalParam)\n      // 上报当前页面的停留时间，然后onShow的时候会重新改写当前页面访问时间\n      this.customPageview(currentUrl, param)\n    } catch (e) {\n    }\n  }\n  /**\n   * 用户上报火山自定义事件\n   * @param {*} name 自定义的事件名称\n   * @param {*} param 自定义的事件参数\n   * @returns\n   */\n  reportEvent(name, param) {\n    // 防止 自定义 custom_pageview 事件的时候没有执行对应逻辑\n    const oldPath =\n      this.pages && this.pages.length ? this.pages[0] : this.routerInfo[0].path\n    const pages = this.getCurrentPagesArr()\n    this.changeCurrentPage(pages)\n    const currentUrl = this.pages[0]\n    if (name === \"custom_pageview\") {\n      this.setCacheVisitUrl(oldPath, param)\n    }\n    const commonAttr = this.getCommonAttr(currentUrl)\n    const finalParam = {\n      ...commonAttr,\n      ...param\n    }\n    try {\n      this.uniPluginObject.onEventV3(name, finalParam)\n    } catch (e) {}\n  }\n  /**\n   * 设置用户属性\n   * @param {*} profileParam 用户属性\n   * @returns\n   */\n  profileSet(profileParam) {\n    try {\n      this.uniPluginObject.profileSet(profileParam)\n    } catch (e) {}\n  }\n  sdkVersionProfileSet(param) {\n    try {\n      const sdkVersion = this.getSdkVersion()\n      const finalParam = {\n        ...param,\n        ...sdkVersion\n      }\n      this.profileSet(finalParam)\n    } catch (e) {}\n  }\n\n  appVersionProfileSet(param) {\n    try {\n      const appVersion = this.getAppVersion()\n      const finalParam = {\n        ...param,\n        ...appVersion\n      }\n      this.profileSet(finalParam)\n    } catch (e) {}\n  }\n\n  // 判断是否有加载webview 以及 webivew 是否可见\n  checkVebviewVisible() {\n    let visible = false\n    const webviewList = plus.webview.getDisplayWebview()\n    if (webviewList.length) {\n      const reg = /http[s]?:\\/\\/[\\w.]+[\\w\\/]*[\\w.]*\\??[\\w=&\\+\\%]*/\n      webviewList.filter((item) => {\n        return reg.test(item.getURL()) && item.isVisible()\n      })\n      visible = webviewList.length > 0\n    }\n    return visible\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}