{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _ from \"lodash\";\nimport $$Rangers from \"@datarangers/sdk-mp\"; // 火山微信小程序的sdk\nimport $router from \"../common/uni-router\";\nimport { Volcengine } from \"../common\";\nimport { checkInitParams } from \"./validate\";\nexport default class WxmpVolcengine extends Volcengine {\n  constructor(param) {\n    const initParams = _.isEmpty(param) ? {} : _.isObject(param) ? param : {};\n    initParams.type = 2;\n    // 表示是微信小程序端的SDK\n    super(initParams);\n    try {\n      this.wxmpPlugins = $$Rangers;\n      this.routerInfo = UNI_ROUTES.pages;\n      this.tarBar = UNI_ROUTES.tarBar ? UNI_ROUTES.tarBar.list : [];\n      this.isInitWXMPSdk = false;\n      this.initWXMPSdk(param);\n    } catch (e) {\n      this.reportException(\"constructor\");\n    }\n  }\n  // 开始写入路由、访问时间、访问路径的缓存到系统缓存中\n  start() {\n    try {\n      if (this.isInitWXMPSdk) {\n        if (UNI_ROUTES.subPackages) {\n          this.handleSubPackagesList(UNI_ROUTES.subPackages);\n        }\n        this.init(this.routerInfo, this.tarBar);\n      }\n    } catch (e) {\n      this.reportException(\"start\");\n    }\n  }\n\n  // 监听路由变更\n  listenRouter(param) {\n    try {\n      if (this.isInitWXMPSdk) {\n        if (!_.isObject(param)) {\n          param = {};\n        }\n        $router.onchange = (n, o) => {\n          if (!this.isVolcengine) {\n            return;\n          }\n          const lastVisitUrl = this.getCacheVisitUrl();\n          const nowPath = n.fullPath;\n          if (lastVisitUrl === nowPath) {\n            return;\n          }\n          this.setCacheVisitUrl(nowPath);\n          this.customPageview(o.fullPath, param);\n        };\n      }\n    } catch (e) {\n      this.reportException(\"listenRouter\");\n    }\n  }\n\n  // 初始化\n  initWXMPSdk(param) {\n    try {\n      const isValid = checkInitParams(param);\n      if (isValid) {\n        if (!param.enable_profile) {\n          param.enable_profile = true;\n        }\n        if (!param.enable_filter_crawler) {\n          param.enable_filter_crawler = true;\n        }\n        this.wxmpPlugins.init(param);\n        this.wxmpPlugins.send();\n        this.isInitWXMPSdk = true;\n      }\n    } catch (e) {\n      this.reportException(\"initWXMPSdk\");\n    }\n  }\n\n  /**\n   * 接口采集事件\n   * @param {*} param\n   */\n  collectApi(param) {\n    try {\n      if (!this.isInitWXMPSdk) {\n        return;\n      }\n      const pages = this.getCurrentPagesArr();\n      this.changeCurrentPage(pages);\n      const currentUrl = this.pages[0];\n      const commonAttr = this.getCommonAttr(currentUrl);\n      const collectParam = {};\n      Object.keys(param).forEach(key => {\n        let targetKey = key;\n        if ([\"apiName\", \"isSuccess\", \"apiTimeCost\"].includes(key)) {\n          targetKey = key.replace(/[A-Z]/g, key => `_${key.toLowerCase()}`);\n        }\n        collectParam[targetKey] = param[key];\n      });\n      const finalParam = {\n        ...commonAttr,\n        ...collectParam\n      };\n      this.wxmpPlugins.event(\"api_request\", finalParam);\n    } catch (e) {\n      this.reportException(\"collectApi\");\n    }\n  }\n  customPageviewLaunch(param) {\n    try {\n      if (this.getIsLaunch() || this.getIsHide()) {\n        const currentUrl = this.getCacheVisitUrl();\n        this.setIsHide(false);\n        this.customPageview(currentUrl, param);\n      }\n      this.setIsLaunch(true);\n    } catch (e) {\n      this.reportException(\"customPageviewLaunch\");\n    }\n  }\n  customPageviewOpen(param) {\n    try {\n      const that = this;\n      this.setIsLaunch(true); // 不然会出现关闭之后进入首页在刷新，没有上报停留时间\n      setTimeout(function () {\n        that.setIsHide(false);\n        that.handleCustomPageviewOpen(param);\n      }, 500);\n    } catch (e) {\n      this.reportException(\"customPageviewOpen\");\n    }\n  }\n  // 监听初始化进入页面\n  handleCustomPageviewOpen(param) {\n    if (!this.isInitWXMPSdk) {\n      return;\n    }\n    if (!_.isObject(param)) {\n      param = {};\n    }\n    try {\n      const pages = this.getCurrentPagesArr();\n      this.changeCurrentPage(pages);\n      let currentUrl;\n      if (this.pages.length > 0) {\n        currentUrl = this.pages[0];\n      } else {\n        // 获取不到当前页面只能取首页了\n        currentUrl = \"/\" + this.routerInfo[0].path;\n      }\n      const nowTime = new Date().getTime();\n      this.setCacheTime(nowTime); // 重新记录页面停留时间\n      this.setCacheVisitUrl(currentUrl);\n      if (!this.volcengineProps[currentUrl]) {\n        this.updateRouter(this.routerInfo, this.tarBar);\n      }\n      const commonAttr = this.getCommonAttr(currentUrl);\n      const finalParam = {\n        ...commonAttr,\n        ...param\n      };\n      this.wxmpPlugins.event(\"custom_pageview_open\", finalParam);\n    } catch (e) {\n      this.reportException(\"handleCustomPageviewOpen\");\n    }\n  }\n\n  /**\n   * 监听隐藏页面\n   * @param\n   * @returns\n   */\n  customPageviewHide(param) {\n    try {\n      if (!_.isObject(param)) {\n        param = {};\n      }\n      const pages = this.getCurrentPagesArr();\n      this.changeCurrentPage(pages);\n      let currentUrl = this.getCacheVisitUrl();\n      if (this.pages.length > 0) {\n        currentUrl = this.pages[0];\n      }\n      // 如果没有任何匹配的，那就是首页\n      if (!currentUrl) {\n        currentUrl = \"/\" + this.routerInfo[0].path;\n      }\n      if (!this.volcengineProps[currentUrl]) {\n        this.updateRouter(this.routerInfo, this.tarBar);\n      }\n      const commonAttr = this.getCommonAttr(currentUrl);\n      const finalParam = {\n        ...commonAttr,\n        ...param\n      };\n      this.wxmpPlugins.event(\"custom_pageview_hide\", finalParam);\n      // 上报当前页面的停留时间，然后onShow的时候会重新改写当前页面访问时间\n      this.customPageview(currentUrl, param);\n      this.setIsLaunch(false);\n      this.setIsHide(true);\n    } catch (e) {\n      this.reportException(\"customPageviewHide\");\n    }\n  }\n  /**\n   * 用户上报火山自定义事件\n   * @param {*} name 自定义的事件名称\n   * @param {*} param 自定义的事件参数\n   * @returns\n   */\n  reportEvent(name, param) {\n    try {\n      // 防止 自定义 custom_pageview 事件的时候没有执行对应逻辑\n      const oldPath = this.pages && this.pages.length ? this.pages[0] : this.routerInfo[0].path;\n      const pages = this.getCurrentPagesArr();\n      this.changeCurrentPage(pages);\n      const currentUrl = this.pages[0];\n      if (name === \"custom_pageview\") {\n        this.setCacheVisitUrl(oldPath, param);\n      }\n      const commonAttr = this.getCommonAttr(currentUrl);\n      const finalParam = {\n        ...commonAttr,\n        ...param\n      };\n      this.wxmpPlugins.event(name, finalParam);\n    } catch (e) {\n      this.reportException(\"reportEvent\");\n    }\n  }\n  setUserUniqueId(paramUserUniqueId) {\n    if (!this.isInitWXMPSdk) {\n      return;\n    }\n    try {\n      const userUniqueId = paramUserUniqueId || this.nullProp;\n      this.wxmpPlugins.setUserUniqueID(userUniqueId);\n    } catch (e) {\n      this.reportException(\"setUserUniqueId\");\n    }\n  }\n\n  /**\n   * 设置用户属性\n   * @param {*} profileParam 用户属性\n   * @returns\n   */\n  profileSet(profileParam) {\n    try {\n      this.wxmpPlugins.profileSet(profileParam);\n    } catch (e) {\n      this.reportException(\"profileSet\");\n    }\n  }\n  sdkVersionProfileSet(param) {\n    try {\n      const sdkVersion = this.getSdkVersion();\n      const finalParam = {\n        ...param,\n        ...sdkVersion\n      };\n      this.profileSet(finalParam);\n    } catch (e) {\n      this.reportException(\"sdkVersionProfileSet\");\n    }\n  }\n  appVersionProfileSet(param) {\n    try {\n      const appVersion = this.getAppVersion();\n      const finalParam = {\n        ...param,\n        ...appVersion\n      };\n      this.profileSet(finalParam);\n    } catch (e) {\n      this.reportException(\"appVersionProfileSet\");\n    }\n  }\n\n  /**\n   * 上报页面访问事件\n   * @param {*} path 路径\n   * @param {*} param 用户自定义的参数\n   */\n  customPageview(path, param) {\n    try {\n      if (!this.volcengineProps[path]) {\n        this.updateRouter(this.routerInfo, this.tarBar);\n      }\n      const lastPageVisitTime = this.getCacheTime();\n      const nowTime = new Date().getTime();\n      this.setCacheTime(nowTime);\n      const commonAttr = this.getCommonAttr(path);\n      const isHide = this.getIsHide();\n      const durationParam = {\n        custom_page_duration: isHide ? 0 : nowTime - lastPageVisitTime\n      };\n      const finalParam = {\n        ...commonAttr,\n        ...durationParam,\n        ...param\n      };\n      this.setIsHide(false);\n      this.wxmpPlugins.event(\"custom_pageview\", finalParam);\n    } catch (e) {\n      this.reportException(\"customPageview\");\n    }\n  }\n  handleSubPackagesList(packageList) {\n    try {\n      packageList.forEach(element => {\n        const rootPath = element.root + \"/\";\n        if (element.pages && element.pages.length) {\n          element.pages.forEach(item => {\n            const subItem = item;\n            subItem.path = rootPath + item.path;\n            this.routerInfo.push(subItem);\n          });\n        }\n      });\n    } catch (e) {\n      this.reportException(\"handleSubPackagesList\");\n    }\n  }\n\n  /**\n   * 上报异常事件\n   * @param {*} method_name 异常API的名称\n   */\n  reportException(exception_method_name) {\n    try {\n      const reportInfo = {\n        exception_method_name,\n        exception_type: \"analytics_sdk\",\n        exception_platform: \"mp-weixin\"\n      };\n      this.wxmpPlugins.event(this.exceptionThrowEventName, reportInfo);\n    } catch (e) {}\n  }\n  // // 设置事件公共属性\n  // setGlobalEventProperty(param) {\n  //   const keyArr = Object.keys(param)\n  //   if (keyArr.length) {\n  //     keyArr.forEach((item) => {\n  //       this.wxmpPlugins.setHeaderInfo(item, param[item])\n  //     })\n  //   }\n  // }\n  // // 移除事件公共属性\n  // removeGlobalEventPropery(publicKey) {\n  //   this.wxmpPlugins.removeHeaderInfo(publicKey)\n  // }\n}","map":{"version":3,"names":["_","$$Rangers","$router","Volcengine","checkInitParams","WxmpVolcengine","constructor","param","initParams","isEmpty","isObject","type","wxmpPlugins","routerInfo","UNI_ROUTES","pages","tarBar","list","isInitWXMPSdk","initWXMPSdk","e","reportException","start","subPackages","handleSubPackagesList","init","listenRouter","onchange","n","o","isVolcengine","lastVisitUrl","getCacheVisitUrl","nowPath","fullPath","setCacheVisitUrl","customPageview","isValid","enable_profile","enable_filter_crawler","send","collectApi","getCurrentPagesArr","changeCurrentPage","currentUrl","commonAttr","getCommonAttr","collectParam","Object","keys","forEach","key","targetKey","includes","replace","toLowerCase","finalParam","event","customPageviewLaunch","getIsLaunch","getIsHide","setIsHide","setIsLaunch","customPageviewOpen","that","setTimeout","handleCustomPageviewOpen","length","path","nowTime","Date","getTime","setCacheTime","volcengineProps","updateRouter","customPageviewHide","reportEvent","name","oldPath","setUserUniqueId","paramUserUniqueId","userUniqueId","nullProp","setUserUniqueID","profileSet","profileParam","sdkVersionProfileSet","sdkVersion","getSdkVersion","appVersionProfileSet","appVersion","getAppVersion","lastPageVisitTime","getCacheTime","isHide","durationParam","custom_page_duration","packageList","element","rootPath","root","item","subItem","push","exception_method_name","reportInfo","exception_type","exception_platform","exceptionThrowEventName"],"sources":["/Users/myproject/vuedemo/node_modules/@cndinfo/cube-analytics-sdk/wxmp/index.js"],"sourcesContent":["import _ from \"lodash\"\nimport $$Rangers from \"@datarangers/sdk-mp\" // 火山微信小程序的sdk\nimport $router from \"../common/uni-router\"\nimport { Volcengine } from \"../common\"\nimport { checkInitParams } from \"./validate\"\nexport default class WxmpVolcengine extends Volcengine {\n  constructor(param) {\n    const initParams = _.isEmpty(param) ? {} : _.isObject(param) ? param : {}\n    initParams.type = 2\n    // 表示是微信小程序端的SDK\n    super(initParams)\n    try {\n      this.wxmpPlugins = $$Rangers\n      this.routerInfo = UNI_ROUTES.pages\n      this.tarBar = UNI_ROUTES.tarBar ? UNI_ROUTES.tarBar.list : []\n      this.isInitWXMPSdk = false\n      this.initWXMPSdk(param)\n    } catch (e) {\n      this.reportException(\"constructor\")\n    }\n  }\n  // 开始写入路由、访问时间、访问路径的缓存到系统缓存中\n  start() {\n    try {\n      if (this.isInitWXMPSdk) {\n        if (UNI_ROUTES.subPackages) {\n          this.handleSubPackagesList(UNI_ROUTES.subPackages)\n        }\n        this.init(this.routerInfo, this.tarBar)\n      }\n    } catch (e) {\n      this.reportException(\"start\")\n    }\n  }\n\n  // 监听路由变更\n  listenRouter(param) {\n    try {\n      if (this.isInitWXMPSdk) {\n        if (!_.isObject(param)) {\n          param = {}\n        }\n        $router.onchange = (n, o) => {\n          if (!this.isVolcengine) {\n            return\n          }\n          const lastVisitUrl = this.getCacheVisitUrl()\n          const nowPath = n.fullPath\n          if (lastVisitUrl === nowPath) {\n            return\n          }\n          this.setCacheVisitUrl(nowPath)\n          this.customPageview(o.fullPath, param)\n        }\n      }\n    } catch (e) {\n      this.reportException(\"listenRouter\")\n    }\n  }\n\n  // 初始化\n  initWXMPSdk(param) {\n    try {\n      const isValid = checkInitParams(param)\n      if (isValid) {\n        if (!param.enable_profile) {\n          param.enable_profile = true\n        }\n        if (!param.enable_filter_crawler) {\n          param.enable_filter_crawler = true\n        }\n        this.wxmpPlugins.init(param)\n        this.wxmpPlugins.send()\n        this.isInitWXMPSdk = true\n      }\n    } catch (e) {\n      this.reportException(\"initWXMPSdk\")\n    }\n  }\n\n  /**\n   * 接口采集事件\n   * @param {*} param\n   */\n  collectApi(param) {\n    try {\n      if (!this.isInitWXMPSdk) {\n        return\n      }\n      const pages = this.getCurrentPagesArr()\n      this.changeCurrentPage(pages)\n      const currentUrl = this.pages[0]\n      const commonAttr = this.getCommonAttr(currentUrl)\n      const collectParam = {}\n      Object.keys(param).forEach((key) => {\n        let targetKey = key\n        if ([\"apiName\", \"isSuccess\", \"apiTimeCost\"].includes(key)) {\n          targetKey = key.replace(/[A-Z]/g, (key) => `_${key.toLowerCase()}`)\n        }\n        collectParam[targetKey] = param[key]\n      })\n      const finalParam = {\n        ...commonAttr,\n        ...collectParam\n      }\n      this.wxmpPlugins.event(\"api_request\", finalParam)\n    } catch (e) {\n      this.reportException(\"collectApi\")\n    }\n  }\n  customPageviewLaunch(param) {\n    try {\n      if (this.getIsLaunch() || this.getIsHide()) {\n        const currentUrl = this.getCacheVisitUrl()\n        this.setIsHide(false)\n        this.customPageview(currentUrl, param)\n      }\n      this.setIsLaunch(true)\n    } catch (e) {\n      this.reportException(\"customPageviewLaunch\")\n    }\n  }\n  customPageviewOpen(param) {\n    try {\n      const that = this\n      this.setIsLaunch(true) // 不然会出现关闭之后进入首页在刷新，没有上报停留时间\n      setTimeout(function() {\n        that.setIsHide(false)\n        that.handleCustomPageviewOpen(param)\n      }, 500)\n    } catch (e) {\n      this.reportException(\"customPageviewOpen\")\n    }\n  }\n  // 监听初始化进入页面\n  handleCustomPageviewOpen(param) {\n    if (!this.isInitWXMPSdk) {\n      return\n    }\n    if (!_.isObject(param)) {\n      param = {}\n    }\n    try {\n      const pages = this.getCurrentPagesArr()\n      this.changeCurrentPage(pages)\n      let currentUrl\n      if (this.pages.length > 0) {\n        currentUrl = this.pages[0]\n      } else {\n        // 获取不到当前页面只能取首页了\n        currentUrl = \"/\" + this.routerInfo[0].path\n      }\n      const nowTime = new Date().getTime()\n      this.setCacheTime(nowTime) // 重新记录页面停留时间\n      this.setCacheVisitUrl(currentUrl)\n\n      if (!this.volcengineProps[currentUrl]) {\n        this.updateRouter(this.routerInfo, this.tarBar)\n      }\n\n      const commonAttr = this.getCommonAttr(currentUrl)\n      const finalParam = {\n        ...commonAttr,\n        ...param\n      }\n      this.wxmpPlugins.event(\"custom_pageview_open\", finalParam)\n    } catch (e) {\n      this.reportException(\"handleCustomPageviewOpen\")\n    }\n  }\n\n  /**\n   * 监听隐藏页面\n   * @param\n   * @returns\n   */\n  customPageviewHide(param) {\n    try {\n      if (!_.isObject(param)) {\n        param = {}\n      }\n      const pages = this.getCurrentPagesArr()\n      this.changeCurrentPage(pages)\n      let currentUrl = this.getCacheVisitUrl()\n      if (this.pages.length > 0) {\n        currentUrl = this.pages[0]\n      }\n      // 如果没有任何匹配的，那就是首页\n      if (!currentUrl) {\n        currentUrl = \"/\" + this.routerInfo[0].path\n      }\n\n      if (!this.volcengineProps[currentUrl]) {\n        this.updateRouter(this.routerInfo, this.tarBar)\n      }\n      const commonAttr = this.getCommonAttr(currentUrl)\n      const finalParam = {\n        ...commonAttr,\n        ...param\n      }\n\n      this.wxmpPlugins.event(\"custom_pageview_hide\", finalParam)\n      // 上报当前页面的停留时间，然后onShow的时候会重新改写当前页面访问时间\n      this.customPageview(currentUrl, param)\n      this.setIsLaunch(false)\n      this.setIsHide(true)\n    } catch (e) {\n      this.reportException(\"customPageviewHide\")\n    }\n  }\n  /**\n   * 用户上报火山自定义事件\n   * @param {*} name 自定义的事件名称\n   * @param {*} param 自定义的事件参数\n   * @returns\n   */\n  reportEvent(name, param) {\n    try {\n      // 防止 自定义 custom_pageview 事件的时候没有执行对应逻辑\n      const oldPath =\n        this.pages && this.pages.length\n          ? this.pages[0]\n          : this.routerInfo[0].path\n      const pages = this.getCurrentPagesArr()\n      this.changeCurrentPage(pages)\n      const currentUrl = this.pages[0]\n      if (name === \"custom_pageview\") {\n        this.setCacheVisitUrl(oldPath, param)\n      }\n      const commonAttr = this.getCommonAttr(currentUrl)\n      const finalParam = {\n        ...commonAttr,\n        ...param\n      }\n      this.wxmpPlugins.event(name, finalParam)\n    } catch (e) {\n      this.reportException(\"reportEvent\")\n    }\n  }\n\n  setUserUniqueId(paramUserUniqueId) {\n    if (!this.isInitWXMPSdk) {\n      return\n    }\n    try {\n      const userUniqueId = paramUserUniqueId || this.nullProp\n      this.wxmpPlugins.setUserUniqueID(userUniqueId)\n    } catch (e) {\n      this.reportException(\"setUserUniqueId\")\n    }\n  }\n\n  /**\n   * 设置用户属性\n   * @param {*} profileParam 用户属性\n   * @returns\n   */\n  profileSet(profileParam) {\n    try {\n      this.wxmpPlugins.profileSet(profileParam)\n    } catch (e) {\n      this.reportException(\"profileSet\")\n    }\n  }\n  sdkVersionProfileSet(param) {\n    try {\n      const sdkVersion = this.getSdkVersion()\n      const finalParam = {\n        ...param,\n        ...sdkVersion\n      }\n      this.profileSet(finalParam)\n    } catch (e) {\n      this.reportException(\"sdkVersionProfileSet\")\n    }\n  }\n\n  appVersionProfileSet(param) {\n    try {\n      const appVersion = this.getAppVersion()\n      const finalParam = {\n        ...param,\n        ...appVersion\n      }\n      this.profileSet(finalParam)\n    } catch (e) {\n      this.reportException(\"appVersionProfileSet\")\n    }\n  }\n\n  /**\n   * 上报页面访问事件\n   * @param {*} path 路径\n   * @param {*} param 用户自定义的参数\n   */\n  customPageview(path, param) {\n    try {\n      if (!this.volcengineProps[path]) {\n        this.updateRouter(this.routerInfo, this.tarBar)\n      }\n      const lastPageVisitTime = this.getCacheTime()\n      const nowTime = new Date().getTime()\n      this.setCacheTime(nowTime)\n      const commonAttr = this.getCommonAttr(path)\n      const isHide = this.getIsHide()\n      const durationParam = {\n        custom_page_duration: isHide ? 0 : nowTime - lastPageVisitTime\n      }\n      const finalParam = {\n        ...commonAttr,\n        ...durationParam,\n        ...param\n      }\n      this.setIsHide(false)\n      this.wxmpPlugins.event(\"custom_pageview\", finalParam)\n    } catch (e) {\n      this.reportException(\"customPageview\")\n    }\n  }\n\n  handleSubPackagesList(packageList) {\n    try {\n      packageList.forEach((element) => {\n        const rootPath = element.root + \"/\"\n        if (element.pages && element.pages.length) {\n          element.pages.forEach((item) => {\n            const subItem = item\n            subItem.path = rootPath + item.path\n            this.routerInfo.push(subItem)\n          })\n        }\n      })\n    } catch (e) {\n      this.reportException(\"handleSubPackagesList\")\n    }\n  }\n\n  /**\n   * 上报异常事件\n   * @param {*} method_name 异常API的名称\n   */\n  reportException(exception_method_name) {\n    try {\n      const reportInfo = {\n        exception_method_name,\n        exception_type: \"analytics_sdk\",\n        exception_platform: \"mp-weixin\"\n      }\n      this.wxmpPlugins.event(this.exceptionThrowEventName, reportInfo)\n    } catch (e) {}\n  }\n  // // 设置事件公共属性\n  // setGlobalEventProperty(param) {\n  //   const keyArr = Object.keys(param)\n  //   if (keyArr.length) {\n  //     keyArr.forEach((item) => {\n  //       this.wxmpPlugins.setHeaderInfo(item, param[item])\n  //     })\n  //   }\n  // }\n  // // 移除事件公共属性\n  // removeGlobalEventPropery(publicKey) {\n  //   this.wxmpPlugins.removeHeaderInfo(publicKey)\n  // }\n}\n"],"mappings":";AAAA,OAAOA,CAAC,MAAM,QAAQ;AACtB,OAAOC,SAAS,MAAM,qBAAqB,EAAC;AAC5C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAASC,UAAU,QAAQ,WAAW;AACtC,SAASC,eAAe,QAAQ,YAAY;AAC5C,eAAe,MAAMC,cAAc,SAASF,UAAU,CAAC;EACrDG,WAAWA,CAACC,KAAK,EAAE;IACjB,MAAMC,UAAU,GAAGR,CAAC,CAACS,OAAO,CAACF,KAAK,CAAC,GAAG,CAAC,CAAC,GAAGP,CAAC,CAACU,QAAQ,CAACH,KAAK,CAAC,GAAGA,KAAK,GAAG,CAAC,CAAC;IACzEC,UAAU,CAACG,IAAI,GAAG,CAAC;IACnB;IACA,KAAK,CAACH,UAAU,CAAC;IACjB,IAAI;MACF,IAAI,CAACI,WAAW,GAAGX,SAAS;MAC5B,IAAI,CAACY,UAAU,GAAGC,UAAU,CAACC,KAAK;MAClC,IAAI,CAACC,MAAM,GAAGF,UAAU,CAACE,MAAM,GAAGF,UAAU,CAACE,MAAM,CAACC,IAAI,GAAG,EAAE;MAC7D,IAAI,CAACC,aAAa,GAAG,KAAK;MAC1B,IAAI,CAACC,WAAW,CAACZ,KAAK,CAAC;IACzB,CAAC,CAAC,OAAOa,CAAC,EAAE;MACV,IAAI,CAACC,eAAe,CAAC,aAAa,CAAC;IACrC;EACF;EACA;EACAC,KAAKA,CAAA,EAAG;IACN,IAAI;MACF,IAAI,IAAI,CAACJ,aAAa,EAAE;QACtB,IAAIJ,UAAU,CAACS,WAAW,EAAE;UAC1B,IAAI,CAACC,qBAAqB,CAACV,UAAU,CAACS,WAAW,CAAC;QACpD;QACA,IAAI,CAACE,IAAI,CAAC,IAAI,CAACZ,UAAU,EAAE,IAAI,CAACG,MAAM,CAAC;MACzC;IACF,CAAC,CAAC,OAAOI,CAAC,EAAE;MACV,IAAI,CAACC,eAAe,CAAC,OAAO,CAAC;IAC/B;EACF;;EAEA;EACAK,YAAYA,CAACnB,KAAK,EAAE;IAClB,IAAI;MACF,IAAI,IAAI,CAACW,aAAa,EAAE;QACtB,IAAI,CAAClB,CAAC,CAACU,QAAQ,CAACH,KAAK,CAAC,EAAE;UACtBA,KAAK,GAAG,CAAC,CAAC;QACZ;QACAL,OAAO,CAACyB,QAAQ,GAAG,CAACC,CAAC,EAAEC,CAAC,KAAK;UAC3B,IAAI,CAAC,IAAI,CAACC,YAAY,EAAE;YACtB;UACF;UACA,MAAMC,YAAY,GAAG,IAAI,CAACC,gBAAgB,CAAC,CAAC;UAC5C,MAAMC,OAAO,GAAGL,CAAC,CAACM,QAAQ;UAC1B,IAAIH,YAAY,KAAKE,OAAO,EAAE;YAC5B;UACF;UACA,IAAI,CAACE,gBAAgB,CAACF,OAAO,CAAC;UAC9B,IAAI,CAACG,cAAc,CAACP,CAAC,CAACK,QAAQ,EAAE3B,KAAK,CAAC;QACxC,CAAC;MACH;IACF,CAAC,CAAC,OAAOa,CAAC,EAAE;MACV,IAAI,CAACC,eAAe,CAAC,cAAc,CAAC;IACtC;EACF;;EAEA;EACAF,WAAWA,CAACZ,KAAK,EAAE;IACjB,IAAI;MACF,MAAM8B,OAAO,GAAGjC,eAAe,CAACG,KAAK,CAAC;MACtC,IAAI8B,OAAO,EAAE;QACX,IAAI,CAAC9B,KAAK,CAAC+B,cAAc,EAAE;UACzB/B,KAAK,CAAC+B,cAAc,GAAG,IAAI;QAC7B;QACA,IAAI,CAAC/B,KAAK,CAACgC,qBAAqB,EAAE;UAChChC,KAAK,CAACgC,qBAAqB,GAAG,IAAI;QACpC;QACA,IAAI,CAAC3B,WAAW,CAACa,IAAI,CAAClB,KAAK,CAAC;QAC5B,IAAI,CAACK,WAAW,CAAC4B,IAAI,CAAC,CAAC;QACvB,IAAI,CAACtB,aAAa,GAAG,IAAI;MAC3B;IACF,CAAC,CAAC,OAAOE,CAAC,EAAE;MACV,IAAI,CAACC,eAAe,CAAC,aAAa,CAAC;IACrC;EACF;;EAEA;AACF;AACA;AACA;EACEoB,UAAUA,CAAClC,KAAK,EAAE;IAChB,IAAI;MACF,IAAI,CAAC,IAAI,CAACW,aAAa,EAAE;QACvB;MACF;MACA,MAAMH,KAAK,GAAG,IAAI,CAAC2B,kBAAkB,CAAC,CAAC;MACvC,IAAI,CAACC,iBAAiB,CAAC5B,KAAK,CAAC;MAC7B,MAAM6B,UAAU,GAAG,IAAI,CAAC7B,KAAK,CAAC,CAAC,CAAC;MAChC,MAAM8B,UAAU,GAAG,IAAI,CAACC,aAAa,CAACF,UAAU,CAAC;MACjD,MAAMG,YAAY,GAAG,CAAC,CAAC;MACvBC,MAAM,CAACC,IAAI,CAAC1C,KAAK,CAAC,CAAC2C,OAAO,CAAEC,GAAG,IAAK;QAClC,IAAIC,SAAS,GAAGD,GAAG;QACnB,IAAI,CAAC,SAAS,EAAE,WAAW,EAAE,aAAa,CAAC,CAACE,QAAQ,CAACF,GAAG,CAAC,EAAE;UACzDC,SAAS,GAAGD,GAAG,CAACG,OAAO,CAAC,QAAQ,EAAGH,GAAG,IAAM,IAAGA,GAAG,CAACI,WAAW,CAAC,CAAE,EAAC,CAAC;QACrE;QACAR,YAAY,CAACK,SAAS,CAAC,GAAG7C,KAAK,CAAC4C,GAAG,CAAC;MACtC,CAAC,CAAC;MACF,MAAMK,UAAU,GAAG;QACjB,GAAGX,UAAU;QACb,GAAGE;MACL,CAAC;MACD,IAAI,CAACnC,WAAW,CAAC6C,KAAK,CAAC,aAAa,EAAED,UAAU,CAAC;IACnD,CAAC,CAAC,OAAOpC,CAAC,EAAE;MACV,IAAI,CAACC,eAAe,CAAC,YAAY,CAAC;IACpC;EACF;EACAqC,oBAAoBA,CAACnD,KAAK,EAAE;IAC1B,IAAI;MACF,IAAI,IAAI,CAACoD,WAAW,CAAC,CAAC,IAAI,IAAI,CAACC,SAAS,CAAC,CAAC,EAAE;QAC1C,MAAMhB,UAAU,GAAG,IAAI,CAACZ,gBAAgB,CAAC,CAAC;QAC1C,IAAI,CAAC6B,SAAS,CAAC,KAAK,CAAC;QACrB,IAAI,CAACzB,cAAc,CAACQ,UAAU,EAAErC,KAAK,CAAC;MACxC;MACA,IAAI,CAACuD,WAAW,CAAC,IAAI,CAAC;IACxB,CAAC,CAAC,OAAO1C,CAAC,EAAE;MACV,IAAI,CAACC,eAAe,CAAC,sBAAsB,CAAC;IAC9C;EACF;EACA0C,kBAAkBA,CAACxD,KAAK,EAAE;IACxB,IAAI;MACF,MAAMyD,IAAI,GAAG,IAAI;MACjB,IAAI,CAACF,WAAW,CAAC,IAAI,CAAC,EAAC;MACvBG,UAAU,CAAC,YAAW;QACpBD,IAAI,CAACH,SAAS,CAAC,KAAK,CAAC;QACrBG,IAAI,CAACE,wBAAwB,CAAC3D,KAAK,CAAC;MACtC,CAAC,EAAE,GAAG,CAAC;IACT,CAAC,CAAC,OAAOa,CAAC,EAAE;MACV,IAAI,CAACC,eAAe,CAAC,oBAAoB,CAAC;IAC5C;EACF;EACA;EACA6C,wBAAwBA,CAAC3D,KAAK,EAAE;IAC9B,IAAI,CAAC,IAAI,CAACW,aAAa,EAAE;MACvB;IACF;IACA,IAAI,CAAClB,CAAC,CAACU,QAAQ,CAACH,KAAK,CAAC,EAAE;MACtBA,KAAK,GAAG,CAAC,CAAC;IACZ;IACA,IAAI;MACF,MAAMQ,KAAK,GAAG,IAAI,CAAC2B,kBAAkB,CAAC,CAAC;MACvC,IAAI,CAACC,iBAAiB,CAAC5B,KAAK,CAAC;MAC7B,IAAI6B,UAAU;MACd,IAAI,IAAI,CAAC7B,KAAK,CAACoD,MAAM,GAAG,CAAC,EAAE;QACzBvB,UAAU,GAAG,IAAI,CAAC7B,KAAK,CAAC,CAAC,CAAC;MAC5B,CAAC,MAAM;QACL;QACA6B,UAAU,GAAG,GAAG,GAAG,IAAI,CAAC/B,UAAU,CAAC,CAAC,CAAC,CAACuD,IAAI;MAC5C;MACA,MAAMC,OAAO,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;MACpC,IAAI,CAACC,YAAY,CAACH,OAAO,CAAC,EAAC;MAC3B,IAAI,CAAClC,gBAAgB,CAACS,UAAU,CAAC;MAEjC,IAAI,CAAC,IAAI,CAAC6B,eAAe,CAAC7B,UAAU,CAAC,EAAE;QACrC,IAAI,CAAC8B,YAAY,CAAC,IAAI,CAAC7D,UAAU,EAAE,IAAI,CAACG,MAAM,CAAC;MACjD;MAEA,MAAM6B,UAAU,GAAG,IAAI,CAACC,aAAa,CAACF,UAAU,CAAC;MACjD,MAAMY,UAAU,GAAG;QACjB,GAAGX,UAAU;QACb,GAAGtC;MACL,CAAC;MACD,IAAI,CAACK,WAAW,CAAC6C,KAAK,CAAC,sBAAsB,EAAED,UAAU,CAAC;IAC5D,CAAC,CAAC,OAAOpC,CAAC,EAAE;MACV,IAAI,CAACC,eAAe,CAAC,0BAA0B,CAAC;IAClD;EACF;;EAEA;AACF;AACA;AACA;AACA;EACEsD,kBAAkBA,CAACpE,KAAK,EAAE;IACxB,IAAI;MACF,IAAI,CAACP,CAAC,CAACU,QAAQ,CAACH,KAAK,CAAC,EAAE;QACtBA,KAAK,GAAG,CAAC,CAAC;MACZ;MACA,MAAMQ,KAAK,GAAG,IAAI,CAAC2B,kBAAkB,CAAC,CAAC;MACvC,IAAI,CAACC,iBAAiB,CAAC5B,KAAK,CAAC;MAC7B,IAAI6B,UAAU,GAAG,IAAI,CAACZ,gBAAgB,CAAC,CAAC;MACxC,IAAI,IAAI,CAACjB,KAAK,CAACoD,MAAM,GAAG,CAAC,EAAE;QACzBvB,UAAU,GAAG,IAAI,CAAC7B,KAAK,CAAC,CAAC,CAAC;MAC5B;MACA;MACA,IAAI,CAAC6B,UAAU,EAAE;QACfA,UAAU,GAAG,GAAG,GAAG,IAAI,CAAC/B,UAAU,CAAC,CAAC,CAAC,CAACuD,IAAI;MAC5C;MAEA,IAAI,CAAC,IAAI,CAACK,eAAe,CAAC7B,UAAU,CAAC,EAAE;QACrC,IAAI,CAAC8B,YAAY,CAAC,IAAI,CAAC7D,UAAU,EAAE,IAAI,CAACG,MAAM,CAAC;MACjD;MACA,MAAM6B,UAAU,GAAG,IAAI,CAACC,aAAa,CAACF,UAAU,CAAC;MACjD,MAAMY,UAAU,GAAG;QACjB,GAAGX,UAAU;QACb,GAAGtC;MACL,CAAC;MAED,IAAI,CAACK,WAAW,CAAC6C,KAAK,CAAC,sBAAsB,EAAED,UAAU,CAAC;MAC1D;MACA,IAAI,CAACpB,cAAc,CAACQ,UAAU,EAAErC,KAAK,CAAC;MACtC,IAAI,CAACuD,WAAW,CAAC,KAAK,CAAC;MACvB,IAAI,CAACD,SAAS,CAAC,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOzC,CAAC,EAAE;MACV,IAAI,CAACC,eAAe,CAAC,oBAAoB,CAAC;IAC5C;EACF;EACA;AACF;AACA;AACA;AACA;AACA;EACEuD,WAAWA,CAACC,IAAI,EAAEtE,KAAK,EAAE;IACvB,IAAI;MACF;MACA,MAAMuE,OAAO,GACX,IAAI,CAAC/D,KAAK,IAAI,IAAI,CAACA,KAAK,CAACoD,MAAM,GAC3B,IAAI,CAACpD,KAAK,CAAC,CAAC,CAAC,GACb,IAAI,CAACF,UAAU,CAAC,CAAC,CAAC,CAACuD,IAAI;MAC7B,MAAMrD,KAAK,GAAG,IAAI,CAAC2B,kBAAkB,CAAC,CAAC;MACvC,IAAI,CAACC,iBAAiB,CAAC5B,KAAK,CAAC;MAC7B,MAAM6B,UAAU,GAAG,IAAI,CAAC7B,KAAK,CAAC,CAAC,CAAC;MAChC,IAAI8D,IAAI,KAAK,iBAAiB,EAAE;QAC9B,IAAI,CAAC1C,gBAAgB,CAAC2C,OAAO,EAAEvE,KAAK,CAAC;MACvC;MACA,MAAMsC,UAAU,GAAG,IAAI,CAACC,aAAa,CAACF,UAAU,CAAC;MACjD,MAAMY,UAAU,GAAG;QACjB,GAAGX,UAAU;QACb,GAAGtC;MACL,CAAC;MACD,IAAI,CAACK,WAAW,CAAC6C,KAAK,CAACoB,IAAI,EAAErB,UAAU,CAAC;IAC1C,CAAC,CAAC,OAAOpC,CAAC,EAAE;MACV,IAAI,CAACC,eAAe,CAAC,aAAa,CAAC;IACrC;EACF;EAEA0D,eAAeA,CAACC,iBAAiB,EAAE;IACjC,IAAI,CAAC,IAAI,CAAC9D,aAAa,EAAE;MACvB;IACF;IACA,IAAI;MACF,MAAM+D,YAAY,GAAGD,iBAAiB,IAAI,IAAI,CAACE,QAAQ;MACvD,IAAI,CAACtE,WAAW,CAACuE,eAAe,CAACF,YAAY,CAAC;IAChD,CAAC,CAAC,OAAO7D,CAAC,EAAE;MACV,IAAI,CAACC,eAAe,CAAC,iBAAiB,CAAC;IACzC;EACF;;EAEA;AACF;AACA;AACA;AACA;EACE+D,UAAUA,CAACC,YAAY,EAAE;IACvB,IAAI;MACF,IAAI,CAACzE,WAAW,CAACwE,UAAU,CAACC,YAAY,CAAC;IAC3C,CAAC,CAAC,OAAOjE,CAAC,EAAE;MACV,IAAI,CAACC,eAAe,CAAC,YAAY,CAAC;IACpC;EACF;EACAiE,oBAAoBA,CAAC/E,KAAK,EAAE;IAC1B,IAAI;MACF,MAAMgF,UAAU,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC;MACvC,MAAMhC,UAAU,GAAG;QACjB,GAAGjD,KAAK;QACR,GAAGgF;MACL,CAAC;MACD,IAAI,CAACH,UAAU,CAAC5B,UAAU,CAAC;IAC7B,CAAC,CAAC,OAAOpC,CAAC,EAAE;MACV,IAAI,CAACC,eAAe,CAAC,sBAAsB,CAAC;IAC9C;EACF;EAEAoE,oBAAoBA,CAAClF,KAAK,EAAE;IAC1B,IAAI;MACF,MAAMmF,UAAU,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC;MACvC,MAAMnC,UAAU,GAAG;QACjB,GAAGjD,KAAK;QACR,GAAGmF;MACL,CAAC;MACD,IAAI,CAACN,UAAU,CAAC5B,UAAU,CAAC;IAC7B,CAAC,CAAC,OAAOpC,CAAC,EAAE;MACV,IAAI,CAACC,eAAe,CAAC,sBAAsB,CAAC;IAC9C;EACF;;EAEA;AACF;AACA;AACA;AACA;EACEe,cAAcA,CAACgC,IAAI,EAAE7D,KAAK,EAAE;IAC1B,IAAI;MACF,IAAI,CAAC,IAAI,CAACkE,eAAe,CAACL,IAAI,CAAC,EAAE;QAC/B,IAAI,CAACM,YAAY,CAAC,IAAI,CAAC7D,UAAU,EAAE,IAAI,CAACG,MAAM,CAAC;MACjD;MACA,MAAM4E,iBAAiB,GAAG,IAAI,CAACC,YAAY,CAAC,CAAC;MAC7C,MAAMxB,OAAO,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;MACpC,IAAI,CAACC,YAAY,CAACH,OAAO,CAAC;MAC1B,MAAMxB,UAAU,GAAG,IAAI,CAACC,aAAa,CAACsB,IAAI,CAAC;MAC3C,MAAM0B,MAAM,GAAG,IAAI,CAAClC,SAAS,CAAC,CAAC;MAC/B,MAAMmC,aAAa,GAAG;QACpBC,oBAAoB,EAAEF,MAAM,GAAG,CAAC,GAAGzB,OAAO,GAAGuB;MAC/C,CAAC;MACD,MAAMpC,UAAU,GAAG;QACjB,GAAGX,UAAU;QACb,GAAGkD,aAAa;QAChB,GAAGxF;MACL,CAAC;MACD,IAAI,CAACsD,SAAS,CAAC,KAAK,CAAC;MACrB,IAAI,CAACjD,WAAW,CAAC6C,KAAK,CAAC,iBAAiB,EAAED,UAAU,CAAC;IACvD,CAAC,CAAC,OAAOpC,CAAC,EAAE;MACV,IAAI,CAACC,eAAe,CAAC,gBAAgB,CAAC;IACxC;EACF;EAEAG,qBAAqBA,CAACyE,WAAW,EAAE;IACjC,IAAI;MACFA,WAAW,CAAC/C,OAAO,CAAEgD,OAAO,IAAK;QAC/B,MAAMC,QAAQ,GAAGD,OAAO,CAACE,IAAI,GAAG,GAAG;QACnC,IAAIF,OAAO,CAACnF,KAAK,IAAImF,OAAO,CAACnF,KAAK,CAACoD,MAAM,EAAE;UACzC+B,OAAO,CAACnF,KAAK,CAACmC,OAAO,CAAEmD,IAAI,IAAK;YAC9B,MAAMC,OAAO,GAAGD,IAAI;YACpBC,OAAO,CAAClC,IAAI,GAAG+B,QAAQ,GAAGE,IAAI,CAACjC,IAAI;YACnC,IAAI,CAACvD,UAAU,CAAC0F,IAAI,CAACD,OAAO,CAAC;UAC/B,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOlF,CAAC,EAAE;MACV,IAAI,CAACC,eAAe,CAAC,uBAAuB,CAAC;IAC/C;EACF;;EAEA;AACF;AACA;AACA;EACEA,eAAeA,CAACmF,qBAAqB,EAAE;IACrC,IAAI;MACF,MAAMC,UAAU,GAAG;QACjBD,qBAAqB;QACrBE,cAAc,EAAE,eAAe;QAC/BC,kBAAkB,EAAE;MACtB,CAAC;MACD,IAAI,CAAC/F,WAAW,CAAC6C,KAAK,CAAC,IAAI,CAACmD,uBAAuB,EAAEH,UAAU,CAAC;IAClE,CAAC,CAAC,OAAOrF,CAAC,EAAE,CAAC;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}