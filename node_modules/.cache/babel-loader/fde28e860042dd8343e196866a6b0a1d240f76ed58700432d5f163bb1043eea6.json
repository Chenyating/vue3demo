{"ast":null,"code":"import '../../../../lib/styles/components/Drawer.scss';\nexport default {\n  name: 'Drawer',\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    title: {\n      type: String,\n      default: ''\n    },\n    center: {\n      type: Boolean,\n      default: false\n    },\n    appendToBody: {\n      type: Boolean,\n      default: true\n    },\n    height: {\n      type: [Number, String],\n      default: '100%'\n    },\n    bottom: {\n      type: [Number, String],\n      default: 0\n    },\n    direction: {\n      type: String,\n      default: 'rtl'\n    },\n    showSideButton: {\n      type: Boolean,\n      default: false\n    },\n    sideButtonText: {\n      type: String,\n      default: '切换抽屉按钮'\n    },\n    wrapperClosable: {\n      type: Boolean,\n      default: true\n    },\n    modal: {\n      type: Boolean,\n      default: true\n    },\n    withHeader: {\n      type: Boolean,\n      default: true\n    },\n    showSideBadge: {\n      type: Boolean,\n      default: false\n    },\n    sideBadgeValue: {\n      type: [Number, String],\n      default: 0\n    },\n    showClose: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      Random: null\n    };\n  },\n  computed: {\n    handleHeight() {\n      return `height:${this.height}${this.heightUnit}`;\n    },\n    handleBottom() {\n      return `top:${this.getBottom}`;\n    },\n    getBottom() {\n      return `calc(100vh - ${this.height}${this.heightUnit} - ${this.bottom}${this.bottomUnit})`;\n    },\n    handleHeightAndBottom() {\n      return `${this.handleHeight};${this.handleBottom}`;\n    },\n    isDir() {\n      const d = this.direction;\n      return d === 'ltr' || d === 'rtl';\n    },\n    heightUnit() {\n      return typeof this.height === 'number' ? 'px' : this.height.endsWith('%') ? '' : 'px';\n    },\n    bottomUnit() {\n      return typeof this.bottom === 'number' ? 'px' : this.bottom.endsWith('%') ? '' : 'px';\n    },\n    handleBadgeNum() {\n      const v = this.sideBadgeValue;\n      return Number(v) > 999 ? '999+' : v;\n    },\n    enableSide() {\n      return this.showSideButton && this.isDir;\n    }\n  },\n  watch: {\n    visible(value) {\n      const that = this;\n      if (value) {\n        if (this.modal && this.wrapperClosable && this.enableSide) {\n          setTimeout(() => {\n            const v = document.querySelector('.v-modal');\n            v.addEventListener('click', () => {\n              that.$emit('update:visible', !this.visible);\n            });\n          }, 100);\n        }\n        try {\n          window.collectEvent('drawer_show', {\n            dialog_name: that.title\n          });\n        } catch (e) {\n          console.log(e);\n        }\n      }\n      if (this.enableSide) {\n        this.$nextTick(() => {\n          this.moveEl(value);\n        });\n      }\n    },\n    handleBadgeNum(nv) {\n      const dom = `.cube-drawer-side-btn .random-${this.Random}`;\n      console.log(document.querySelector(dom));\n      Array.from(document.querySelectorAll(dom)).forEach(item => {\n        item.innerHTML = nv;\n      });\n    }\n  },\n  mounted() {\n    this.Random = Math.floor(Math.random() * 1000);\n    if (this.enableSide) {\n      this.createEl();\n    }\n  },\n  destroyed() {\n    if (this.enableSide) {\n      const mbtn = document.querySelector('#modal-btn' + this.Random);\n      const sbtn = document.querySelector('#side-btn' + this.Random);\n      mbtn && mbtn.remove();\n      sbtn && sbtn.remove();\n    }\n  },\n  methods: {\n    moveEl(value) {\n      let width = 0;\n      if (value) {\n        const drawer = document.querySelector('.el-drawer__open .el-drawer');\n        width = drawer.clientWidth;\n      }\n      const div1 = document.querySelector('#modal-btn' + this.Random);\n      const div2 = document.querySelector('#side-btn' + this.Random);\n      const w = value ? this.direction === 'rtl' ? -width + 'px' : width + 'px' : '0px';\n      div1.style.transform = `translateX(${w})`;\n      div2.style.transform = `translateX(${w})`;\n    },\n    createEl() {\n      const drawer = '.el-drawer__wrapper';\n      const body = 'body';\n      const modalId = 'modal-btn' + this.Random;\n      const sideId = 'side-btn' + this.Random;\n      const modalDiv = this.createDiv(modalId);\n      const sideDiv = this.createDiv(sideId);\n      sideDiv.addEventListener('click', () => {\n        this.$emit('update:visible', !this.visible);\n      });\n      const div1 = document.querySelector('#modal-btn' + this.Random);\n      if (!div1) {\n        document.querySelector(drawer).appendChild(modalDiv);\n      }\n      const div2 = document.querySelector('#side-btn' + this.Random);\n      if (!div2) {\n        document.querySelector(body).appendChild(sideDiv);\n      }\n    },\n    createDiv(id) {\n      const div = document.createElement('div');\n      const className = 'cube-drawer-side-btn';\n      div.id = id;\n      div.classList.add(className);\n      div.innerHTML = `\n        <span>\n          ${this.sideButtonText}\n        </span>\n        <span>\n          ${this.createSvg()}\n        </span>\n        ${this.showSideBadge ? this.createBadge() : ''}\n      `;\n      div.style.top = this.getBottom;\n      // 判断是左侧还是右侧\n      if (this.direction === 'ltr') {\n        div.style.left = '0';\n      } else {\n        div.style.right = '0';\n      }\n      return div;\n    },\n    createSvg() {\n      return `<svg aria-hidden=\"true\" class=\"close-icon cnd-icon\"><use xlink:href=\"#cnd-cell-phone\"></use></svg>`;\n    },\n    createBadge() {\n      return `<span class=\"badge random-${this.Random}\">${this.handleBadgeNum}</span>`;\n    }\n  }\n};","map":{"version":3,"names":["name","props","visible","type","Boolean","default","title","String","center","appendToBody","height","Number","bottom","direction","showSideButton","sideButtonText","wrapperClosable","modal","withHeader","showSideBadge","sideBadgeValue","showClose","data","Random","computed","handleHeight","heightUnit","handleBottom","getBottom","bottomUnit","handleHeightAndBottom","isDir","d","endsWith","handleBadgeNum","v","enableSide","watch","value","that","setTimeout","document","querySelector","addEventListener","$emit","window","collectEvent","dialog_name","e","console","log","$nextTick","moveEl","nv","dom","Array","from","querySelectorAll","forEach","item","innerHTML","mounted","Math","floor","random","createEl","destroyed","mbtn","sbtn","remove","methods","width","drawer","clientWidth","div1","div2","w","style","transform","body","modalId","sideId","modalDiv","createDiv","sideDiv","appendChild","id","div","createElement","className","classList","add","createSvg","createBadge","top","left","right"],"sources":["node_modules/@cndinfo/cube-design-web/src/components/Drawer/src/index.vue"],"sourcesContent":["<template>\n  <el-drawer\n    v-bind=\"$attrs\"\n    ref=\"drawer\"\n    :style=\"handleHeightAndBottom\"\n    :visible.sync=\"visible\"\n    :append-to-body=\"appendToBody\"\n    :title=\"title\"\n    class=\"cube-drawer__container\"\n    :class=\"center ? 'cube-drawer__center' : ''\"\n    :wrapper-closable=\"wrapperClosable\"\n    :modal=\"modal\"\n    :with-header=\"withHeader\"\n    :direction=\"direction\"\n    :show-close=\"showClose\"\n    v-on=\"$listeners\"\n  >\n    <template v-if=\"!title && withHeader\" slot=\"title\">\n      <span>\n        <slot name=\"title\" >标题</slot>\n      </span>\n    </template>\n    <template slot=\"default\">\n      <div class=\"cube-drawer__body\">\n        <div :class=\"['cube-drawer__content',withHeader?'':'without-header']\">\n          <slot name=\"default\" ></slot>\n        </div>\n        <div class=\"cube-drawer__footer\">\n          <slot name=\"footer\" ></slot>\n        </div>\n      </div>\n    </template>\n  </el-drawer>\n</template>\n<script>\nimport '../../../../lib/styles/components/Drawer.scss'\nexport default {\n  name: 'Drawer',\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    title: {\n      type: String,\n      default: ''\n    },\n    center: {\n      type: Boolean,\n      default: false\n    },\n    appendToBody: {\n      type: Boolean,\n      default: true\n    },\n    height: {\n      type: [Number, String],\n      default: '100%'\n    },\n    bottom: {\n      type: [Number, String],\n      default: 0\n    },\n    direction: {\n      type: String,\n      default: 'rtl'\n    },\n    showSideButton: {\n      type: Boolean,\n      default: false\n    },\n    sideButtonText: {\n      type: String,\n      default: '切换抽屉按钮'\n    },\n    wrapperClosable: {\n      type: Boolean,\n      default: true\n    },\n    modal: {\n      type: Boolean,\n      default: true\n    },\n    withHeader: {\n      type: Boolean,\n      default: true\n    },\n    showSideBadge: {\n      type: Boolean,\n      default: false\n    },\n    sideBadgeValue: {\n      type: [Number, String],\n      default: 0\n    },\n    showClose: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      Random: null\n    }\n  },\n  computed: {\n    handleHeight() {\n      return `height:${this.height}${this.heightUnit}`\n    },\n    handleBottom() {\n      return `top:${this.getBottom}`\n    },\n    getBottom() {\n      return `calc(100vh - ${this.height}${this.heightUnit} - ${this.bottom}${this.bottomUnit})`\n    },\n    handleHeightAndBottom() {\n      return `${this.handleHeight};${this.handleBottom}`\n    },\n    isDir() {\n      const d = this.direction\n      return d === 'ltr' || d === 'rtl'\n    },\n    heightUnit() {\n      return typeof this.height === 'number' ? 'px' : this.height.endsWith('%') ? '' : 'px'\n    },\n    bottomUnit() {\n      return typeof this.bottom === 'number' ? 'px' : this.bottom.endsWith('%') ? '' : 'px'\n    },\n    handleBadgeNum() {\n      const v = this.sideBadgeValue\n      return Number(v) > 999 ? '999+' : v\n    },\n    enableSide() {\n      return this.showSideButton && this.isDir\n    }\n  },\n  watch: {\n    visible(value) {\n      const that = this\n      if (value) {\n        if (this.modal && this.wrapperClosable && this.enableSide) {\n          setTimeout(() => {\n            const v = document.querySelector('.v-modal')\n            v.addEventListener('click', () => {\n              that.$emit('update:visible', !this.visible)\n            })\n          }, 100)\n        }\n        try {\n          window.collectEvent('drawer_show', {\n            dialog_name: that.title\n          })\n        } catch (e) {\n          console.log(e)\n        }\n      }\n      if (this.enableSide) {\n        this.$nextTick(() => {\n          this.moveEl(value)\n        })\n      }\n    },\n    handleBadgeNum(nv) {\n      const dom = `.cube-drawer-side-btn .random-${this.Random}`\n      console.log(document.querySelector(dom))\n      Array.from(document.querySelectorAll(dom)).forEach(item => {\n        item.innerHTML = nv\n      })\n    }\n  },\n  mounted() {\n    this.Random = Math.floor(Math.random() * 1000)\n    if (this.enableSide) {\n      this.createEl()\n    }\n  },\n\n  destroyed() {\n    if (this.enableSide) {\n      const mbtn = document.querySelector('#modal-btn' + this.Random)\n      const sbtn = document.querySelector('#side-btn' + this.Random)\n      mbtn && mbtn.remove()\n      sbtn && sbtn.remove()\n    }\n  },\n  methods: {\n    moveEl(value) {\n      let width = 0\n      if (value) {\n        const drawer = document.querySelector('.el-drawer__open .el-drawer')\n        width = drawer.clientWidth\n      }\n      const div1 = document.querySelector('#modal-btn' + this.Random)\n      const div2 = document.querySelector('#side-btn' + this.Random)\n      const w = value ? this.direction === 'rtl' ? -width + 'px' : width + 'px' : '0px'\n      div1.style.transform = `translateX(${w})`\n      div2.style.transform = `translateX(${w})`\n    },\n    createEl() {\n      const drawer = '.el-drawer__wrapper'\n      const body = 'body'\n      const modalId = 'modal-btn' + this.Random\n      const sideId = 'side-btn' + this.Random\n      const modalDiv = this.createDiv(modalId)\n      const sideDiv = this.createDiv(sideId)\n      sideDiv.addEventListener('click', () => {\n        this.$emit('update:visible', !this.visible)\n      })\n      const div1 = document.querySelector('#modal-btn' + this.Random)\n      if (!div1) {\n        document.querySelector(drawer).appendChild(modalDiv)\n      }\n      const div2 = document.querySelector('#side-btn' + this.Random)\n      if (!div2) {\n        document.querySelector(body).appendChild(sideDiv)\n      }\n    },\n    createDiv(id) {\n      const div = document.createElement('div')\n      const className = 'cube-drawer-side-btn'\n      div.id = id\n      div.classList.add(className)\n      div.innerHTML =\n      `\n        <span>\n          ${this.sideButtonText}\n        </span>\n        <span>\n          ${this.createSvg()}\n        </span>\n        ${this.showSideBadge ? this.createBadge() : ''}\n      `\n      div.style.top = this.getBottom\n      // 判断是左侧还是右侧\n      if (this.direction === 'ltr') {\n        div.style.left = '0'\n      } else {\n        div.style.right = '0'\n      }\n      return div\n    },\n    createSvg() {\n      return `<svg aria-hidden=\"true\" class=\"close-icon cnd-icon\"><use xlink:href=\"#cnd-cell-phone\"></use></svg>`\n    },\n    createBadge() {\n      return `<span class=\"badge random-${this.Random}\">${this.handleBadgeNum}</span>`\n    }\n  }\n}\n</script>\n"],"mappings":"AAmCA;AACA;EACAA,IAAA;EACAC,KAAA;IACAC,OAAA;MACAC,IAAA,EAAAC,OAAA;MACAC,OAAA;IACA;IACAC,KAAA;MACAH,IAAA,EAAAI,MAAA;MACAF,OAAA;IACA;IACAG,MAAA;MACAL,IAAA,EAAAC,OAAA;MACAC,OAAA;IACA;IACAI,YAAA;MACAN,IAAA,EAAAC,OAAA;MACAC,OAAA;IACA;IACAK,MAAA;MACAP,IAAA,GAAAQ,MAAA,EAAAJ,MAAA;MACAF,OAAA;IACA;IACAO,MAAA;MACAT,IAAA,GAAAQ,MAAA,EAAAJ,MAAA;MACAF,OAAA;IACA;IACAQ,SAAA;MACAV,IAAA,EAAAI,MAAA;MACAF,OAAA;IACA;IACAS,cAAA;MACAX,IAAA,EAAAC,OAAA;MACAC,OAAA;IACA;IACAU,cAAA;MACAZ,IAAA,EAAAI,MAAA;MACAF,OAAA;IACA;IACAW,eAAA;MACAb,IAAA,EAAAC,OAAA;MACAC,OAAA;IACA;IACAY,KAAA;MACAd,IAAA,EAAAC,OAAA;MACAC,OAAA;IACA;IACAa,UAAA;MACAf,IAAA,EAAAC,OAAA;MACAC,OAAA;IACA;IACAc,aAAA;MACAhB,IAAA,EAAAC,OAAA;MACAC,OAAA;IACA;IACAe,cAAA;MACAjB,IAAA,GAAAQ,MAAA,EAAAJ,MAAA;MACAF,OAAA;IACA;IACAgB,SAAA;MACAlB,IAAA,EAAAC,OAAA;MACAC,OAAA;IACA;EACA;EACAiB,KAAA;IACA;MACAC,MAAA;IACA;EACA;EACAC,QAAA;IACAC,aAAA;MACA,sBAAAf,MAAA,QAAAgB,UAAA;IACA;IACAC,aAAA;MACA,mBAAAC,SAAA;IACA;IACAA,UAAA;MACA,4BAAAlB,MAAA,QAAAgB,UAAA,WAAAd,MAAA,QAAAiB,UAAA;IACA;IACAC,sBAAA;MACA,eAAAL,YAAA,SAAAE,YAAA;IACA;IACAI,MAAA;MACA,MAAAC,CAAA,QAAAnB,SAAA;MACA,OAAAmB,CAAA,cAAAA,CAAA;IACA;IACAN,WAAA;MACA,mBAAAhB,MAAA,4BAAAA,MAAA,CAAAuB,QAAA;IACA;IACAJ,WAAA;MACA,mBAAAjB,MAAA,4BAAAA,MAAA,CAAAqB,QAAA;IACA;IACAC,eAAA;MACA,MAAAC,CAAA,QAAAf,cAAA;MACA,OAAAT,MAAA,CAAAwB,CAAA,mBAAAA,CAAA;IACA;IACAC,WAAA;MACA,YAAAtB,cAAA,SAAAiB,KAAA;IACA;EACA;EACAM,KAAA;IACAnC,QAAAoC,KAAA;MACA,MAAAC,IAAA;MACA,IAAAD,KAAA;QACA,SAAArB,KAAA,SAAAD,eAAA,SAAAoB,UAAA;UACAI,UAAA;YACA,MAAAL,CAAA,GAAAM,QAAA,CAAAC,aAAA;YACAP,CAAA,CAAAQ,gBAAA;cACAJ,IAAA,CAAAK,KAAA,yBAAA1C,OAAA;YACA;UACA;QACA;QACA;UACA2C,MAAA,CAAAC,YAAA;YACAC,WAAA,EAAAR,IAAA,CAAAjC;UACA;QACA,SAAA0C,CAAA;UACAC,OAAA,CAAAC,GAAA,CAAAF,CAAA;QACA;MACA;MACA,SAAAZ,UAAA;QACA,KAAAe,SAAA;UACA,KAAAC,MAAA,CAAAd,KAAA;QACA;MACA;IACA;IACAJ,eAAAmB,EAAA;MACA,MAAAC,GAAA,yCAAA/B,MAAA;MACA0B,OAAA,CAAAC,GAAA,CAAAT,QAAA,CAAAC,aAAA,CAAAY,GAAA;MACAC,KAAA,CAAAC,IAAA,CAAAf,QAAA,CAAAgB,gBAAA,CAAAH,GAAA,GAAAI,OAAA,CAAAC,IAAA;QACAA,IAAA,CAAAC,SAAA,GAAAP,EAAA;MACA;IACA;EACA;EACAQ,QAAA;IACA,KAAAtC,MAAA,GAAAuC,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,MAAA;IACA,SAAA5B,UAAA;MACA,KAAA6B,QAAA;IACA;EACA;EAEAC,UAAA;IACA,SAAA9B,UAAA;MACA,MAAA+B,IAAA,GAAA1B,QAAA,CAAAC,aAAA,qBAAAnB,MAAA;MACA,MAAA6C,IAAA,GAAA3B,QAAA,CAAAC,aAAA,oBAAAnB,MAAA;MACA4C,IAAA,IAAAA,IAAA,CAAAE,MAAA;MACAD,IAAA,IAAAA,IAAA,CAAAC,MAAA;IACA;EACA;EACAC,OAAA;IACAlB,OAAAd,KAAA;MACA,IAAAiC,KAAA;MACA,IAAAjC,KAAA;QACA,MAAAkC,MAAA,GAAA/B,QAAA,CAAAC,aAAA;QACA6B,KAAA,GAAAC,MAAA,CAAAC,WAAA;MACA;MACA,MAAAC,IAAA,GAAAjC,QAAA,CAAAC,aAAA,qBAAAnB,MAAA;MACA,MAAAoD,IAAA,GAAAlC,QAAA,CAAAC,aAAA,oBAAAnB,MAAA;MACA,MAAAqD,CAAA,GAAAtC,KAAA,QAAAzB,SAAA,cAAA0D,KAAA,UAAAA,KAAA;MACAG,IAAA,CAAAG,KAAA,CAAAC,SAAA,iBAAAF,CAAA;MACAD,IAAA,CAAAE,KAAA,CAAAC,SAAA,iBAAAF,CAAA;IACA;IACAX,SAAA;MACA,MAAAO,MAAA;MACA,MAAAO,IAAA;MACA,MAAAC,OAAA,sBAAAzD,MAAA;MACA,MAAA0D,MAAA,qBAAA1D,MAAA;MACA,MAAA2D,QAAA,QAAAC,SAAA,CAAAH,OAAA;MACA,MAAAI,OAAA,QAAAD,SAAA,CAAAF,MAAA;MACAG,OAAA,CAAAzC,gBAAA;QACA,KAAAC,KAAA,yBAAA1C,OAAA;MACA;MACA,MAAAwE,IAAA,GAAAjC,QAAA,CAAAC,aAAA,qBAAAnB,MAAA;MACA,KAAAmD,IAAA;QACAjC,QAAA,CAAAC,aAAA,CAAA8B,MAAA,EAAAa,WAAA,CAAAH,QAAA;MACA;MACA,MAAAP,IAAA,GAAAlC,QAAA,CAAAC,aAAA,oBAAAnB,MAAA;MACA,KAAAoD,IAAA;QACAlC,QAAA,CAAAC,aAAA,CAAAqC,IAAA,EAAAM,WAAA,CAAAD,OAAA;MACA;IACA;IACAD,UAAAG,EAAA;MACA,MAAAC,GAAA,GAAA9C,QAAA,CAAA+C,aAAA;MACA,MAAAC,SAAA;MACAF,GAAA,CAAAD,EAAA,GAAAA,EAAA;MACAC,GAAA,CAAAG,SAAA,CAAAC,GAAA,CAAAF,SAAA;MACAF,GAAA,CAAA3B,SAAA,GACA;AACA;AACA,iBAAA7C,cAAA;AACA;AACA;AACA,iBAAA6E,SAAA;AACA;AACA,eAAAzE,aAAA,QAAA0E,WAAA;AACA;MACAN,GAAA,CAAAV,KAAA,CAAAiB,GAAA,QAAAlE,SAAA;MACA;MACA,SAAAf,SAAA;QACA0E,GAAA,CAAAV,KAAA,CAAAkB,IAAA;MACA;QACAR,GAAA,CAAAV,KAAA,CAAAmB,KAAA;MACA;MACA,OAAAT,GAAA;IACA;IACAK,UAAA;MACA;IACA;IACAC,YAAA;MACA,yCAAAtE,MAAA,UAAAW,cAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}